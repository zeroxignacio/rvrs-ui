{"ast":null,"code":"\"use strict\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nconst logger = new Logger(version);\nexport function defineReadOnly(object, name, value) {\n  Object.defineProperty(object, name, {\n    enumerable: true,\n    value: value,\n    writable: false\n  });\n} // Crawl up the constructor chain to find a static method\n\nexport function getStatic(ctor, key) {\n  for (let i = 0; i < 32; i++) {\n    if (ctor[key]) {\n      return ctor[key];\n    }\n\n    if (!ctor.prototype || typeof ctor.prototype !== \"object\") {\n      break;\n    }\n\n    ctor = Object.getPrototypeOf(ctor.prototype).constructor;\n  }\n\n  return null;\n}\nexport function resolveProperties(object) {\n  return __awaiter(this, void 0, void 0, function* () {\n    const promises = Object.keys(object).map(key => {\n      const value = object[key];\n      return Promise.resolve(value).then(v => ({\n        key: key,\n        value: v\n      }));\n    });\n    const results = yield Promise.all(promises);\n    return results.reduce((accum, result) => {\n      accum[result.key] = result.value;\n      return accum;\n    }, {});\n  });\n}\nexport function checkProperties(object, properties) {\n  if (!object || typeof object !== \"object\") {\n    logger.throwArgumentError(\"invalid object\", \"object\", object);\n  }\n\n  Object.keys(object).forEach(key => {\n    if (!properties[key]) {\n      logger.throwArgumentError(\"invalid object key - \" + key, \"transaction:\" + key, object);\n    }\n  });\n}\nexport function shallowCopy(object) {\n  const result = {};\n\n  for (const key in object) {\n    result[key] = object[key];\n  }\n\n  return result;\n}\nconst opaque = {\n  bigint: true,\n  boolean: true,\n  \"function\": true,\n  number: true,\n  string: true\n};\n\nfunction _isFrozen(object) {\n  // Opaque objects are not mutable, so safe to copy by assignment\n  if (object === undefined || object === null || opaque[typeof object]) {\n    return true;\n  }\n\n  if (Array.isArray(object) || typeof object === \"object\") {\n    if (!Object.isFrozen(object)) {\n      return false;\n    }\n\n    const keys = Object.keys(object);\n\n    for (let i = 0; i < keys.length; i++) {\n      if (!_isFrozen(object[keys[i]])) {\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  return logger.throwArgumentError(`Cannot deepCopy ${typeof object}`, \"object\", object);\n} // Returns a new copy of object, such that no properties may be replaced.\n// New properties may be added only to objects.\n\n\nfunction _deepCopy(object) {\n  if (_isFrozen(object)) {\n    return object;\n  } // Arrays are mutable, so we need to create a copy\n\n\n  if (Array.isArray(object)) {\n    return Object.freeze(object.map(item => deepCopy(item)));\n  }\n\n  if (typeof object === \"object\") {\n    const result = {};\n\n    for (const key in object) {\n      const value = object[key];\n\n      if (value === undefined) {\n        continue;\n      }\n\n      defineReadOnly(result, key, deepCopy(value));\n    }\n\n    return result;\n  }\n\n  return logger.throwArgumentError(`Cannot deepCopy ${typeof object}`, \"object\", object);\n}\n\nexport function deepCopy(object) {\n  return _deepCopy(object);\n}\nexport class Description {\n  constructor(info) {\n    for (const key in info) {\n      this[key] = deepCopy(info[key]);\n    }\n  }\n\n}","map":{"version":3,"mappings":"AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAEA,SAASA,MAAT,QAAuB,uBAAvB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,MAAMC,MAAM,GAAG,IAAIF,MAAJ,CAAWC,OAAX,CAAf;AAEA,OAAM,SAAUE,cAAV,CAA+CC,MAA/C,EAA0DC,IAA1D,EAAmEC,KAAnE,EAA8E;AAChFC,QAAM,CAACC,cAAP,CAAsBJ,MAAtB,EAA8BC,IAA9B,EAAoC;AAChCI,cAAU,EAAE,IADoB;AAEhCH,SAAK,EAAEA,KAFyB;AAGhCI,YAAQ,EAAE;AAHsB,GAApC;AAKH,C,CAED;;AACA,OAAM,SAAUC,SAAV,CAAuBC,IAAvB,EAAkCC,GAAlC,EAA6C;AAC/C,OAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAG,EAApB,EAAwBA,CAAC,EAAzB,EAA6B;AACzB,QAAIF,IAAI,CAACC,GAAD,CAAR,EAAe;AAAE,aAAOD,IAAI,CAACC,GAAD,CAAX;AAAmB;;AACpC,QAAI,CAACD,IAAI,CAACG,SAAN,IAAmB,OAAOH,IAAI,CAACG,SAAZ,KAA2B,QAAlD,EAA4D;AAAE;AAAQ;;AACtEH,QAAI,GAAGL,MAAM,CAACS,cAAP,CAAsBJ,IAAI,CAACG,SAA3B,EAAsCE,WAA7C;AACH;;AACD,SAAO,IAAP;AACH;AASD,OAAM,SAAgBC,iBAAhB,CAAqCd,MAArC,EAAoE;;AACtE,UAAMe,QAAQ,GAA2BZ,MAAM,CAACa,IAAP,CAAYhB,MAAZ,EAAoBiB,GAApB,CAAyBR,GAAD,IAAQ;AACrE,YAAMP,KAAK,GAAGF,MAAM,CAAsBS,GAAtB,CAApB;AACA,aAAOS,OAAO,CAACC,OAAR,CAAgBjB,KAAhB,EAAuBkB,IAAvB,CAA6BC,CAAD,KAAQ;AAAEZ,WAAG,EAAEA,GAAP;AAAYP,aAAK,EAAEmB;AAAnB,OAAR,CAA5B,CAAP;AACH,KAHwC,CAAzC;AAKA,UAAMC,OAAO,GAAG,MAAMJ,OAAO,CAACK,GAAR,CAAYR,QAAZ,CAAtB;AAEA,WAAOO,OAAO,CAACE,MAAR,CAAe,CAACC,KAAD,EAAQC,MAAR,KAAkB;AACpCD,WAAK,CAAWC,MAAM,CAACjB,GAAlB,CAAL,GAA+BiB,MAAM,CAACxB,KAAtC;AACA,aAAOuB,KAAP;AACH,KAHM,EAGD,EAHC,CAAP;AAIH;AAAA;AAED,OAAM,SAAUE,eAAV,CAA0B3B,MAA1B,EAAuC4B,UAAvC,EAAgF;AAClF,MAAI,CAAC5B,MAAD,IAAW,OAAOA,MAAP,KAAmB,QAAlC,EAA4C;AACxCF,UAAM,CAAC+B,kBAAP,CAA0B,gBAA1B,EAA4C,QAA5C,EAAsD7B,MAAtD;AACH;;AAEDG,QAAM,CAACa,IAAP,CAAYhB,MAAZ,EAAoB8B,OAApB,CAA6BrB,GAAD,IAAQ;AAChC,QAAI,CAACmB,UAAU,CAACnB,GAAD,CAAf,EAAsB;AAClBX,YAAM,CAAC+B,kBAAP,CAA0B,0BAA0BpB,GAApD,EAAyD,iBAAiBA,GAA1E,EAA+ET,MAA/E;AACH;AACJ,GAJD;AAKH;AAED,OAAM,SAAU+B,WAAV,CAAyB/B,MAAzB,EAAkC;AACpC,QAAM0B,MAAM,GAAQ,EAApB;;AACA,OAAK,MAAMjB,GAAX,IAAkBT,MAAlB,EAA0B;AAAE0B,UAAM,CAACjB,GAAD,CAAN,GAAcT,MAAM,CAACS,GAAD,CAApB;AAA4B;;AACxD,SAAOiB,MAAP;AACH;AAED,MAAMM,MAAM,GAA+B;AAAEC,QAAM,EAAE,IAAV;AAAgBC,SAAO,EAAE,IAAzB;AAA+B,cAAY,IAA3C;AAAiDC,QAAM,EAAE,IAAzD;AAA+DC,QAAM,EAAE;AAAvE,CAA3C;;AAEA,SAASC,SAAT,CAAmBrC,MAAnB,EAA8B;AAE1B;AACA,MAAIA,MAAM,KAAKsC,SAAX,IAAwBtC,MAAM,KAAK,IAAnC,IAA2CgC,MAAM,CAAC,OAAOhC,MAAR,CAArD,EAAuE;AAAE,WAAO,IAAP;AAAc;;AAEvF,MAAIuC,KAAK,CAACC,OAAN,CAAcxC,MAAd,KAAyB,OAAOA,MAAP,KAAmB,QAAhD,EAA0D;AACtD,QAAI,CAACG,MAAM,CAACsC,QAAP,CAAgBzC,MAAhB,CAAL,EAA8B;AAAE,aAAO,KAAP;AAAe;;AAE/C,UAAMgB,IAAI,GAAGb,MAAM,CAACa,IAAP,CAAYhB,MAAZ,CAAb;;AACA,SAAK,IAAIU,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGM,IAAI,CAAC0B,MAAzB,EAAiChC,CAAC,EAAlC,EAAsC;AAClC,UAAI,CAAC2B,SAAS,CAACrC,MAAM,CAACgB,IAAI,CAACN,CAAD,CAAL,CAAP,CAAd,EAAiC;AAAE,eAAO,KAAP;AAAe;AACrD;;AAED,WAAO,IAAP;AACH;;AAED,SAAOZ,MAAM,CAAC+B,kBAAP,CAA0B,mBAAoB,OAAO7B,MAAQ,EAA7D,EAAiE,QAAjE,EAA2EA,MAA3E,CAAP;AACH,C,CAED;AACA;;;AACA,SAAS2C,SAAT,CAAmB3C,MAAnB,EAA8B;AAE1B,MAAIqC,SAAS,CAACrC,MAAD,CAAb,EAAuB;AAAE,WAAOA,MAAP;AAAgB,GAFf,CAI1B;;;AACA,MAAIuC,KAAK,CAACC,OAAN,CAAcxC,MAAd,CAAJ,EAA2B;AACvB,WAAOG,MAAM,CAACyC,MAAP,CAAc5C,MAAM,CAACiB,GAAP,CAAY4B,IAAD,IAAUC,QAAQ,CAACD,IAAD,CAA7B,CAAd,CAAP;AACH;;AAED,MAAI,OAAO7C,MAAP,KAAmB,QAAvB,EAAiC;AAC7B,UAAM0B,MAAM,GAA6B,EAAzC;;AACA,SAAK,MAAMjB,GAAX,IAAkBT,MAAlB,EAA0B;AACtB,YAAME,KAAK,GAAGF,MAAM,CAACS,GAAD,CAApB;;AACA,UAAIP,KAAK,KAAKoC,SAAd,EAAyB;AAAE;AAAW;;AACtCvC,oBAAc,CAAC2B,MAAD,EAASjB,GAAT,EAAcqC,QAAQ,CAAC5C,KAAD,CAAtB,CAAd;AACH;;AAED,WAAOwB,MAAP;AACH;;AAED,SAAO5B,MAAM,CAAC+B,kBAAP,CAA0B,mBAAoB,OAAO7B,MAAQ,EAA7D,EAAiE,QAAjE,EAA2EA,MAA3E,CAAP;AACH;;AAED,OAAM,SAAU8C,QAAV,CAAsB9C,MAAtB,EAA+B;AACjC,SAAO2C,SAAS,CAAC3C,MAAD,CAAhB;AACH;AAED,OAAM,MAAO+C,WAAP,CAAkB;AACpBlC,cAAYmC,IAAZ,EAA4C;AACxC,SAAK,MAAMvC,GAAX,IAAkBuC,IAAlB,EAAwB;AACd,WAAMvC,GAAN,IAAaqC,QAAQ,CAACE,IAAI,CAACvC,GAAD,CAAL,CAArB;AACT;AACJ;;AALmB","names":["Logger","version","logger","defineReadOnly","object","name","value","Object","defineProperty","enumerable","writable","getStatic","ctor","key","i","prototype","getPrototypeOf","constructor","resolveProperties","promises","keys","map","Promise","resolve","then","v","results","all","reduce","accum","result","checkProperties","properties","throwArgumentError","forEach","shallowCopy","opaque","bigint","boolean","number","string","_isFrozen","undefined","Array","isArray","isFrozen","length","_deepCopy","freeze","item","deepCopy","Description","info"],"sourceRoot":"","sources":["../src.ts/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}