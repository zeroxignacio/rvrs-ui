{"ast":null,"code":"\"use strict\";\n\nvar _regeneratorRuntime = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\");\n\nvar _classCallCheck = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CrowdinApi = exports.BooleanInt = exports.PatchOperation = exports.HttpClientType = void 0;\n\nvar axiosProvider_1 = require(\"./internal/axios/axiosProvider\");\n\nvar fetchClient_1 = require(\"./internal/fetch/fetchClient\");\n\nvar retry_1 = require(\"./internal/retry\");\n\nvar HttpClientType;\n\n(function (HttpClientType) {\n  HttpClientType[\"AXIOS\"] = \"axios\";\n  HttpClientType[\"FETCH\"] = \"fetch\";\n})(HttpClientType = exports.HttpClientType || (exports.HttpClientType = {}));\n\nvar PatchOperation;\n\n(function (PatchOperation) {\n  PatchOperation[\"ADD\"] = \"add\";\n  PatchOperation[\"REMOVE\"] = \"remove\";\n  PatchOperation[\"REPLACE\"] = \"replace\";\n  PatchOperation[\"MOVE\"] = \"move\";\n  PatchOperation[\"copy\"] = \"copy\";\n  PatchOperation[\"TEST\"] = \"test\";\n})(PatchOperation = exports.PatchOperation || (exports.PatchOperation = {}));\n\nvar BooleanInt;\n\n(function (BooleanInt) {\n  BooleanInt[BooleanInt[\"TRUE\"] = 1] = \"TRUE\";\n  BooleanInt[BooleanInt[\"FALSE\"] = 0] = \"FALSE\";\n})(BooleanInt = exports.BooleanInt || (exports.BooleanInt = {}));\n\nvar CrowdinApi = /*#__PURE__*/function () {\n  /**\n   * @param credentials credentials\n   * @param config optional configuration of the client\n   */\n  function CrowdinApi(credentials, config) {\n    _classCallCheck(this, CrowdinApi);\n\n    this.fetchAllFlag = false;\n    this.token = credentials.token;\n    this.organization = credentials.organization;\n\n    if (!!credentials.baseUrl) {\n      this.url = credentials.baseUrl;\n    } else {\n      if (!!this.organization) {\n        this.url = \"https://\".concat(this.organization, \".\").concat(CrowdinApi.CROWDIN_URL_SUFFIX);\n      } else {\n        this.url = \"https://\".concat(CrowdinApi.CROWDIN_URL_SUFFIX);\n      }\n    }\n\n    var retryConfig;\n\n    if (!!config && !!config.retryConfig) {\n      retryConfig = config.retryConfig;\n    } else {\n      retryConfig = {\n        waitInterval: 0,\n        retries: 0,\n        conditions: []\n      };\n    }\n\n    this.retryService = new retry_1.RetryService(retryConfig);\n    this.config = config;\n  }\n\n  _createClass(CrowdinApi, [{\n    key: \"addQueryParam\",\n    value: function addQueryParam(url, name, value) {\n      if (!!value) {\n        url += new RegExp(/\\?.+=.*/g).test(url) ? '&' : '?';\n        url += \"\".concat(name, \"=\").concat(value);\n      }\n\n      return url;\n    }\n  }, {\n    key: \"defaultConfig\",\n    value: function defaultConfig() {\n      var config = {\n        headers: {\n          Authorization: \"Bearer \".concat(this.token)\n        }\n      };\n\n      if (!!this.config) {\n        if (!!this.config.userAgent) {\n          config.headers['User-Agent'] = this.config.userAgent;\n        }\n\n        if (!!this.config.integrationUserAgent) {\n          config.headers['X-Crowdin-Integrations-User-Agent'] = this.config.integrationUserAgent;\n        }\n      }\n\n      return config;\n    }\n  }, {\n    key: \"httpClient\",\n    get: function get() {\n      if (!!this.config) {\n        if (!!this.config.httpClient) {\n          return this.config.httpClient;\n        }\n\n        if (!!this.config.httpClientType) {\n          switch (this.config.httpClientType) {\n            case HttpClientType.AXIOS:\n              return CrowdinApi.AXIOS_INSTANCE;\n\n            case HttpClientType.FETCH:\n              return CrowdinApi.FETCH_INSTANCE;\n\n            default:\n              return CrowdinApi.AXIOS_INSTANCE;\n          }\n        }\n      }\n\n      return CrowdinApi.AXIOS_INSTANCE;\n    } // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n\n  }, {\n    key: \"withFetchAll\",\n    value: function withFetchAll(maxLimit) {\n      this.fetchAllFlag = true;\n      this.maxLimit = maxLimit;\n      return this;\n    }\n  }, {\n    key: \"getList\",\n    value: function getList(url, limit, offset, config) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var conf, maxAmount;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                conf = config || this.defaultConfig();\n\n                if (!this.fetchAllFlag) {\n                  _context.next = 10;\n                  break;\n                }\n\n                this.fetchAllFlag = false;\n                maxAmount = this.maxLimit;\n                this.maxLimit = undefined;\n                _context.next = 7;\n                return this.fetchAll(url, conf, maxAmount);\n\n              case 7:\n                return _context.abrupt(\"return\", _context.sent);\n\n              case 10:\n                url = this.addQueryParam(url, 'limit', limit);\n                url = this.addQueryParam(url, 'offset', offset);\n                return _context.abrupt(\"return\", this.get(url, conf));\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this);\n      }));\n    }\n  }, {\n    key: \"fetchAll\",\n    value: function fetchAll(url, config, maxAmount) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var limit, offset, resp, urlWithPagination, e;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                limit = 500;\n\n                if (!!maxAmount && maxAmount < limit) {\n                  limit = maxAmount;\n                }\n\n                offset = 0;\n\n              case 3:\n                urlWithPagination = this.addQueryParam(url, 'limit', limit);\n                urlWithPagination = this.addQueryParam(urlWithPagination, 'offset', offset);\n                _context2.next = 7;\n                return this.get(urlWithPagination, config);\n\n              case 7:\n                e = _context2.sent;\n\n                if (!resp) {\n                  resp = e;\n                } else {\n                  resp.data = resp.data.concat(e.data);\n                  resp.pagination.limit += e.data.length;\n                }\n\n                if (!(e.data.length < limit || !!maxAmount && resp.data.length >= maxAmount)) {\n                  _context2.next = 13;\n                  break;\n                }\n\n                return _context2.abrupt(\"break\", 17);\n\n              case 13:\n                offset += limit;\n\n              case 14:\n                if (!!maxAmount) {\n                  if (maxAmount < resp.data.length + limit) {\n                    limit = maxAmount - resp.data.length;\n                  }\n                }\n\n              case 15:\n                _context2.next = 3;\n                break;\n\n              case 17:\n                return _context2.abrupt(\"return\", resp);\n\n              case 18:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this);\n      }));\n    } //Http overrides\n\n  }, {\n    key: \"get\",\n    value: function get(url, config) {\n      var _this = this;\n\n      return this.retryService.executeAsyncFunc(function () {\n        return _this.httpClient.get(url, config);\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(url, config) {\n      var _this2 = this;\n\n      return this.retryService.executeAsyncFunc(function () {\n        return _this2.httpClient.delete(url, config);\n      });\n    }\n  }, {\n    key: \"head\",\n    value: function head(url, config) {\n      var _this3 = this;\n\n      return this.retryService.executeAsyncFunc(function () {\n        return _this3.httpClient.head(url, config);\n      });\n    }\n  }, {\n    key: \"post\",\n    value: function post(url, data, config) {\n      var _this4 = this;\n\n      return this.retryService.executeAsyncFunc(function () {\n        return _this4.httpClient.post(url, data, config);\n      });\n    }\n  }, {\n    key: \"put\",\n    value: function put(url, data, config) {\n      var _this5 = this;\n\n      return this.retryService.executeAsyncFunc(function () {\n        return _this5.httpClient.put(url, data, config);\n      });\n    }\n  }, {\n    key: \"patch\",\n    value: function patch(url, data, config) {\n      var _this6 = this;\n\n      return this.retryService.executeAsyncFunc(function () {\n        return _this6.httpClient.patch(url, data, config);\n      });\n    }\n  }]);\n\n  return CrowdinApi;\n}();\n\nexports.CrowdinApi = CrowdinApi;\nCrowdinApi.CROWDIN_URL_SUFFIX = 'api.crowdin.com/api/v2';\nCrowdinApi.AXIOS_INSTANCE = new axiosProvider_1.AxisProvider().axios;\nCrowdinApi.FETCH_INSTANCE = new fetchClient_1.FetchClient();","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/@crowdin/crowdin-api-client/out/core/index.js"],"names":["__awaiter","thisArg","_arguments","P","generator","adopt","value","resolve","Promise","reject","fulfilled","step","next","e","rejected","result","done","then","apply","Object","defineProperty","exports","CrowdinApi","BooleanInt","PatchOperation","HttpClientType","axiosProvider_1","require","fetchClient_1","retry_1","credentials","config","fetchAllFlag","token","organization","baseUrl","url","CROWDIN_URL_SUFFIX","retryConfig","waitInterval","retries","conditions","retryService","RetryService","name","RegExp","test","headers","Authorization","userAgent","integrationUserAgent","httpClient","httpClientType","AXIOS","AXIOS_INSTANCE","FETCH","FETCH_INSTANCE","maxLimit","limit","offset","conf","defaultConfig","maxAmount","undefined","fetchAll","addQueryParam","get","urlWithPagination","resp","data","concat","pagination","length","executeAsyncFunc","delete","head","post","put","patch","AxisProvider","axios","FetchClient"],"mappings":"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","sourcesContent":["\"use strict\";\nvar __awaiter = (this && this.__awaiter) || function (thisArg, _arguments, P, generator) {\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n    return new (P || (P = Promise))(function (resolve, reject) {\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\n    });\n};\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.CrowdinApi = exports.BooleanInt = exports.PatchOperation = exports.HttpClientType = void 0;\nconst axiosProvider_1 = require(\"./internal/axios/axiosProvider\");\nconst fetchClient_1 = require(\"./internal/fetch/fetchClient\");\nconst retry_1 = require(\"./internal/retry\");\nvar HttpClientType;\n(function (HttpClientType) {\n    HttpClientType[\"AXIOS\"] = \"axios\";\n    HttpClientType[\"FETCH\"] = \"fetch\";\n})(HttpClientType = exports.HttpClientType || (exports.HttpClientType = {}));\nvar PatchOperation;\n(function (PatchOperation) {\n    PatchOperation[\"ADD\"] = \"add\";\n    PatchOperation[\"REMOVE\"] = \"remove\";\n    PatchOperation[\"REPLACE\"] = \"replace\";\n    PatchOperation[\"MOVE\"] = \"move\";\n    PatchOperation[\"copy\"] = \"copy\";\n    PatchOperation[\"TEST\"] = \"test\";\n})(PatchOperation = exports.PatchOperation || (exports.PatchOperation = {}));\nvar BooleanInt;\n(function (BooleanInt) {\n    BooleanInt[BooleanInt[\"TRUE\"] = 1] = \"TRUE\";\n    BooleanInt[BooleanInt[\"FALSE\"] = 0] = \"FALSE\";\n})(BooleanInt = exports.BooleanInt || (exports.BooleanInt = {}));\nclass CrowdinApi {\n    /**\n     * @param credentials credentials\n     * @param config optional configuration of the client\n     */\n    constructor(credentials, config) {\n        this.fetchAllFlag = false;\n        this.token = credentials.token;\n        this.organization = credentials.organization;\n        if (!!credentials.baseUrl) {\n            this.url = credentials.baseUrl;\n        }\n        else {\n            if (!!this.organization) {\n                this.url = `https://${this.organization}.${CrowdinApi.CROWDIN_URL_SUFFIX}`;\n            }\n            else {\n                this.url = `https://${CrowdinApi.CROWDIN_URL_SUFFIX}`;\n            }\n        }\n        let retryConfig;\n        if (!!config && !!config.retryConfig) {\n            retryConfig = config.retryConfig;\n        }\n        else {\n            retryConfig = {\n                waitInterval: 0,\n                retries: 0,\n                conditions: [],\n            };\n        }\n        this.retryService = new retry_1.RetryService(retryConfig);\n        this.config = config;\n    }\n    addQueryParam(url, name, value) {\n        if (!!value) {\n            url += new RegExp(/\\?.+=.*/g).test(url) ? '&' : '?';\n            url += `${name}=${value}`;\n        }\n        return url;\n    }\n    defaultConfig() {\n        const config = {\n            headers: {\n                Authorization: `Bearer ${this.token}`,\n            },\n        };\n        if (!!this.config) {\n            if (!!this.config.userAgent) {\n                config.headers['User-Agent'] = this.config.userAgent;\n            }\n            if (!!this.config.integrationUserAgent) {\n                config.headers['X-Crowdin-Integrations-User-Agent'] = this.config.integrationUserAgent;\n            }\n        }\n        return config;\n    }\n    get httpClient() {\n        if (!!this.config) {\n            if (!!this.config.httpClient) {\n                return this.config.httpClient;\n            }\n            if (!!this.config.httpClientType) {\n                switch (this.config.httpClientType) {\n                    case HttpClientType.AXIOS:\n                        return CrowdinApi.AXIOS_INSTANCE;\n                    case HttpClientType.FETCH:\n                        return CrowdinApi.FETCH_INSTANCE;\n                    default:\n                        return CrowdinApi.AXIOS_INSTANCE;\n                }\n            }\n        }\n        return CrowdinApi.AXIOS_INSTANCE;\n    }\n    // eslint-disable-next-line @typescript-eslint/explicit-function-return-type\n    withFetchAll(maxLimit) {\n        this.fetchAllFlag = true;\n        this.maxLimit = maxLimit;\n        return this;\n    }\n    getList(url, limit, offset, config) {\n        return __awaiter(this, void 0, void 0, function* () {\n            const conf = config || this.defaultConfig();\n            if (this.fetchAllFlag) {\n                this.fetchAllFlag = false;\n                const maxAmount = this.maxLimit;\n                this.maxLimit = undefined;\n                return yield this.fetchAll(url, conf, maxAmount);\n            }\n            else {\n                url = this.addQueryParam(url, 'limit', limit);\n                url = this.addQueryParam(url, 'offset', offset);\n                return this.get(url, conf);\n            }\n        });\n    }\n    fetchAll(url, config, maxAmount) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let limit = 500;\n            if (!!maxAmount && maxAmount < limit) {\n                limit = maxAmount;\n            }\n            let offset = 0;\n            let resp;\n            for (;;) {\n                let urlWithPagination = this.addQueryParam(url, 'limit', limit);\n                urlWithPagination = this.addQueryParam(urlWithPagination, 'offset', offset);\n                const e = yield this.get(urlWithPagination, config);\n                if (!resp) {\n                    resp = e;\n                }\n                else {\n                    resp.data = resp.data.concat(e.data);\n                    resp.pagination.limit += e.data.length;\n                }\n                if (e.data.length < limit || (!!maxAmount && resp.data.length >= maxAmount)) {\n                    break;\n                }\n                else {\n                    offset += limit;\n                }\n                if (!!maxAmount) {\n                    if (maxAmount < resp.data.length + limit) {\n                        limit = maxAmount - resp.data.length;\n                    }\n                }\n            }\n            return resp;\n        });\n    }\n    //Http overrides\n    get(url, config) {\n        return this.retryService.executeAsyncFunc(() => this.httpClient.get(url, config));\n    }\n    delete(url, config) {\n        return this.retryService.executeAsyncFunc(() => this.httpClient.delete(url, config));\n    }\n    head(url, config) {\n        return this.retryService.executeAsyncFunc(() => this.httpClient.head(url, config));\n    }\n    post(url, data, config) {\n        return this.retryService.executeAsyncFunc(() => this.httpClient.post(url, data, config));\n    }\n    put(url, data, config) {\n        return this.retryService.executeAsyncFunc(() => this.httpClient.put(url, data, config));\n    }\n    patch(url, data, config) {\n        return this.retryService.executeAsyncFunc(() => this.httpClient.patch(url, data, config));\n    }\n}\nexports.CrowdinApi = CrowdinApi;\nCrowdinApi.CROWDIN_URL_SUFFIX = 'api.crowdin.com/api/v2';\nCrowdinApi.AXIOS_INSTANCE = new axiosProvider_1.AxisProvider().axios;\nCrowdinApi.FETCH_INSTANCE = new fetchClient_1.FetchClient();\n"]},"metadata":{},"sourceType":"script"}