{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$(),\n    _s8 = $RefreshSig$(),\n    _s9 = $RefreshSig$(),\n    _s10 = $RefreshSig$(),\n    _s11 = $RefreshSig$(),\n    _s12 = $RefreshSig$(),\n    _s13 = $RefreshSig$(),\n    _s14 = $RefreshSig$(),\n    _s15 = $RefreshSig$(),\n    _s16 = $RefreshSig$(),\n    _s17 = $RefreshSig$(),\n    _s18 = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport useWeb3 from 'hooks/useWeb3';\nimport { getMasterChefAddress, getCakeAddress, getLotteryAddress, getLotteryTicketAddress, getWheelAddress, getWbnbAddress, getWheel2Address, getSousChefAddress, getAutoRvrsAddress, getAirdropAddress } from 'utils/addressHelpers';\nimport { pools2Config } from 'config/constants';\nimport ifo from 'config/abi/ifo.json';\nimport erc20 from 'config/abi/erc20.json';\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json';\nimport devFeeProcessor from 'config/abi/devFeeProcessor.json';\nimport nftSale from 'config/abi/nftSale.json';\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json';\nimport lottery from 'config/abi/lottery.json';\nimport wheel from 'config/abi/wheel.json';\nimport lotteryTicket from 'config/abi/lotteryNft.json';\nimport masterChef from 'config/abi/masterchef.json';\nimport sousChef from 'config/abi/sousChef.json';\nimport autoRvrs from 'config/abi/autorvrs.json';\nimport RewardClaim from 'config/abi/RewardClaim.json';\nimport sousChefBurn from 'config/abi/sousChefBurn.json';\nimport sousChefBurn2 from 'config/abi/sousChefBurn2.json';\n\nconst useContract = (abi, address, contractOptions) => {\n  _s();\n\n  const web3 = useWeb3();\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions));\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions));\n  }, [abi, address, contractOptions, web3]);\n  return contract;\n};\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\n\n_s(useContract, \"H6vXffnD1SXpstoLQEVK5mG+lYk=\", false, function () {\n  return [useWeb3];\n});\n\nexport const useIfoContract = address => {\n  _s2();\n\n  const ifoAbi = ifo;\n  return useContract(ifoAbi, address);\n};\n\n_s2(useIfoContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useERC20 = address => {\n  _s3();\n\n  const erc20Abi = erc20;\n  return useContract(erc20Abi, address);\n};\n\n_s3(useERC20, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useCake = () => {\n  _s4();\n\n  return useERC20(getCakeAddress());\n};\n\n_s4(useCake, \"y/ZVvzRe9c+8c6LvNpWf2WrO/gU=\", false, function () {\n  return [useERC20];\n});\n\nexport const useWone = () => {\n  _s5();\n\n  return useERC20(getWbnbAddress());\n};\n\n_s5(useWone, \"y/ZVvzRe9c+8c6LvNpWf2WrO/gU=\", false, function () {\n  return [useERC20];\n});\n\nexport const useRabbitMintingFarm = address => {\n  _s6();\n\n  const rabbitMintingFarmAbi = rabbitmintingfarm;\n  return useContract(rabbitMintingFarmAbi, address);\n};\n\n_s6(useRabbitMintingFarm, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useDevFeeProcessorContract = address => {\n  _s7();\n\n  const rabbitMintingFarmAbi = devFeeProcessor;\n  return useContract(rabbitMintingFarmAbi, address);\n};\n\n_s7(useDevFeeProcessorContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useNftSaleContract = address => {\n  _s8();\n\n  const nftSaleAbi = nftSale;\n  return useContract(nftSaleAbi, address);\n};\n\n_s8(useNftSaleContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const usePancakeRabbits = address => {\n  _s9();\n\n  const pancakeRabbitsAbi = pancakeRabbits;\n  return useContract(pancakeRabbitsAbi, address);\n};\n\n_s9(usePancakeRabbits, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useLottery = () => {\n  _s10();\n\n  const abi = lottery;\n  return useContract(abi, getLotteryAddress());\n};\n\n_s10(useLottery, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useMoneyWheel = () => {\n  _s11();\n\n  const abi = wheel;\n  return useContract(abi, getWheelAddress());\n};\n\n_s11(useMoneyWheel, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useMoneyWheel2 = () => {\n  _s12();\n\n  const abi = wheel;\n  return useContract(abi, getWheel2Address());\n};\n\n_s12(useMoneyWheel2, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useLotteryTicket = () => {\n  _s13();\n\n  const abi = lotteryTicket;\n  return useContract(abi, getLotteryTicketAddress());\n};\n\n_s13(useLotteryTicket, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useMasterchef = () => {\n  _s14();\n\n  const abi = masterChef;\n  return useContract(abi, getMasterChefAddress());\n};\n\n_s14(useMasterchef, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useAirdropContract = () => {\n  _s15();\n\n  const abi = RewardClaim;\n  return useContract(abi, getAirdropAddress());\n};\n\n_s15(useAirdropContract, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useAutoRvrs = () => {\n  _s16();\n\n  const abi = autoRvrs;\n  return useContract(abi, getAutoRvrsAddress());\n};\n\n_s16(useAutoRvrs, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useSousChefBurn = id => {\n  _s17();\n\n  const config = pools2Config.find(pool => pool.sousId === id);\n  let rawAbi = sousChefBurn;\n\n  if (id > 3) {\n    rawAbi = sousChefBurn2;\n  }\n\n  const abi = rawAbi;\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID]);\n};\n\n_s17(useSousChefBurn, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport const useSousChef2 = () => {\n  _s18();\n\n  const abi = sousChef;\n  return useContract(abi, getSousChefAddress());\n};\n\n_s18(useSousChef2, \"OieRxpBRupXKKSB/Daj7yBGbdgo=\", false, function () {\n  return [useContract];\n});\n\nexport default useContract;","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useContract.ts"],"names":["useEffect","useState","useWeb3","getMasterChefAddress","getCakeAddress","getLotteryAddress","getLotteryTicketAddress","getWheelAddress","getWbnbAddress","getWheel2Address","getSousChefAddress","getAutoRvrsAddress","getAirdropAddress","pools2Config","ifo","erc20","rabbitmintingfarm","devFeeProcessor","nftSale","pancakeRabbits","lottery","wheel","lotteryTicket","masterChef","sousChef","autoRvrs","RewardClaim","sousChefBurn","sousChefBurn2","useContract","abi","address","contractOptions","web3","contract","setContract","eth","Contract","useIfoContract","ifoAbi","useERC20","erc20Abi","useCake","useWone","useRabbitMintingFarm","rabbitMintingFarmAbi","useDevFeeProcessorContract","useNftSaleContract","nftSaleAbi","usePancakeRabbits","pancakeRabbitsAbi","useLottery","useMoneyWheel","useMoneyWheel2","useLotteryTicket","useMasterchef","useAirdropContract","useAutoRvrs","useSousChefBurn","id","config","find","pool","sousId","rawAbi","contractAddress","process","env","REACT_APP_CHAIN_ID","useSousChef2"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getMasterChefAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getWheelAddress,\n  getWbnbAddress,\n  getWheel2Address,\n  getSousChefAddress,\n  getAutoRvrsAddress,\n  getAirdropAddress\n} from 'utils/addressHelpers'\nimport { pools2Config, poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport devFeeProcessor from 'config/abi/devFeeProcessor.json'\nimport nftSale from 'config/abi/nftSale.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport wheel from 'config/abi/wheel.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport autoRvrs from 'config/abi/autorvrs.json'\nimport RewardClaim from 'config/abi/RewardClaim.json'\nimport sousChefBurn from 'config/abi/sousChefBurn.json'\nimport sousChefBurn2 from 'config/abi/sousChefBurn2.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useWone = () => {\n  return useERC20(getWbnbAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const useDevFeeProcessorContract = (address: string) => {\n  const rabbitMintingFarmAbi = (devFeeProcessor as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const useNftSaleContract = (address: string) => {\n  const nftSaleAbi = (nftSale as unknown) as AbiItem\n  return useContract(nftSaleAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useMoneyWheel = () => {\n  const abi = (wheel as unknown) as AbiItem\n  return useContract(abi, getWheelAddress())\n}\n\nexport const useMoneyWheel2 = () => {\n  const abi = (wheel as unknown) as AbiItem\n  return useContract(abi, getWheel2Address())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useAirdropContract = () => {\n  const abi = (RewardClaim as unknown) as AbiItem\n  return useContract(abi, getAirdropAddress())\n}\n\nexport const useAutoRvrs = () => {\n  const abi = (autoRvrs as unknown) as AbiItem\n  return useContract(abi, getAutoRvrsAddress())\n}\n\nexport const useSousChefBurn = (id) => {\n  const config = pools2Config.find((pool) => pool.sousId === id)\n  let rawAbi = sousChefBurn\n  if (id > 3) {\n    rawAbi = sousChefBurn2\n  }\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport const useSousChef2 = () => {\n  const abi = (sousChef as unknown) as AbiItem\n  return useContract(abi, getSousChefAddress())\n}\nexport default useContract\n"]},"metadata":{},"sourceType":"module"}