{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import Web3 from'web3';import erc20 from'config/abi/erc20.json';export var getContract=function getContract(provider,address){var web3=new Web3(provider);var contract=new web3.eth.Contract(erc20,address);return contract;};export var getAllowance=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(lpContract,masterChefContract,account){var allowance;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.prev=0;_context.next=3;return lpContract.methods.allowance(account,masterChefContract.options.address).call();case 3:allowance=_context.sent;return _context.abrupt(\"return\",allowance);case 7:_context.prev=7;_context.t0=_context[\"catch\"](0);return _context.abrupt(\"return\",'0');case 10:case\"end\":return _context.stop();}}},_callee,null,[[0,7]]);}));return function getAllowance(_x,_x2,_x3){return _ref.apply(this,arguments);};}();export var getTokenBalance=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(provider,tokenAddress,userAddress){var contract,balance;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:contract=getContract(provider,tokenAddress);_context2.prev=1;_context2.next=4;return contract.methods.balanceOf(userAddress).call();case 4:balance=_context2.sent;return _context2.abrupt(\"return\",balance);case 8:_context2.prev=8;_context2.t0=_context2[\"catch\"](1);return _context2.abrupt(\"return\",'0');case 11:case\"end\":return _context2.stop();}}},_callee2,null,[[1,8]]);}));return function getTokenBalance(_x4,_x5,_x6){return _ref2.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/erc20.ts"],"names":["Web3","erc20","getContract","provider","address","web3","contract","eth","Contract","getAllowance","lpContract","masterChefContract","account","methods","allowance","options","call","getTokenBalance","tokenAddress","userAddress","balanceOf","balance"],"mappings":"2UAAA,MAAOA,CAAAA,IAAP,KAAiB,MAAjB,CAIA,MAAOC,CAAAA,KAAP,KAAkB,uBAAlB,CAEA,MAAO,IAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,QAAD,CAAyBC,OAAzB,CAA6C,CACtE,GAAMC,CAAAA,IAAI,CAAG,GAAIL,CAAAA,IAAJ,CAASG,QAAT,CAAb,CACA,GAAMG,CAAAA,QAAQ,CAAG,GAAID,CAAAA,IAAI,CAACE,GAAL,CAASC,QAAb,CAAuBP,KAAvB,CAAqDG,OAArD,CAAjB,CACA,MAAOE,CAAAA,QAAP,CACD,CAJM,CAMP,MAAO,IAAMG,CAAAA,YAAY,0FAAG,iBAC1BC,UAD0B,CAE1BC,kBAF0B,CAG1BC,OAH0B,sKAMQF,CAAAA,UAAU,CAACG,OAAX,CAAmBC,SAAnB,CAA6BF,OAA7B,CAAsCD,kBAAkB,CAACI,OAAnB,CAA2BX,OAAjE,EAA0EY,IAA1E,EANR,QAMlBF,SANkB,+CAOjBA,SAPiB,0FASjB,GATiB,sEAAH,kBAAZL,CAAAA,YAAY,oDAAlB,CAaP,MAAO,IAAMQ,CAAAA,eAAe,2FAAG,kBAC7Bd,QAD6B,CAE7Be,YAF6B,CAG7BC,WAH6B,2IAKvBb,QALuB,CAKZJ,WAAW,CAACC,QAAD,CAAWe,YAAX,CALC,yCAOGZ,CAAAA,QAAQ,CAACO,OAAT,CAAiBO,SAAjB,CAA2BD,WAA3B,EAAwCH,IAAxC,EAPH,QAOrBK,OAPqB,iDAQpBA,OARoB,8FAUpB,GAVoB,wEAAH,kBAAfJ,CAAAA,eAAe,sDAArB","sourcesContent":["import Web3 from 'web3'\nimport { provider as ProviderType } from 'web3-core'\nimport { Contract } from 'web3-eth-contract'\nimport { AbiItem } from 'web3-utils'\nimport erc20 from 'config/abi/erc20.json'\n\nexport const getContract = (provider: ProviderType, address: string) => {\n  const web3 = new Web3(provider)\n  const contract = new web3.eth.Contract((erc20 as unknown) as AbiItem, address)\n  return contract\n}\n\nexport const getAllowance = async (\n  lpContract: Contract,\n  masterChefContract: Contract,\n  account: string,\n): Promise<string> => {\n  try {\n    const allowance: string = await lpContract.methods.allowance(account, masterChefContract.options.address).call()\n    return allowance\n  } catch (e) {\n    return '0'\n  }\n}\n\nexport const getTokenBalance = async (\n  provider: ProviderType,\n  tokenAddress: string,\n  userAddress: string,\n): Promise<string> => {\n  const contract = getContract(provider, tokenAddress)\n  try {\n    const balance: string = await contract.methods.balanceOf(userAddress).call()\n    return balance\n  } catch (e) {\n    return '0'\n  }\n}\n"]},"metadata":{},"sourceType":"module"}