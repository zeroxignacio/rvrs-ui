{"ast":null,"code":"import addresses from'config/constants/contracts';var chainId=process.env.REACT_APP_CHAIN_ID;export var getCakeAddress=function getCakeAddress(){return addresses.cake[chainId];};export var getMasterChefAddress=function getMasterChefAddress(){return addresses.masterChef[chainId];};export var getSousChefAddress=function getSousChefAddress(){return addresses.sousChef[chainId];};export var getMulticallAddress=function getMulticallAddress(){return addresses.mulltiCall[chainId];};export var getWbnbAddress=function getWbnbAddress(){return addresses.wbnb[chainId];};export var getOneAddress=function getOneAddress(){return addresses.one[chainId];};export var getLotteryAddress=function getLotteryAddress(){return addresses.lottery[chainId];};export var getWheelAddress=function getWheelAddress(){return addresses.wheel[chainId];};export var getWheel2Address=function getWheel2Address(){return addresses.wheel2[chainId];};export var getLotteryTicketAddress=function getLotteryTicketAddress(){return addresses.lotteryNFT[chainId];};export var getAutoRvrsAddress=function getAutoRvrsAddress(){return addresses.autoRVRS[chainId];};export var getRvrsAddress=function getRvrsAddress(){return addresses.rvrs[chainId];};export var getUstAddress=function getUstAddress(){return addresses.ust[chainId];};export var getRvrsOneAddress=function getRvrsOneAddress(){return addresses.rvrsOne[chainId];};export var getRvrsUstAddress=function getRvrsUstAddress(){return addresses.rvrsUst[chainId];};","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/addressHelpers.ts"],"names":["addresses","chainId","process","env","REACT_APP_CHAIN_ID","getCakeAddress","cake","getMasterChefAddress","masterChef","getSousChefAddress","sousChef","getMulticallAddress","mulltiCall","getWbnbAddress","wbnb","getOneAddress","one","getLotteryAddress","lottery","getWheelAddress","wheel","getWheel2Address","wheel2","getLotteryTicketAddress","lotteryNFT","getAutoRvrsAddress","autoRVRS","getRvrsAddress","rvrs","getUstAddress","ust","getRvrsOneAddress","rvrsOne","getRvrsUstAddress","rvrsUst"],"mappings":"AAAA,MAAOA,CAAAA,SAAP,KAAsB,4BAAtB,CAEA,GAAMC,CAAAA,OAAO,CAAGC,OAAO,CAACC,GAAR,CAAYC,kBAA5B,CAEA,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAClC,MAAOL,CAAAA,SAAS,CAACM,IAAV,CAAeL,OAAf,CAAP,CACD,CAFM,CAGP,MAAO,IAAMM,CAAAA,oBAAoB,CAAG,QAAvBA,CAAAA,oBAAuB,EAAM,CACxC,MAAOP,CAAAA,SAAS,CAACQ,UAAV,CAAqBP,OAArB,CAAP,CACD,CAFM,CAGP,MAAO,IAAMQ,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CACtC,MAAOT,CAAAA,SAAS,CAACU,QAAV,CAAmBT,OAAnB,CAAP,CACD,CAFM,CAGP,MAAO,IAAMU,CAAAA,mBAAmB,CAAG,QAAtBA,CAAAA,mBAAsB,EAAM,CACvC,MAAOX,CAAAA,SAAS,CAACY,UAAV,CAAqBX,OAArB,CAAP,CACD,CAFM,CAGP,MAAO,IAAMY,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAClC,MAAOb,CAAAA,SAAS,CAACc,IAAV,CAAeb,OAAf,CAAP,CACD,CAFM,CAGP,MAAO,IAAMc,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACjC,MAAOf,CAAAA,SAAS,CAACgB,GAAV,CAAcf,OAAd,CAAP,CACD,CAFM,CAGP,MAAO,IAAMgB,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CACrC,MAAOjB,CAAAA,SAAS,CAACkB,OAAV,CAAkBjB,OAAlB,CAAP,CACD,CAFM,CAGP,MAAO,IAAMkB,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAM,CACnC,MAAOnB,CAAAA,SAAS,CAACoB,KAAV,CAAgBnB,OAAhB,CAAP,CACD,CAFM,CAGP,MAAO,IAAMoB,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAM,CACpC,MAAOrB,CAAAA,SAAS,CAACsB,MAAV,CAAiBrB,OAAjB,CAAP,CACD,CAFM,CAGP,MAAO,IAAMsB,CAAAA,uBAAuB,CAAG,QAA1BA,CAAAA,uBAA0B,EAAM,CAC3C,MAAOvB,CAAAA,SAAS,CAACwB,UAAV,CAAqBvB,OAArB,CAAP,CACD,CAFM,CAGP,MAAO,IAAMwB,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CACtC,MAAOzB,CAAAA,SAAS,CAAC0B,QAAV,CAAmBzB,OAAnB,CAAP,CACD,CAFM,CAGP,MAAO,IAAM0B,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAM,CAClC,MAAO3B,CAAAA,SAAS,CAAC4B,IAAV,CAAe3B,OAAf,CAAP,CACD,CAFM,CAGP,MAAO,IAAM4B,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAM,CACjC,MAAO7B,CAAAA,SAAS,CAAC8B,GAAV,CAAc7B,OAAd,CAAP,CACD,CAFM,CAGP,MAAO,IAAM8B,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CACrC,MAAO/B,CAAAA,SAAS,CAACgC,OAAV,CAAkB/B,OAAlB,CAAP,CACD,CAFM,CAGP,MAAO,IAAMgC,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,EAAM,CACrC,MAAOjC,CAAAA,SAAS,CAACkC,OAAV,CAAkBjC,OAAlB,CAAP,CACD,CAFM","sourcesContent":["import addresses from 'config/constants/contracts'\n\nconst chainId = process.env.REACT_APP_CHAIN_ID\n\nexport const getCakeAddress = () => {\n  return addresses.cake[chainId]\n}\nexport const getMasterChefAddress = () => {\n  return addresses.masterChef[chainId]\n}\nexport const getSousChefAddress = () => {\n  return addresses.sousChef[chainId]\n}\nexport const getMulticallAddress = () => {\n  return addresses.mulltiCall[chainId]\n}\nexport const getWbnbAddress = () => {\n  return addresses.wbnb[chainId]\n}\nexport const getOneAddress = () => {\n  return addresses.one[chainId]\n}\nexport const getLotteryAddress = () => {\n  return addresses.lottery[chainId]\n}\nexport const getWheelAddress = () => {\n  return addresses.wheel[chainId]\n}\nexport const getWheel2Address = () => {\n  return addresses.wheel2[chainId]\n}\nexport const getLotteryTicketAddress = () => {\n  return addresses.lotteryNFT[chainId]\n}\nexport const getAutoRvrsAddress = () => {\n  return addresses.autoRVRS[chainId]\n}\nexport const getRvrsAddress = () => {\n  return addresses.rvrs[chainId]\n}\nexport const getUstAddress = () => {\n  return addresses.ust[chainId]\n}\nexport const getRvrsOneAddress = () => {\n  return addresses.rvrsOne[chainId]\n}\nexport const getRvrsUstAddress = () => {\n  return addresses.rvrsUst[chainId]\n}"]},"metadata":{},"sourceType":"module"}