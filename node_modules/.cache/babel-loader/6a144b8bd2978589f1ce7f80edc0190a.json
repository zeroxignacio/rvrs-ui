{"ast":null,"code":"\"use strict\";\n\nimport _classCallCheck from \"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nvar _permanentCensorErrors = false;\nvar _censorErrors = false;\nvar LogLevels = {\n  debug: 1,\n  \"default\": 2,\n  info: 2,\n  warning: 3,\n  error: 4,\n  off: 5\n};\nvar _logLevel = LogLevels[\"default\"];\nimport { version } from \"./_version\";\nvar _globalLogger = null;\n\nfunction _checkNormalize() {\n  try {\n    var missing = []; // Make sure all forms of normalization are supported\n\n    [\"NFD\", \"NFC\", \"NFKD\", \"NFKC\"].forEach(function (form) {\n      try {\n        if (\"test\".normalize(form) !== \"test\") {\n          throw new Error(\"bad normalize\");\n        }\n\n        ;\n      } catch (error) {\n        missing.push(form);\n      }\n    });\n\n    if (missing.length) {\n      throw new Error(\"missing \" + missing.join(\", \"));\n    }\n\n    if (String.fromCharCode(0xe9).normalize(\"NFD\") !== String.fromCharCode(0x65, 0x0301)) {\n      throw new Error(\"broken implementation\");\n    }\n  } catch (error) {\n    return error.message;\n  }\n\n  return null;\n}\n\nvar _normalizeError = _checkNormalize();\n\nexport var LogLevel;\n\n(function (LogLevel) {\n  LogLevel[\"DEBUG\"] = \"DEBUG\";\n  LogLevel[\"INFO\"] = \"INFO\";\n  LogLevel[\"WARNING\"] = \"WARNING\";\n  LogLevel[\"ERROR\"] = \"ERROR\";\n  LogLevel[\"OFF\"] = \"OFF\";\n})(LogLevel || (LogLevel = {}));\n\nexport var ErrorCode;\n\n(function (ErrorCode) {\n  ///////////////////\n  // Generic Errors\n  // Unknown Error\n  ErrorCode[\"UNKNOWN_ERROR\"] = \"UNKNOWN_ERROR\"; // Not Implemented\n\n  ErrorCode[\"NOT_IMPLEMENTED\"] = \"NOT_IMPLEMENTED\"; // Unsupported Operation\n  //   - operation\n\n  ErrorCode[\"UNSUPPORTED_OPERATION\"] = \"UNSUPPORTED_OPERATION\"; // Network Error (i.e. Ethereum Network, such as an invalid chain ID)\n  //   - event (\"noNetwork\" is not re-thrown in provider.ready; otherwise thrown)\n\n  ErrorCode[\"NETWORK_ERROR\"] = \"NETWORK_ERROR\"; // Some sort of bad response from the server\n\n  ErrorCode[\"SERVER_ERROR\"] = \"SERVER_ERROR\"; // Timeout\n\n  ErrorCode[\"TIMEOUT\"] = \"TIMEOUT\"; ///////////////////\n  // Operational  Errors\n  // Buffer Overrun\n\n  ErrorCode[\"BUFFER_OVERRUN\"] = \"BUFFER_OVERRUN\"; // Numeric Fault\n  //   - operation: the operation being executed\n  //   - fault: the reason this faulted\n\n  ErrorCode[\"NUMERIC_FAULT\"] = \"NUMERIC_FAULT\"; ///////////////////\n  // Argument Errors\n  // Missing new operator to an object\n  //  - name: The name of the class\n\n  ErrorCode[\"MISSING_NEW\"] = \"MISSING_NEW\"; // Invalid argument (e.g. value is incompatible with type) to a function:\n  //   - argument: The argument name that was invalid\n  //   - value: The value of the argument\n\n  ErrorCode[\"INVALID_ARGUMENT\"] = \"INVALID_ARGUMENT\"; // Missing argument to a function:\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"MISSING_ARGUMENT\"] = \"MISSING_ARGUMENT\"; // Too many arguments\n  //   - count: The number of arguments received\n  //   - expectedCount: The number of arguments expected\n\n  ErrorCode[\"UNEXPECTED_ARGUMENT\"] = \"UNEXPECTED_ARGUMENT\"; ///////////////////\n  // Blockchain Errors\n  // Call exception\n  //  - transaction: the transaction\n  //  - address?: the contract address\n  //  - args?: The arguments passed into the function\n  //  - method?: The Solidity method signature\n  //  - errorSignature?: The EIP848 error signature\n  //  - errorArgs?: The EIP848 error parameters\n  //  - reason: The reason (only for EIP848 \"Error(string)\")\n\n  ErrorCode[\"CALL_EXCEPTION\"] = \"CALL_EXCEPTION\"; // Insufficien funds (< value + gasLimit * gasPrice)\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"INSUFFICIENT_FUNDS\"] = \"INSUFFICIENT_FUNDS\"; // Nonce has already been used\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"NONCE_EXPIRED\"] = \"NONCE_EXPIRED\"; // The replacement fee for the transaction is too low\n  //   - transaction: the transaction attempted\n\n  ErrorCode[\"REPLACEMENT_UNDERPRICED\"] = \"REPLACEMENT_UNDERPRICED\"; // The gas limit could not be estimated\n  //   - transaction: the transaction passed to estimateGas\n\n  ErrorCode[\"UNPREDICTABLE_GAS_LIMIT\"] = \"UNPREDICTABLE_GAS_LIMIT\";\n})(ErrorCode || (ErrorCode = {}));\n\n;\nexport var Logger = /*#__PURE__*/function () {\n  function Logger(version) {\n    _classCallCheck(this, Logger);\n\n    Object.defineProperty(this, \"version\", {\n      enumerable: true,\n      value: version,\n      writable: false\n    });\n  }\n\n  _createClass(Logger, [{\n    key: \"_log\",\n    value: function _log(logLevel, args) {\n      var level = logLevel.toLowerCase();\n\n      if (LogLevels[level] == null) {\n        this.throwArgumentError(\"invalid log level name\", \"logLevel\", logLevel);\n      }\n\n      if (_logLevel > LogLevels[level]) {\n        return;\n      }\n\n      console.log.apply(console, args);\n    }\n  }, {\n    key: \"debug\",\n    value: function debug() {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      this._log(Logger.levels.DEBUG, args);\n    }\n  }, {\n    key: \"info\",\n    value: function info() {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n\n      this._log(Logger.levels.INFO, args);\n    }\n  }, {\n    key: \"warn\",\n    value: function warn() {\n      for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n        args[_key3] = arguments[_key3];\n      }\n\n      this._log(Logger.levels.WARNING, args);\n    }\n  }, {\n    key: \"makeError\",\n    value: function makeError(message, code, params) {\n      // Errors are being censored\n      if (_censorErrors) {\n        return this.makeError(\"censored error\", code, {});\n      }\n\n      if (!code) {\n        code = Logger.errors.UNKNOWN_ERROR;\n      }\n\n      if (!params) {\n        params = {};\n      }\n\n      var messageDetails = [];\n      Object.keys(params).forEach(function (key) {\n        try {\n          messageDetails.push(key + \"=\" + JSON.stringify(params[key]));\n        } catch (error) {\n          messageDetails.push(key + \"=\" + JSON.stringify(params[key].toString()));\n        }\n      });\n      messageDetails.push(\"code=\".concat(code));\n      messageDetails.push(\"version=\".concat(this.version));\n      var reason = message;\n\n      if (messageDetails.length) {\n        message += \" (\" + messageDetails.join(\", \") + \")\";\n      } // @TODO: Any??\n\n\n      var error = new Error(message);\n      error.reason = reason;\n      error.code = code;\n      Object.keys(params).forEach(function (key) {\n        error[key] = params[key];\n      });\n      return error;\n    }\n  }, {\n    key: \"throwError\",\n    value: function throwError(message, code, params) {\n      throw this.makeError(message, code, params);\n    }\n  }, {\n    key: \"throwArgumentError\",\n    value: function throwArgumentError(message, name, value) {\n      return this.throwError(message, Logger.errors.INVALID_ARGUMENT, {\n        argument: name,\n        value: value\n      });\n    }\n  }, {\n    key: \"assert\",\n    value: function assert(condition, message, code, params) {\n      if (!!condition) {\n        return;\n      }\n\n      this.throwError(message, code, params);\n    }\n  }, {\n    key: \"assertArgument\",\n    value: function assertArgument(condition, message, name, value) {\n      if (!!condition) {\n        return;\n      }\n\n      this.throwArgumentError(message, name, value);\n    }\n  }, {\n    key: \"checkNormalize\",\n    value: function checkNormalize(message) {\n      if (message == null) {\n        message = \"platform missing String.prototype.normalize\";\n      }\n\n      if (_normalizeError) {\n        this.throwError(\"platform missing String.prototype.normalize\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"String.prototype.normalize\",\n          form: _normalizeError\n        });\n      }\n    }\n  }, {\n    key: \"checkSafeUint53\",\n    value: function checkSafeUint53(value, message) {\n      if (typeof value !== \"number\") {\n        return;\n      }\n\n      if (message == null) {\n        message = \"value not safe\";\n      }\n\n      if (value < 0 || value >= 0x1fffffffffffff) {\n        this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n          operation: \"checkSafeInteger\",\n          fault: \"out-of-safe-range\",\n          value: value\n        });\n      }\n\n      if (value % 1) {\n        this.throwError(message, Logger.errors.NUMERIC_FAULT, {\n          operation: \"checkSafeInteger\",\n          fault: \"non-integer\",\n          value: value\n        });\n      }\n    }\n  }, {\n    key: \"checkArgumentCount\",\n    value: function checkArgumentCount(count, expectedCount, message) {\n      if (message) {\n        message = \": \" + message;\n      } else {\n        message = \"\";\n      }\n\n      if (count < expectedCount) {\n        this.throwError(\"missing argument\" + message, Logger.errors.MISSING_ARGUMENT, {\n          count: count,\n          expectedCount: expectedCount\n        });\n      }\n\n      if (count > expectedCount) {\n        this.throwError(\"too many arguments\" + message, Logger.errors.UNEXPECTED_ARGUMENT, {\n          count: count,\n          expectedCount: expectedCount\n        });\n      }\n    }\n  }, {\n    key: \"checkNew\",\n    value: function checkNew(target, kind) {\n      if (target === Object || target == null) {\n        this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n          name: kind.name\n        });\n      }\n    }\n  }, {\n    key: \"checkAbstract\",\n    value: function checkAbstract(target, kind) {\n      if (target === kind) {\n        this.throwError(\"cannot instantiate abstract class \" + JSON.stringify(kind.name) + \" directly; use a sub-class\", Logger.errors.UNSUPPORTED_OPERATION, {\n          name: target.name,\n          operation: \"new\"\n        });\n      } else if (target === Object || target == null) {\n        this.throwError(\"missing new\", Logger.errors.MISSING_NEW, {\n          name: kind.name\n        });\n      }\n    }\n  }], [{\n    key: \"globalLogger\",\n    value: function globalLogger() {\n      if (!_globalLogger) {\n        _globalLogger = new Logger(version);\n      }\n\n      return _globalLogger;\n    }\n  }, {\n    key: \"setCensorship\",\n    value: function setCensorship(censorship, permanent) {\n      if (!censorship && permanent) {\n        this.globalLogger().throwError(\"cannot permanently disable censorship\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"setCensorship\"\n        });\n      }\n\n      if (_permanentCensorErrors) {\n        if (!censorship) {\n          return;\n        }\n\n        this.globalLogger().throwError(\"error censorship permanent\", Logger.errors.UNSUPPORTED_OPERATION, {\n          operation: \"setCensorship\"\n        });\n      }\n\n      _censorErrors = !!censorship;\n      _permanentCensorErrors = !!permanent;\n    }\n  }, {\n    key: \"setLogLevel\",\n    value: function setLogLevel(logLevel) {\n      var level = LogLevels[logLevel.toLowerCase()];\n\n      if (level == null) {\n        Logger.globalLogger().warn(\"invalid log level - \" + logLevel);\n        return;\n      }\n\n      _logLevel = level;\n    }\n  }, {\n    key: \"from\",\n    value: function from(version) {\n      return new Logger(version);\n    }\n  }]);\n\n  return Logger;\n}();\nLogger.errors = ErrorCode;\nLogger.levels = LogLevel;","map":{"version":3,"mappings":"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","names":["_permanentCensorErrors","_censorErrors","LogLevels","debug","info","warning","error","off","_logLevel","version","_globalLogger","_checkNormalize","missing","forEach","form","normalize","Error","push","length","join","String","fromCharCode","message","_normalizeError","LogLevel","ErrorCode","Logger","Object","defineProperty","enumerable","value","writable","logLevel","args","level","toLowerCase","throwArgumentError","console","log","apply","_log","levels","DEBUG","INFO","WARNING","code","params","makeError","errors","UNKNOWN_ERROR","messageDetails","keys","key","JSON","stringify","toString","reason","name","throwError","INVALID_ARGUMENT","argument","condition","UNSUPPORTED_OPERATION","operation","NUMERIC_FAULT","fault","count","expectedCount","MISSING_ARGUMENT","UNEXPECTED_ARGUMENT","target","kind","MISSING_NEW","censorship","permanent","globalLogger","warn"],"sourceRoot":"","sources":["../src.ts/index.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}