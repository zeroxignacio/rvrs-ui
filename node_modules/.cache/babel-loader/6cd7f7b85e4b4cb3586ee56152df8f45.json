{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Workflows = void 0;\n\nvar core_1 = require(\"../core\");\n\nvar Workflows = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(Workflows, _core_1$CrowdinApi);\n\n  var _super = _createSuper(Workflows);\n\n  function Workflows() {\n    _classCallCheck(this, Workflows);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Workflows, [{\n    key: \"listWorkflowTemplates\",\n    value:\n    /**\n     * @param groupId group identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    function listWorkflowTemplates(groupId, limit, offset) {\n      var url = \"\".concat(this.url, \"/workflow-templates\");\n      url = this.addQueryParam(url, 'groupId', groupId);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param templateId workflow template identifier\n     */\n\n  }, {\n    key: \"getWorkflowTemplateInfo\",\n    value: function getWorkflowTemplateInfo(templateId) {\n      var url = \"\".concat(this.url, \"/workflow-templates/\").concat(templateId);\n      return this.get(url, this.defaultConfig());\n    }\n  }]);\n\n  return Workflows;\n}(core_1.CrowdinApi);\n\nexports.Workflows = Workflows;","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/@crowdin/crowdin-api-client/out/workflows/index.js"],"names":["Object","defineProperty","exports","value","Workflows","core_1","require","groupId","limit","offset","url","addQueryParam","getList","templateId","get","defaultConfig","CrowdinApi"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,SAAR,GAAoB,KAAK,CAAzB;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;IACMF,S;;;;;;;;;;;;;;AACF;AACJ;AACA;AACA;AACA;AACI,mCAAsBG,OAAtB,EAA+BC,KAA/B,EAAsCC,MAAtC,EAA8C;AAC1C,UAAIC,GAAG,aAAM,KAAKA,GAAX,wBAAP;AACAA,MAAAA,GAAG,GAAG,KAAKC,aAAL,CAAmBD,GAAnB,EAAwB,SAAxB,EAAmCH,OAAnC,CAAN;AACA,aAAO,KAAKK,OAAL,CAAaF,GAAb,EAAkBF,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;;;;WACI,iCAAwBI,UAAxB,EAAoC;AAChC,UAAMH,GAAG,aAAM,KAAKA,GAAX,iCAAqCG,UAArC,CAAT;AACA,aAAO,KAAKC,GAAL,CAASJ,GAAT,EAAc,KAAKK,aAAL,EAAd,CAAP;AACH;;;;EAjBmBV,MAAM,CAACW,U;;AAmB/Bd,OAAO,CAACE,SAAR,GAAoBA,SAApB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Workflows = void 0;\nconst core_1 = require(\"../core\");\nclass Workflows extends core_1.CrowdinApi {\n    /**\n     * @param groupId group identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listWorkflowTemplates(groupId, limit, offset) {\n        let url = `${this.url}/workflow-templates`;\n        url = this.addQueryParam(url, 'groupId', groupId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param templateId workflow template identifier\n     */\n    getWorkflowTemplateInfo(templateId) {\n        const url = `${this.url}/workflow-templates/${templateId}`;\n        return this.get(url, this.defaultConfig());\n    }\n}\nexports.Workflows = Workflows;\n"]},"metadata":{},"sourceType":"script"}