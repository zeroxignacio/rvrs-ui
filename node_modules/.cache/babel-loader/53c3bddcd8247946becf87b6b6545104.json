{"ast":null,"code":"import _regeneratorRuntime from \"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _classCallCheck from \"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nimport { getAddress } from \"@ethersproject/address\";\nimport { BigNumber } from \"@ethersproject/bignumber\";\nimport { arrayify, hexConcat, hexlify, hexZeroPad, isHexString } from \"@ethersproject/bytes\";\nimport { keccak256 } from \"@ethersproject/keccak256\";\nimport { deepCopy, defineReadOnly, shallowCopy } from \"@ethersproject/properties\";\nimport { Logger } from \"@ethersproject/logger\";\nimport { version } from \"./_version\";\nvar logger = new Logger(version);\nimport { id } from \"./id\";\nvar padding = new Uint8Array(32);\npadding.fill(0);\nvar NegativeOne = BigNumber.from(-1);\nvar Zero = BigNumber.from(0);\nvar One = BigNumber.from(1);\nvar MaxUint256 = BigNumber.from(\"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\");\n\nfunction hexPadRight(value) {\n  var bytes = arrayify(value);\n  var padOffset = bytes.length % 32;\n\n  if (padOffset) {\n    return hexConcat([bytes, padding.slice(padOffset)]);\n  }\n\n  return hexlify(bytes);\n}\n\nvar hexTrue = hexZeroPad(One.toHexString(), 32);\nvar hexFalse = hexZeroPad(Zero.toHexString(), 32);\nvar domainFieldTypes = {\n  name: \"string\",\n  version: \"string\",\n  chainId: \"uint256\",\n  verifyingContract: \"address\",\n  salt: \"bytes32\"\n};\nvar domainFieldNames = [\"name\", \"version\", \"chainId\", \"verifyingContract\", \"salt\"];\n\nfunction checkString(key) {\n  return function (value) {\n    if (typeof value !== \"string\") {\n      logger.throwArgumentError(\"invalid domain value for \".concat(JSON.stringify(key)), \"domain.\".concat(key), value);\n    }\n\n    return value;\n  };\n}\n\nvar domainChecks = {\n  name: checkString(\"name\"),\n  version: checkString(\"version\"),\n  chainId: function chainId(value) {\n    try {\n      return BigNumber.from(value).toString();\n    } catch (error) {}\n\n    return logger.throwArgumentError(\"invalid domain value for \\\"chainId\\\"\", \"domain.chainId\", value);\n  },\n  verifyingContract: function verifyingContract(value) {\n    try {\n      return getAddress(value).toLowerCase();\n    } catch (error) {}\n\n    return logger.throwArgumentError(\"invalid domain value \\\"verifyingContract\\\"\", \"domain.verifyingContract\", value);\n  },\n  salt: function salt(value) {\n    try {\n      var bytes = arrayify(value);\n\n      if (bytes.length !== 32) {\n        throw new Error(\"bad length\");\n      }\n\n      return hexlify(bytes);\n    } catch (error) {}\n\n    return logger.throwArgumentError(\"invalid domain value \\\"salt\\\"\", \"domain.salt\", value);\n  }\n};\n\nfunction getBaseEncoder(type) {\n  // intXX and uintXX\n  {\n    var match = type.match(/^(u?)int(\\d*)$/);\n\n    if (match) {\n      var signed = match[1] === \"\";\n      var width = parseInt(match[2] || \"256\");\n\n      if (width % 8 !== 0 || width > 256 || match[2] && match[2] !== String(width)) {\n        logger.throwArgumentError(\"invalid numeric width\", \"type\", type);\n      }\n\n      var boundsUpper = MaxUint256.mask(signed ? width - 1 : width);\n      var boundsLower = signed ? boundsUpper.add(One).mul(NegativeOne) : Zero;\n      return function (value) {\n        var v = BigNumber.from(value);\n\n        if (v.lt(boundsLower) || v.gt(boundsUpper)) {\n          logger.throwArgumentError(\"value out-of-bounds for \".concat(type), \"value\", value);\n        }\n\n        return hexZeroPad(v.toTwos(256).toHexString(), 32);\n      };\n    }\n  } // bytesXX\n\n  {\n    var _match = type.match(/^bytes(\\d+)$/);\n\n    if (_match) {\n      var _width = parseInt(_match[1]);\n\n      if (_width === 0 || _width > 32 || _match[1] !== String(_width)) {\n        logger.throwArgumentError(\"invalid bytes width\", \"type\", type);\n      }\n\n      return function (value) {\n        var bytes = arrayify(value);\n\n        if (bytes.length !== _width) {\n          logger.throwArgumentError(\"invalid length for \".concat(type), \"value\", value);\n        }\n\n        return hexPadRight(value);\n      };\n    }\n  }\n\n  switch (type) {\n    case \"address\":\n      return function (value) {\n        return hexZeroPad(getAddress(value), 32);\n      };\n\n    case \"bool\":\n      return function (value) {\n        return !value ? hexFalse : hexTrue;\n      };\n\n    case \"bytes\":\n      return function (value) {\n        return keccak256(value);\n      };\n\n    case \"string\":\n      return function (value) {\n        return id(value);\n      };\n  }\n\n  return null;\n}\n\nfunction encodeType(name, fields) {\n  return \"\".concat(name, \"(\").concat(fields.map(function (_ref) {\n    var name = _ref.name,\n        type = _ref.type;\n    return type + \" \" + name;\n  }).join(\",\"), \")\");\n}\n\nexport var TypedDataEncoder = /*#__PURE__*/function () {\n  function TypedDataEncoder(types) {\n    _classCallCheck(this, TypedDataEncoder);\n\n    defineReadOnly(this, \"types\", Object.freeze(deepCopy(types)));\n    defineReadOnly(this, \"_encoderCache\", {});\n    defineReadOnly(this, \"_types\", {}); // Link struct types to their direct child structs\n\n    var links = {}; // Link structs to structs which contain them as a child\n\n    var parents = {}; // Link all subtypes within a given struct\n\n    var subtypes = {};\n    Object.keys(types).forEach(function (type) {\n      links[type] = {};\n      parents[type] = [];\n      subtypes[type] = {};\n    });\n\n    var _loop = function _loop(name) {\n      var uniqueNames = {};\n      types[name].forEach(function (field) {\n        // Check each field has a unique name\n        if (uniqueNames[field.name]) {\n          logger.throwArgumentError(\"duplicate variable name \".concat(JSON.stringify(field.name), \" in \").concat(JSON.stringify(name)), \"types\", types);\n        }\n\n        uniqueNames[field.name] = true; // Get the base type (drop any array specifiers)\n\n        var baseType = field.type.match(/^([^\\x5b]*)(\\x5b|$)/)[1];\n\n        if (baseType === name) {\n          logger.throwArgumentError(\"circular type reference to \".concat(JSON.stringify(baseType)), \"types\", types);\n        } // Is this a base encoding type?\n\n\n        var encoder = getBaseEncoder(baseType);\n\n        if (encoder) {\n          return;\n        }\n\n        if (!parents[baseType]) {\n          logger.throwArgumentError(\"unknown type \".concat(JSON.stringify(baseType)), \"types\", types);\n        } // Add linkage\n\n\n        parents[baseType].push(name);\n        links[name][baseType] = true;\n      });\n    };\n\n    for (var name in types) {\n      _loop(name);\n    } // Deduce the primary type\n\n\n    var primaryTypes = Object.keys(parents).filter(function (n) {\n      return parents[n].length === 0;\n    });\n\n    if (primaryTypes.length === 0) {\n      logger.throwArgumentError(\"missing primary type\", \"types\", types);\n    } else if (primaryTypes.length > 1) {\n      logger.throwArgumentError(\"ambiguous primary types or unused types: \".concat(primaryTypes.map(function (t) {\n        return JSON.stringify(t);\n      }).join(\", \")), \"types\", types);\n    }\n\n    defineReadOnly(this, \"primaryType\", primaryTypes[0]); // Check for circular type references\n\n    function checkCircular(type, found) {\n      if (found[type]) {\n        logger.throwArgumentError(\"circular type reference to \".concat(JSON.stringify(type)), \"types\", types);\n      }\n\n      found[type] = true;\n      Object.keys(links[type]).forEach(function (child) {\n        if (!parents[child]) {\n          return;\n        } // Recursively check children\n\n\n        checkCircular(child, found); // Mark all ancestors as having this decendant\n\n        Object.keys(found).forEach(function (subtype) {\n          subtypes[subtype][child] = true;\n        });\n      });\n      delete found[type];\n    }\n\n    checkCircular(this.primaryType, {}); // Compute each fully describe type\n\n    for (var _name in subtypes) {\n      var st = Object.keys(subtypes[_name]);\n      st.sort();\n      this._types[_name] = encodeType(_name, types[_name]) + st.map(function (t) {\n        return encodeType(t, types[t]);\n      }).join(\"\");\n    }\n  }\n\n  _createClass(TypedDataEncoder, [{\n    key: \"getEncoder\",\n    value: function getEncoder(type) {\n      var encoder = this._encoderCache[type];\n\n      if (!encoder) {\n        encoder = this._encoderCache[type] = this._getEncoder(type);\n      }\n\n      return encoder;\n    }\n  }, {\n    key: \"_getEncoder\",\n    value: function _getEncoder(type) {\n      var _this = this;\n\n      // Basic encoder type (address, bool, uint256, etc)\n      {\n        var encoder = getBaseEncoder(type);\n\n        if (encoder) {\n          return encoder;\n        }\n      } // Array\n\n      var match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n\n      if (match) {\n        var subtype = match[1];\n        var subEncoder = this.getEncoder(subtype);\n        var length = parseInt(match[3]);\n        return function (value) {\n          if (length >= 0 && value.length !== length) {\n            logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n          }\n\n          var result = value.map(subEncoder);\n\n          if (_this._types[subtype]) {\n            result = result.map(keccak256);\n          }\n\n          return keccak256(hexConcat(result));\n        };\n      } // Struct\n\n\n      var fields = this.types[type];\n\n      if (fields) {\n        var encodedType = id(this._types[type]);\n        return function (value) {\n          var values = fields.map(function (_ref2) {\n            var name = _ref2.name,\n                type = _ref2.type;\n\n            var result = _this.getEncoder(type)(value[name]);\n\n            if (_this._types[type]) {\n              return keccak256(result);\n            }\n\n            return result;\n          });\n          values.unshift(encodedType);\n          return hexConcat(values);\n        };\n      }\n\n      return logger.throwArgumentError(\"unknown type: \".concat(type), \"type\", type);\n    }\n  }, {\n    key: \"encodeType\",\n    value: function encodeType(name) {\n      var result = this._types[name];\n\n      if (!result) {\n        logger.throwArgumentError(\"unknown type: \".concat(JSON.stringify(name)), \"name\", name);\n      }\n\n      return result;\n    }\n  }, {\n    key: \"encodeData\",\n    value: function encodeData(type, value) {\n      return this.getEncoder(type)(value);\n    }\n  }, {\n    key: \"hashStruct\",\n    value: function hashStruct(name, value) {\n      return keccak256(this.encodeData(name, value));\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(value) {\n      return this.encodeData(this.primaryType, value);\n    }\n  }, {\n    key: \"hash\",\n    value: function hash(value) {\n      return this.hashStruct(this.primaryType, value);\n    }\n  }, {\n    key: \"_visit\",\n    value: function _visit(type, value, callback) {\n      var _this2 = this;\n\n      // Basic encoder type (address, bool, uint256, etc)\n      {\n        var encoder = getBaseEncoder(type);\n\n        if (encoder) {\n          return callback(type, value);\n        }\n      } // Array\n\n      var match = type.match(/^(.*)(\\x5b(\\d*)\\x5d)$/);\n\n      if (match) {\n        var subtype = match[1];\n        var length = parseInt(match[3]);\n\n        if (length >= 0 && value.length !== length) {\n          logger.throwArgumentError(\"array length mismatch; expected length ${ arrayLength }\", \"value\", value);\n        }\n\n        return value.map(function (v) {\n          return _this2._visit(subtype, v, callback);\n        });\n      } // Struct\n\n\n      var fields = this.types[type];\n\n      if (fields) {\n        return fields.reduce(function (accum, _ref3) {\n          var name = _ref3.name,\n              type = _ref3.type;\n          accum[name] = _this2._visit(type, value[name], callback);\n          return accum;\n        }, {});\n      }\n\n      return logger.throwArgumentError(\"unknown type: \".concat(type), \"type\", type);\n    }\n  }, {\n    key: \"visit\",\n    value: function visit(value, callback) {\n      return this._visit(this.primaryType, value, callback);\n    }\n  }], [{\n    key: \"from\",\n    value: function from(types) {\n      return new TypedDataEncoder(types);\n    }\n  }, {\n    key: \"getPrimaryType\",\n    value: function getPrimaryType(types) {\n      return TypedDataEncoder.from(types).primaryType;\n    }\n  }, {\n    key: \"hashStruct\",\n    value: function hashStruct(name, types, value) {\n      return TypedDataEncoder.from(types).hashStruct(name, value);\n    }\n  }, {\n    key: \"hashDomain\",\n    value: function hashDomain(domain) {\n      var domainFields = [];\n\n      for (var name in domain) {\n        var type = domainFieldTypes[name];\n\n        if (!type) {\n          logger.throwArgumentError(\"invalid typed-data domain key: \".concat(JSON.stringify(name)), \"domain\", domain);\n        }\n\n        domainFields.push({\n          name: name,\n          type: type\n        });\n      }\n\n      domainFields.sort(function (a, b) {\n        return domainFieldNames.indexOf(a.name) - domainFieldNames.indexOf(b.name);\n      });\n      return TypedDataEncoder.hashStruct(\"EIP712Domain\", {\n        EIP712Domain: domainFields\n      }, domain);\n    }\n  }, {\n    key: \"encode\",\n    value: function encode(domain, types, value) {\n      return hexConcat([\"0x1901\", TypedDataEncoder.hashDomain(domain), TypedDataEncoder.from(types).hash(value)]);\n    }\n  }, {\n    key: \"hash\",\n    value: function hash(domain, types, value) {\n      return keccak256(TypedDataEncoder.encode(domain, types, value));\n    } // Replaces all address types with ENS names with their looked up address\n\n  }, {\n    key: \"resolveNames\",\n    value: function resolveNames(domain, types, value, resolveName) {\n      return __awaiter(this, void 0, void 0, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var ensCache, encoder, name;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                // Make a copy to isolate it from the object passed in\n                domain = shallowCopy(domain); // Look up all ENS names\n\n                ensCache = {}; // Do we need to look up the domain's verifyingContract?\n\n                if (domain.verifyingContract && !isHexString(domain.verifyingContract, 20)) {\n                  ensCache[domain.verifyingContract] = \"0x\";\n                } // We are going to use the encoder to visit all the base values\n\n\n                encoder = TypedDataEncoder.from(types); // Get a list of all the addresses\n\n                encoder.visit(value, function (type, value) {\n                  if (type === \"address\" && !isHexString(value, 20)) {\n                    ensCache[value] = \"0x\";\n                  }\n\n                  return value;\n                }); // Lookup each name\n\n                _context.t0 = _regeneratorRuntime.keys(ensCache);\n\n              case 6:\n                if ((_context.t1 = _context.t0()).done) {\n                  _context.next = 13;\n                  break;\n                }\n\n                name = _context.t1.value;\n                _context.next = 10;\n                return resolveName(name);\n\n              case 10:\n                ensCache[name] = _context.sent;\n                _context.next = 6;\n                break;\n\n              case 13:\n                // Replace the domain verifyingContract if needed\n                if (domain.verifyingContract && ensCache[domain.verifyingContract]) {\n                  domain.verifyingContract = ensCache[domain.verifyingContract];\n                } // Replace all ENS names with their address\n\n\n                value = encoder.visit(value, function (type, value) {\n                  if (type === \"address\" && ensCache[value]) {\n                    return ensCache[value];\n                  }\n\n                  return value;\n                });\n                return _context.abrupt(\"return\", {\n                  domain: domain,\n                  value: value\n                });\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n    }\n  }, {\n    key: \"getPayload\",\n    value: function getPayload(domain, types, value) {\n      // Validate the domain fields\n      TypedDataEncoder.hashDomain(domain); // Derive the EIP712Domain Struct reference type\n\n      var domainValues = {};\n      var domainTypes = [];\n      domainFieldNames.forEach(function (name) {\n        var value = domain[name];\n\n        if (value == null) {\n          return;\n        }\n\n        domainValues[name] = domainChecks[name](value);\n        domainTypes.push({\n          name: name,\n          type: domainFieldTypes[name]\n        });\n      });\n      var encoder = TypedDataEncoder.from(types);\n      var typesWithDomain = shallowCopy(types);\n\n      if (typesWithDomain.EIP712Domain) {\n        logger.throwArgumentError(\"types must not contain EIP712Domain type\", \"types.EIP712Domain\", types);\n      } else {\n        typesWithDomain.EIP712Domain = domainTypes;\n      } // Validate the data structures and types\n\n\n      encoder.encode(value);\n      return {\n        types: typesWithDomain,\n        domain: domainValues,\n        primaryType: encoder.primaryType,\n        message: encoder.visit(value, function (type, value) {\n          // bytes\n          if (type.match(/^bytes(\\d*)/)) {\n            return hexlify(arrayify(value));\n          } // uint or int\n\n\n          if (type.match(/^u?int/)) {\n            return BigNumber.from(value).toString();\n          }\n\n          switch (type) {\n            case \"address\":\n              return value.toLowerCase();\n\n            case \"bool\":\n              return !!value;\n\n            case \"string\":\n              if (typeof value !== \"string\") {\n                logger.throwArgumentError(\"invalid string\", \"value\", value);\n              }\n\n              return value;\n          }\n\n          return logger.throwArgumentError(\"unsupported type\", \"type\", type);\n        })\n      };\n    }\n  }]);\n\n  return TypedDataEncoder;\n}();","map":{"version":3,"mappings":"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","names":["getAddress","BigNumber","arrayify","hexConcat","hexlify","hexZeroPad","isHexString","keccak256","deepCopy","defineReadOnly","shallowCopy","Logger","version","logger","id","padding","Uint8Array","fill","NegativeOne","from","Zero","One","MaxUint256","hexPadRight","value","bytes","padOffset","length","slice","hexTrue","toHexString","hexFalse","domainFieldTypes","name","chainId","verifyingContract","salt","domainFieldNames","checkString","key","throwArgumentError","JSON","stringify","domainChecks","toString","error","toLowerCase","Error","getBaseEncoder","type","match","signed","width","parseInt","String","boundsUpper","mask","boundsLower","add","mul","v","lt","gt","toTwos","encodeType","fields","map","join","TypedDataEncoder","types","Object","freeze","links","parents","subtypes","keys","forEach","uniqueNames","field","baseType","encoder","push","primaryTypes","filter","n","t","checkCircular","found","child","subtype","primaryType","st","sort","_types","_encoderCache","_getEncoder","subEncoder","getEncoder","result","encodedType","values","unshift","encodeData","hashStruct","callback","_visit","reduce","accum","domain","domainFields","a","b","indexOf","EIP712Domain","hashDomain","hash","encode","resolveName","ensCache","visit","domainValues","domainTypes","typesWithDomain","message"],"sourceRoot":"","sources":["../src.ts/typed-data.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}