{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4;import React,{useState}from'react';import{Flex,Heading}from'@pancakeswap-libs/uikit';import useI18n from'hooks/useI18n';import labo from'config/constants/labo';import{useHarvest}from'hooks/useHarvest';import{getBalanceNumber}from'utils/formatBalance';import styled from'styled-components';import{FaHandHoldingUsd}from'react-icons/fa';import useStake from'../../../../hooks/useStake';import{usePriceCakeBusd}from\"../../../../state/hooks\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var USDStaked=styled.text(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-size: 15px;\\n  align-items: center;\\n  color: #8E8E8E;\\n  display: flex;\\n  margin-top: 3px;\\n  justify-content: flex-start;\\n\"])));var BalanceAndCompound=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  align-items: center;\\n  justify-content: space-between;\\n  flex-direction: column;\\n\"])));var StyledBtn=styled.button(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  -webkit-box-align: center;\\n  align-items: center;\\n  background-color: #2E3543 !important;\\n  border: 1px;\\n  border-style: solid !important;\\n  border-color: #2E3543 !important;\\n  border-radius: 10px;\\n  color: #ffff;\\n  font-size: 15px;\\n  font-weight: 400;\\n  width: 100%;\\n  display: inline-flex;\\n  min-height: 18px;\\n  max-height: 30px;\\n  max-width: 120px;\\n  padding: 20px;\\n  box-shadow: 0px 0px 10px #ffff, 0 0px 0px 0 #fff;\\n\\n  \"])));var LPStaked=styled.text(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\nfont-size: 12px;\\nfont-weigth: 30;\\nalign-items: center;\\ncolor: \",\";\\nmargin-top: 3px;\\njustify-content: flex-start;\\n\"])),function(_ref){var theme=_ref.theme;return theme.colors.textSubtle;});var HarvestAction=function HarvestAction(_ref2){var earnings=_ref2.earnings,pid=_ref2.pid;var TranslateString=useI18n();var _useState=useState(false),_useState2=_slicedToArray(_useState,2),pendingTx=_useState2[0],setPendingTx=_useState2[1];var _useHarvest=useHarvest(pid),onReward=_useHarvest.onReward;var _useStake=useStake(pid),onStake=_useStake.onStake;var cakePrice=usePriceCakeBusd();var rawEarningsBalance=getBalanceNumber(earnings);var displayBalance=rawEarningsBalance.toLocaleString();var rawEarningsUsdBalance=getBalanceNumber(earnings.times(cakePrice));var displayBalanceUsd=rawEarningsUsdBalance.toLocaleString('en-us',{maximumFractionDigits:2,minimumFractionDigits:2});return/*#__PURE__*/_jsxs(Flex,{mb:\"10px\",justifyContent:\"space-between\",alignItems:\"center\",children:[/*#__PURE__*/_jsxs(Heading,{color:rawEarningsBalance===0?'textDisabled':'text',children:[/*#__PURE__*/_jsx(LPStaked,{style:{'color':'white','fontSize':'16px'},children:displayBalance}),earnings.gt(0)&&/*#__PURE__*/_jsxs(USDStaked,{children:[\"~$\",displayBalanceUsd]})]}),/*#__PURE__*/_jsxs(BalanceAndCompound,{children:[pid===labo.pids.pidLabo?/*#__PURE__*/_jsx(StyledBtn,{disabled:rawEarningsBalance===0||pendingTx,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);_context.next=3;return onStake(rawEarningsBalance.toString());case 3:setPendingTx(false);case 4:case\"end\":return _context.stop();}}},_callee);})),style:{'borderRadius':'5px','height':'40px','width':'103px','marginRight':'1px'},children:TranslateString(999,'Compound')}):null,/*#__PURE__*/_jsxs(StyledBtn,{disabled:rawEarningsBalance===0||pendingTx,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:setPendingTx(true);_context2.next=3;return onReward();case 3:setPendingTx(false);case 4:case\"end\":return _context2.stop();}}},_callee2);})),style:{'color':'white'},children:[\"Claim  \\xA0\",/*#__PURE__*/_jsx(FaHandHoldingUsd,{})]})]})]});};export default HarvestAction;","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Farms/components/FarmCard/HarvestAction.tsx"],"names":["React","useState","Flex","Heading","useI18n","labo","useHarvest","getBalanceNumber","styled","FaHandHoldingUsd","useStake","usePriceCakeBusd","USDStaked","text","BalanceAndCompound","div","StyledBtn","button","LPStaked","theme","colors","textSubtle","HarvestAction","earnings","pid","TranslateString","pendingTx","setPendingTx","onReward","onStake","cakePrice","rawEarningsBalance","displayBalance","toLocaleString","rawEarningsUsdBalance","times","displayBalanceUsd","maximumFractionDigits","minimumFractionDigits","gt","pids","pidLabo","toString"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport {  Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport labo from 'config/constants/labo'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport styled from 'styled-components'\nimport { FaHandHoldingUsd} from 'react-icons/fa';\nimport useStake from '../../../../hooks/useStake'\nimport {usePriceCakeBusd} from \"../../../../state/hooks\";\n\n\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst USDStaked = styled.text`\n  font-size: 15px;\n  align-items: center;\n  color: #8E8E8E;\n  display: flex;\n  margin-top: 3px;\n  justify-content: flex-start;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n`\n\nconst StyledBtn = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: #2E3543 !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #2E3543 !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 400;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 120px;\n  padding: 20px;\n  box-shadow: 0px 0px 10px #ffff, 0 0px 0px 0 #fff;\n\n  `\n\n  const LPStaked = styled.text`\nfont-size: 12px;\nfont-weigth: 30;\nalign-items: center;\ncolor: ${({ theme }) => theme.colors.textSubtle};\nmargin-top: 3px;\njustify-content: flex-start;\n`\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const { onStake } = useStake(pid)\n  const cakePrice = usePriceCakeBusd()\n\n  const rawEarningsBalance = getBalanceNumber(earnings)\n  const displayBalance = rawEarningsBalance.toLocaleString()\n  const rawEarningsUsdBalance = getBalanceNumber(earnings.times(cakePrice), )\n  const displayBalanceUsd = rawEarningsUsdBalance.toLocaleString('en-us',{ maximumFractionDigits: 2, minimumFractionDigits: 2 })\n\n  return (\n    <Flex mb='10px' justifyContent='space-between' alignItems='center'>\n\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>\n          <LPStaked style={{'color': 'white', 'fontSize': '16px'}}>\n              {displayBalance}\n          </LPStaked>\n          {earnings.gt(0) && <USDStaked>~${displayBalanceUsd}</USDStaked>}\n      </Heading>\n\n      <BalanceAndCompound>\n        {pid === labo.pids.pidLabo ?\n          <StyledBtn\n            disabled={rawEarningsBalance === 0 || pendingTx}\n\n            onClick={async () => {\n              setPendingTx(true)\n              await onStake(rawEarningsBalance.toString())\n              setPendingTx(false)\n            }}\n            style={{\n              'borderRadius': '5px',\n              'height': '40px',\n              'width': '103px',\n              'marginRight': '1px'\n            }}\n          >\n            {TranslateString(999, 'Compound')}\n          </StyledBtn>\n          : null}\n\n        <StyledBtn\n          disabled={rawEarningsBalance === 0 || pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)}}\n          style={{'color': 'white'}}>Claim  &nbsp;<FaHandHoldingUsd/>\n        </StyledBtn>\n\n      </BalanceAndCompound>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n"]},"metadata":{},"sourceType":"module"}