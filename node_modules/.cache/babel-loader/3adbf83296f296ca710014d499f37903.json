{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StringTranslationsModel = exports.StringTranslations = void 0;\n\nvar core_1 = require(\"../core\");\n\nvar StringTranslations = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(StringTranslations, _core_1$CrowdinApi);\n\n  var _super = _createSuper(StringTranslations);\n\n  function StringTranslations() {\n    _classCallCheck(this, StringTranslations);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(StringTranslations, [{\n    key: \"listTranslationApprovals\",\n    value:\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param languageId language identifier\n     * @param translationId translation identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     * @param fileId file identifier\n     */\n    function listTranslationApprovals(projectId, stringId, languageId, translationId, limit, offset, fileId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/approvals\");\n      url = this.addQueryParam(url, 'stringId', stringId);\n      url = this.addQueryParam(url, 'languageId', languageId);\n      url = this.addQueryParam(url, 'translationId', translationId);\n      url = this.addQueryParam(url, 'fileId', fileId);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"addApproval\",\n    value: function addApproval(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/approvals\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param approvalId approval identifier\n     */\n\n  }, {\n    key: \"approvalInfo\",\n    value: function approvalInfo(projectId, approvalId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/approvals/\").concat(approvalId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param approvalId approval identifier\n     */\n\n  }, {\n    key: \"removeApproval\",\n    value: function removeApproval(projectId, approvalId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/approvals/\").concat(approvalId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param languageId language identifier\n     * @param stringIds filter translations by stringIds\n     * @param fileId filter translations by fileId\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     * @param labelIds filter translations by fileId\n     * @param denormalizePlaceholders enable denormalize placeholders\n     */\n\n  }, {\n    key: \"listLanguageTranslations\",\n    value: function listLanguageTranslations(projectId, languageId, stringIds, fileId, limit, offset, labelIds, denormalizePlaceholders) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/languages/\").concat(languageId, \"/translations\");\n      url = this.addQueryParam(url, 'stringIds', stringIds);\n      url = this.addQueryParam(url, 'fileId', fileId);\n      url = this.addQueryParam(url, 'labelIds', labelIds);\n      url = this.addQueryParam(url, 'denormalizePlaceholders', denormalizePlaceholders);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param languageId language identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     * @param denormalizePlaceholders enable denormalize placeholders\n     */\n\n  }, {\n    key: \"listStringTranslations\",\n    value: function listStringTranslations(projectId, stringId, languageId, limit, offset, denormalizePlaceholders) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations\");\n      url = this.addQueryParam(url, 'stringId', stringId);\n      url = this.addQueryParam(url, 'languageId', languageId);\n      url = this.addQueryParam(url, 'denormalizePlaceholders', denormalizePlaceholders);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"addTranslation\",\n    value: function addTranslation(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param languageId language identifier\n     */\n\n  }, {\n    key: \"deleteAllTranslations\",\n    value: function deleteAllTranslations(projectId, stringId, languageId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations\");\n      url = this.addQueryParam(url, 'stringId', stringId);\n      url = this.addQueryParam(url, 'languageId', languageId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translationId translation identifier\n     */\n\n  }, {\n    key: \"translationInfo\",\n    value: function translationInfo(projectId, translationId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations/\").concat(translationId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translation translation identifier\n     */\n\n  }, {\n    key: \"deleteTranslation\",\n    value: function deleteTranslation(projectId, translationId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations/\").concat(translationId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translation translation identifier\n     */\n\n  }, {\n    key: \"restoreTranslation\",\n    value: function restoreTranslation(projectId, translationId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations/\").concat(translationId, \"/restore\");\n      return this.put(url, {}, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param languageId language identifier\n     * @param translationId translation identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n\n  }, {\n    key: \"listTranslationVotes\",\n    value: function listTranslationVotes(projectId, stringId, languageId, translationId, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/votes\");\n      url = this.addQueryParam(url, 'stringId', stringId);\n      url = this.addQueryParam(url, 'languageId', languageId);\n      url = this.addQueryParam(url, 'translationId', translationId);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"addVote\",\n    value: function addVote(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/votes\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param voteId vote identifier\n     */\n\n  }, {\n    key: \"voteInfo\",\n    value: function voteInfo(projectId, voteId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/votes/\").concat(voteId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param voteId vote identifier\n     */\n\n  }, {\n    key: \"cancelVote\",\n    value: function cancelVote(projectId, voteId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/votes/\").concat(voteId);\n      return this.delete(url, this.defaultConfig());\n    }\n  }]);\n\n  return StringTranslations;\n}(core_1.CrowdinApi);\n\nexports.StringTranslations = StringTranslations;\nvar StringTranslationsModel;\n\n(function (StringTranslationsModel) {\n  var Mark;\n\n  (function (Mark) {\n    Mark[\"UP\"] = \"up\";\n    Mark[\"DOWN\"] = \"down\";\n  })(Mark = StringTranslationsModel.Mark || (StringTranslationsModel.Mark = {}));\n})(StringTranslationsModel = exports.StringTranslationsModel || (exports.StringTranslationsModel = {}));","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/@crowdin/crowdin-api-client/out/stringTranslations/index.js"],"names":["Object","defineProperty","exports","value","StringTranslationsModel","StringTranslations","core_1","require","projectId","stringId","languageId","translationId","limit","offset","fileId","url","addQueryParam","getList","request","post","defaultConfig","approvalId","get","delete","stringIds","labelIds","denormalizePlaceholders","put","voteId","CrowdinApi","Mark"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.StringTranslationsModel = exports.StringTranslations = void 0;\nconst core_1 = require(\"../core\");\nclass StringTranslations extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param languageId language identifier\n     * @param translationId translation identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     * @param fileId file identifier\n     */\n    listTranslationApprovals(projectId, stringId, languageId, translationId, limit, offset, fileId) {\n        let url = `${this.url}/projects/${projectId}/approvals`;\n        url = this.addQueryParam(url, 'stringId', stringId);\n        url = this.addQueryParam(url, 'languageId', languageId);\n        url = this.addQueryParam(url, 'translationId', translationId);\n        url = this.addQueryParam(url, 'fileId', fileId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    addApproval(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/approvals`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param approvalId approval identifier\n     */\n    approvalInfo(projectId, approvalId) {\n        const url = `${this.url}/projects/${projectId}/approvals/${approvalId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param approvalId approval identifier\n     */\n    removeApproval(projectId, approvalId) {\n        const url = `${this.url}/projects/${projectId}/approvals/${approvalId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param languageId language identifier\n     * @param stringIds filter translations by stringIds\n     * @param fileId filter translations by fileId\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     * @param labelIds filter translations by fileId\n     * @param denormalizePlaceholders enable denormalize placeholders\n     */\n    listLanguageTranslations(projectId, languageId, stringIds, fileId, limit, offset, labelIds, denormalizePlaceholders) {\n        let url = `${this.url}/projects/${projectId}/languages/${languageId}/translations`;\n        url = this.addQueryParam(url, 'stringIds', stringIds);\n        url = this.addQueryParam(url, 'fileId', fileId);\n        url = this.addQueryParam(url, 'labelIds', labelIds);\n        url = this.addQueryParam(url, 'denormalizePlaceholders', denormalizePlaceholders);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param languageId language identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     * @param denormalizePlaceholders enable denormalize placeholders\n     */\n    listStringTranslations(projectId, stringId, languageId, limit, offset, denormalizePlaceholders) {\n        let url = `${this.url}/projects/${projectId}/translations`;\n        url = this.addQueryParam(url, 'stringId', stringId);\n        url = this.addQueryParam(url, 'languageId', languageId);\n        url = this.addQueryParam(url, 'denormalizePlaceholders', denormalizePlaceholders);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    addTranslation(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/translations`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param languageId language identifier\n     */\n    deleteAllTranslations(projectId, stringId, languageId) {\n        let url = `${this.url}/projects/${projectId}/translations`;\n        url = this.addQueryParam(url, 'stringId', stringId);\n        url = this.addQueryParam(url, 'languageId', languageId);\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translationId translation identifier\n     */\n    translationInfo(projectId, translationId) {\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translation translation identifier\n     */\n    deleteTranslation(projectId, translationId) {\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param translation translation identifier\n     */\n    restoreTranslation(projectId, translationId) {\n        const url = `${this.url}/projects/${projectId}/translations/${translationId}/restore`;\n        return this.put(url, {}, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param stringId string identifier\n     * @param languageId language identifier\n     * @param translationId translation identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listTranslationVotes(projectId, stringId, languageId, translationId, limit, offset) {\n        let url = `${this.url}/projects/${projectId}/votes`;\n        url = this.addQueryParam(url, 'stringId', stringId);\n        url = this.addQueryParam(url, 'languageId', languageId);\n        url = this.addQueryParam(url, 'translationId', translationId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    addVote(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/votes`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param voteId vote identifier\n     */\n    voteInfo(projectId, voteId) {\n        const url = `${this.url}/projects/${projectId}/votes/${voteId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param voteId vote identifier\n     */\n    cancelVote(projectId, voteId) {\n        const url = `${this.url}/projects/${projectId}/votes/${voteId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n}\nexports.StringTranslations = StringTranslations;\nvar StringTranslationsModel;\n(function (StringTranslationsModel) {\n    let Mark;\n    (function (Mark) {\n        Mark[\"UP\"] = \"up\";\n        Mark[\"DOWN\"] = \"down\";\n    })(Mark = StringTranslationsModel.Mark || (StringTranslationsModel.Mark = {}));\n})(StringTranslationsModel = exports.StringTranslationsModel || (exports.StringTranslationsModel = {}));\n"]},"metadata":{},"sourceType":"script"}