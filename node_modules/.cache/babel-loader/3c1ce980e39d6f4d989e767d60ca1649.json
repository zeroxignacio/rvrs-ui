{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Dictionaries = void 0;\n\nvar core_1 = require(\"../core\");\n\nvar Dictionaries = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(Dictionaries, _core_1$CrowdinApi);\n\n  var _super = _createSuper(Dictionaries);\n\n  function Dictionaries() {\n    _classCallCheck(this, Dictionaries);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Dictionaries, [{\n    key: \"listDictionaries\",\n    value:\n    /**\n     * @param projectId project identifier\n     * @param languageIds filter progress by Language Identifiers\n     */\n    function listDictionaries(projectId, languageIds) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/dictionaries\");\n      url = this.addQueryParam(url, 'languageIds', languageIds);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param languageId language identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"editDictionary\",\n    value: function editDictionary(projectId, languageId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/dictionaries/\").concat(languageId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n  }]);\n\n  return Dictionaries;\n}(core_1.CrowdinApi);\n\nexports.Dictionaries = Dictionaries;","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/@crowdin/crowdin-api-client/out/dictionaries/index.js"],"names":["Object","defineProperty","exports","value","Dictionaries","core_1","require","projectId","languageIds","url","addQueryParam","get","defaultConfig","languageId","request","patch","CrowdinApi"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,YAAR,GAAuB,KAAK,CAA5B;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;IACMF,Y;;;;;;;;;;;;;;AACF;AACJ;AACA;AACA;AACI,8BAAiBG,SAAjB,EAA4BC,WAA5B,EAAyC;AACrC,UAAIC,GAAG,aAAM,KAAKA,GAAX,uBAA2BF,SAA3B,kBAAP;AACAE,MAAAA,GAAG,GAAG,KAAKC,aAAL,CAAmBD,GAAnB,EAAwB,aAAxB,EAAuCD,WAAvC,CAAN;AACA,aAAO,KAAKG,GAAL,CAASF,GAAT,EAAc,KAAKG,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,wBAAeL,SAAf,EAA0BM,UAA1B,EAAsCC,OAAtC,EAA+C;AAC3C,UAAML,GAAG,aAAM,KAAKA,GAAX,uBAA2BF,SAA3B,2BAAqDM,UAArD,CAAT;AACA,aAAO,KAAKE,KAAL,CAAWN,GAAX,EAAgBK,OAAhB,EAAyB,KAAKF,aAAL,EAAzB,CAAP;AACH;;;;EAlBsBP,MAAM,CAACW,U;;AAoBlCd,OAAO,CAACE,YAAR,GAAuBA,YAAvB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Dictionaries = void 0;\nconst core_1 = require(\"../core\");\nclass Dictionaries extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param languageIds filter progress by Language Identifiers\n     */\n    listDictionaries(projectId, languageIds) {\n        let url = `${this.url}/projects/${projectId}/dictionaries`;\n        url = this.addQueryParam(url, 'languageIds', languageIds);\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param languageId language identifier\n     * @param request request body\n     */\n    editDictionary(projectId, languageId, request) {\n        const url = `${this.url}/projects/${projectId}/dictionaries/${languageId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.Dictionaries = Dictionaries;\n"]},"metadata":{},"sourceType":"script"}