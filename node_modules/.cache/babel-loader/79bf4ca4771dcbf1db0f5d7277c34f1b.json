{"ast":null,"code":"import BigNumber from 'bignumber.js';\nimport { ethers } from 'ethers';\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods.approve(masterChefContract.options.address, ethers.constants.MaxUint256).send({\n    from: account\n  });\n};\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods.deposit(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), account, account).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const airdropClaim = async (rewardClaimContract, account) => {\n  return rewardClaimContract.methods.claim(account).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods.deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousStakeBurn = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods.transact(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods.deposit().send({\n    from: account,\n    value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods.withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), account).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0xcD81CBB9248a6635e6Fd26C2991911FC6c01F85C') {\n    return sousChefContract.methods.emergencyWithdraw().send({\n      from: account\n    }).on('transactionHash', tx => {\n      return tx.transactionHash;\n    });\n  }\n\n  if (sousChefContract.options.address === '0xcD81CBB9248a6635e6Fd26C2991911FC6c01F85C') {\n    return sousChefContract.methods.emergencyWithdraw().send({\n      from: account\n    }).on('transactionHash', tx => {\n      return tx.transactionHash;\n    });\n  }\n\n  return sousChefContract.methods.withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString()).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods.emergencyWithdraw().send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods.harvest(pid, account).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods.deposit('0').send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const soushHarvestBurn = async (sousChefContract, account) => {\n  return sousChefContract.methods.transact('0').send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const soushHarvestBurn2 = async (sousChefContract, account) => {\n  return sousChefContract.methods.transact('0', account).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods.deposit('0').send({\n    from: account,\n    value: new BigNumber(0)\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};\nexport const sousStakeBurn2 = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods.transact(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), account).send({\n    from: account\n  }).on('transactionHash', tx => {\n    return tx.transactionHash;\n  });\n};","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/callHelpers.ts"],"names":["BigNumber","ethers","approve","lpContract","masterChefContract","account","methods","options","address","constants","MaxUint256","send","from","stake","pid","amount","deposit","times","pow","toString","on","tx","transactionHash","airdropClaim","rewardClaimContract","claim","sousStake","sousChefContract","sousStakeBurn","transact","sousStakeBnb","value","unstake","withdraw","sousUnstake","emergencyWithdraw","sousEmegencyUnstake","harvest","soushHarvest","soushHarvestBurn","soushHarvestBurn2","soushHarvestBnb","sousStakeBurn2"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const approve = async (lpContract, masterChefContract, account) => {\n  return lpContract.methods\n    .approve(masterChefContract.options.address, ethers.constants.MaxUint256)\n    .send({ from: account })\n}\n\nexport const stake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .deposit(\n        pid,\n        new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(),\n        account,\n        account\n    )\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const airdropClaim = async (rewardClaimContract, account) => {\n    return rewardClaimContract.methods\n        .claim(account)\n        .send({ from: account })\n        .on('transactionHash', (tx) => {\n            return tx.transactionHash\n        })\n}\n\nexport const sousStake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBurn = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .transact(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBnb = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .deposit()\n    .send({ from: account, value: new BigNumber(amount).times(new BigNumber(10).pow(18)).toString() })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const unstake = async (masterChefContract, pid, amount, account) => {\n  return masterChefContract.methods\n    .withdraw(pid, new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), account)\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousUnstake = async (sousChefContract, amount, account) => {\n  // shit code: hard fix for old CTK and BLK\n  if (sousChefContract.options.address === '0xcD81CBB9248a6635e6Fd26C2991911FC6c01F85C') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  if (sousChefContract.options.address === '0xcD81CBB9248a6635e6Fd26C2991911FC6c01F85C') {\n    return sousChefContract.methods\n      .emergencyWithdraw()\n      .send({ from: account })\n      .on('transactionHash', (tx) => {\n        return tx.transactionHash\n      })\n  }\n  return sousChefContract.methods\n    .withdraw(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString())\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousEmegencyUnstake = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .emergencyWithdraw()\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const harvest = async (masterChefContract, pid, account) => {\n  return masterChefContract.methods\n    .harvest(pid, account)\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvest = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBurn = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .transact('0')\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBurn2 = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .transact('0', account)\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const soushHarvestBnb = async (sousChefContract, account) => {\n  return sousChefContract.methods\n    .deposit('0')\n    .send({ from: account, value: new BigNumber(0) })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n\nexport const sousStakeBurn2 = async (sousChefContract, amount, account) => {\n  return sousChefContract.methods\n    .transact(new BigNumber(amount).times(new BigNumber(10).pow(18)).toString(), account)\n    .send({ from: account })\n    .on('transactionHash', (tx) => {\n      return tx.transactionHash\n    })\n}\n"]},"metadata":{},"sourceType":"module"}