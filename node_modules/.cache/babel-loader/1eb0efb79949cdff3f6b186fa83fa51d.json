{"ast":null,"code":"import BigNumber from'bignumber.js';import{useEffect}from'react';import labo from'config/constants/labo';import{useDispatch,useSelector}from'react-redux';import useRefresh from'hooks/useRefresh';import{fetchFarmsPublicDataAsync,fetchPools2PublicDataAsync,fetchPoolsPublicDataAsync,fetchPoolsUserDataAsync,fetchPools2UserDataAsync}from'./actions';import{QuoteToken}from'../config/constants/types';var ZERO=new BigNumber(0);var TEN_POW_18=new BigNumber(10).pow(18);export var useFetchPublicData=function useFetchPublicData(){var dispatch=useDispatch();var _useRefresh=useRefresh(),slowRefresh=_useRefresh.slowRefresh;useEffect(function(){dispatch(fetchFarmsPublicDataAsync());dispatch(fetchPoolsPublicDataAsync());dispatch(fetchPools2PublicDataAsync());},[dispatch,slowRefresh]);};// Farms\nexport var useFarms=function useFarms(){var farms=useSelector(function(state){return state.farms.data;});return farms;};export var usePoolsPublic=function usePoolsPublic(){var pools=useSelector(function(state){return state.pools.data;});return pools;};export var usePoolsPublic2=function usePoolsPublic2(){var pools2=useSelector(function(state){return state.pools2.data;});return pools2;};export var useFarmFromPid=function useFarmFromPid(pid){var farm=useSelector(function(state){return state.farms.data.find(function(f){return f.pid===pid;});});return farm;};export var useFarmFromSymbol=function useFarmFromSymbol(lpSymbol){var farm=useSelector(function(state){return state.farms.data.find(function(f){return f.lpSymbol===lpSymbol;});});return farm;};export var useFarmTokensToUsd=function useFarmTokensToUsd(pid,farmTokens){// farmTokens is the # of LP tokens, or just the number of tokens for single staking pools\n// All price logic should go here for farms\nvar farm=useFarmFromPid(pid);var prices=usePrices();var quoteTokenAmount=new BigNumber(farm.quoteTokenPerLp).times(farmTokens);return getTotalValueFromQuoteTokens(quoteTokenAmount,farm.quoteTokenSymbol,prices);};export var useFarmUser=function useFarmUser(pid){var farm=useFarmFromPid(pid);return{allowance:farm.userData?new BigNumber(farm.userData.allowance):new BigNumber(0),tokenBalance:farm.userData?new BigNumber(farm.userData.tokenBalance):new BigNumber(0),stakedBalance:farm.userData?new BigNumber(farm.userData.stakedBalance):new BigNumber(0),earnings:farm.userData?new BigNumber(farm.userData.earnings):new BigNumber(0)};};// Pools\nexport var usePools=function usePools(account){var _useRefresh2=useRefresh(),fastRefresh=_useRefresh2.fastRefresh;var dispatch=useDispatch();useEffect(function(){if(account){dispatch(fetchPoolsUserDataAsync(account));}},[account,dispatch,fastRefresh]);var pools=useSelector(function(state){return state.pools.data;});return pools;};export var usePools2=function usePools2(account){var _useRefresh3=useRefresh(),fastRefresh=_useRefresh3.fastRefresh;var dispatch=useDispatch();useEffect(function(){if(account){dispatch(fetchPools2UserDataAsync(account));}},[account,dispatch,fastRefresh]);var pools2=useSelector(function(state){return state.pools2.data;});return pools2;};export var usePool2FromPid=function usePool2FromPid(sousId){var pool2=useSelector(function(state){return state.pools2.data.find(function(p){return p.sousId===sousId;});});return pool2;};export var usePoolFromPid=function usePoolFromPid(sousId){var pool=useSelector(function(state){return state.pools.data.find(function(p){return p.sousId===sousId;});});return pool;};// Prices\nexport var usePriceBnbBusd=function usePriceBnbBusd(){var pid=labo.pids.pidBnbBusd;// BUSD-BNB LP\nvar farm=useFarmFromPid(pid);return farm.tokenPriceVsQuote?new BigNumber(farm.tokenPriceVsQuote):ZERO;};// export const fetchLaboPrice = (): BigNumber => {\n//   const query = `\n//   {ethereum(network: bsc){\n//     address(address: {is: \"0xbf9a298a948079bed1e0902e78c61b1b30f58e7e\"}){\n//     balances {\n//     currency {\n//     symbol\n//     }\n//     value\n//     }}\n//     }}\n// `;\n// const url = \"https://graphql.bitquery.io/\";\n// const opts = {\n//     method: \"POST\",\n//     headers: {\n//         \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({\n//         query\n//     })\n// };\n// fetch(url, opts)\n//   .then(response => response.json())\n//   .then(json => {\n//     if (process.env.REACT_APP_DEBUG === \"true\") console.log(json.data.ethereum.address[0].balances);\n//   })\n//   .catch(console.error);\n//   return new BigNumber(3);\n// }\nexport var usePriceCakeBusd=function usePriceCakeBusd(){var pid=3;var farm=useFarmFromPid(pid);return new BigNumber(farm.tokenPriceVsQuote);};export var usePrices=function usePrices(){var misPrice=usePriceCakeBusd();var onePrice=usePriceBnbBusd();return[{name:QuoteToken.MIS,price:misPrice},{name:QuoteToken.RVRS,price:misPrice},{name:QuoteToken.CAKE,price:misPrice},{name:QuoteToken.ONE,price:onePrice}];};export var lookupPrice=function lookupPrice(tokenName,prices){// lookup a specific price from usePrices output\nvar tokenPrice=prices.find(function(f){return f.name===tokenName;});if(tokenPrice){return tokenPrice.price;}console.log('prices',prices);console.log(\"ERROR: No price found for\",tokenName);return new BigNumber(0);};export var getTotalValueFromQuoteTokens=function getTotalValueFromQuoteTokens(quoteTokenAmount,quoteToken,prices){// WARNING: Needs to be updated for single-staking pools\n// First handle all stable-coins\nif(quoteToken===QuoteToken.UST||quoteToken===QuoteToken.BUSD){return new BigNumber(2).times(quoteTokenAmount);}if(quoteToken===QuoteToken.JEWEL){return new BigNumber(28).times(quoteTokenAmount);}if(quoteToken===QuoteToken.ONE){var price=lookupPrice(QuoteToken.ONE,prices);return new BigNumber(2).times(quoteTokenAmount).times(price);}if(quoteToken===QuoteToken.RVRS){var _price=lookupPrice(QuoteToken.RVRS,prices);return new BigNumber(2).times(quoteTokenAmount).times(_price);}console.log(\"ERROR: NO PRICE FOUND FOR QuoteToken:\",quoteToken);return new BigNumber(0);};export var useTotalValue=function useTotalValue(){var farms=useFarms();var prices=usePrices();var pools=usePoolsPublic();var pools2=usePoolsPublic2();var value=new BigNumber(0);for(var i=0;i<farms.length;i++){var farm=farms[i];if(farm.lpTotalInQuoteToken){var val=new BigNumber(0);val=getTotalValueFromQuoteTokens(farm.quoteTokenAmount,farm.quoteTokenSymbol,prices);// console.log(\"useTotalValue\", farm.pid, val && val.toNumber(), farm)\nvalue=value.plus(val);}}// Do incubator pools\nfor(var _i=0;_i<pools.length;_i++){var pool=pools[_i];var quoteTokens=new BigNumber(pool.quoteTokenPerLp).times(pool.totalStaked).div(new BigNumber(10).pow(18));var _val=getTotalValueFromQuoteTokens(quoteTokens,pool.quoteTokenSymbol,prices);if(_val){// console.log(\"useTotalValue\", farm.pid, val && val.toNumber(), farm)\nvalue=value.plus(_val);}}// Do burn pools\nfor(var _i2=0;_i2<pools2.length;_i2++){var pool2=pools2[_i2];var _quoteTokens=new BigNumber(pool2.quoteTokenPerLp).times(pool2.totalStaked).div(new BigNumber(10).pow(18));var _val2=getTotalValueFromQuoteTokens(_quoteTokens.div(2),pool2.quoteTokenSymbol,prices);if(_val2&&!pool2.isFinished){// console.log(\"useTotalValue\", farm.pid, val && val.toNumber(), farm)\nvalue=value.plus(_val2);}}return value;};","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/hooks.ts"],"names":["BigNumber","useEffect","labo","useDispatch","useSelector","useRefresh","fetchFarmsPublicDataAsync","fetchPools2PublicDataAsync","fetchPoolsPublicDataAsync","fetchPoolsUserDataAsync","fetchPools2UserDataAsync","QuoteToken","ZERO","TEN_POW_18","pow","useFetchPublicData","dispatch","slowRefresh","useFarms","farms","state","data","usePoolsPublic","pools","usePoolsPublic2","pools2","useFarmFromPid","pid","farm","find","f","useFarmFromSymbol","lpSymbol","useFarmTokensToUsd","farmTokens","prices","usePrices","quoteTokenAmount","quoteTokenPerLp","times","getTotalValueFromQuoteTokens","quoteTokenSymbol","useFarmUser","allowance","userData","tokenBalance","stakedBalance","earnings","usePools","account","fastRefresh","usePools2","usePool2FromPid","sousId","pool2","p","usePoolFromPid","pool","usePriceBnbBusd","pids","pidBnbBusd","tokenPriceVsQuote","usePriceCakeBusd","misPrice","onePrice","name","MIS","price","RVRS","CAKE","ONE","lookupPrice","tokenName","tokenPrice","console","log","quoteToken","UST","BUSD","JEWEL","useTotalValue","value","i","length","lpTotalInQuoteToken","val","plus","quoteTokens","totalStaked","div","isFinished"],"mappings":"AAAA,MAAOA,CAAAA,SAAP,KAAsB,cAAtB,CACA,OAAQC,SAAR,KAAwB,OAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,OAAQC,WAAR,CAAqBC,WAArB,KAAuC,aAAvC,CACA,MAAOC,CAAAA,UAAP,KAAuB,kBAAvB,CACA,OACEC,yBADF,CAEEC,0BAFF,CAGEC,yBAHF,CAIEC,uBAJF,CAKEC,wBALF,KAMO,WANP,CAQA,OAAQC,UAAR,KAAyB,2BAAzB,CAEA,GAAMC,CAAAA,IAAI,CAAG,GAAIZ,CAAAA,SAAJ,CAAc,CAAd,CAAb,CACA,GAAMa,CAAAA,UAAU,CAAG,GAAIb,CAAAA,SAAJ,CAAc,EAAd,EAAkBc,GAAlB,CAAsB,EAAtB,CAAnB,CAEA,MAAO,IAAMC,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,EAAM,CACtC,GAAMC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CACA,gBAAwBE,UAAU,EAAlC,CAAQY,WAAR,aAAQA,WAAR,CACAhB,SAAS,CAAC,UAAM,CACde,QAAQ,CAACV,yBAAyB,EAA1B,CAAR,CACAU,QAAQ,CAACR,yBAAyB,EAA1B,CAAR,CACAQ,QAAQ,CAACT,0BAA0B,EAA3B,CAAR,CACD,CAJQ,CAIN,CAACS,QAAD,CAAWC,WAAX,CAJM,CAAT,CAKD,CARM,CAUP;AAEA,MAAO,IAAMC,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,EAAc,CACpC,GAAMC,CAAAA,KAAK,CAAGf,WAAW,CAAC,SAACgB,KAAD,QAAkBA,CAAAA,KAAK,CAACD,KAAN,CAAYE,IAA9B,EAAD,CAAzB,CACA,MAAOF,CAAAA,KAAP,CACD,CAHM,CAKP,MAAO,IAAMG,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,EAAc,CAC1C,GAAMC,CAAAA,KAAK,CAAGnB,WAAW,CAAC,SAACgB,KAAD,QAAkBA,CAAAA,KAAK,CAACG,KAAN,CAAYF,IAA9B,EAAD,CAAzB,CACA,MAAOE,CAAAA,KAAP,CACD,CAHM,CAKP,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAe,CAC5C,GAAMC,CAAAA,MAAM,CAAGrB,WAAW,CAAC,SAACgB,KAAD,QAAkBA,CAAAA,KAAK,CAACK,MAAN,CAAaJ,IAA/B,EAAD,CAA1B,CACA,MAAOI,CAAAA,MAAP,CACD,CAHM,CAKP,MAAO,IAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,GAAD,CAAe,CAC3C,GAAMC,CAAAA,IAAI,CAAGxB,WAAW,CAAC,SAACgB,KAAD,QAAkBA,CAAAA,KAAK,CAACD,KAAN,CAAYE,IAAZ,CAAiBQ,IAAjB,CAAsB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACH,GAAF,GAAUA,GAAjB,EAAtB,CAAlB,EAAD,CAAxB,CACA,MAAOC,CAAAA,IAAP,CACD,CAHM,CAKP,MAAO,IAAMG,CAAAA,iBAAiB,CAAG,QAApBA,CAAAA,iBAAoB,CAACC,QAAD,CAA4B,CAC3D,GAAMJ,CAAAA,IAAI,CAAGxB,WAAW,CAAC,SAACgB,KAAD,QAAkBA,CAAAA,KAAK,CAACD,KAAN,CAAYE,IAAZ,CAAiBQ,IAAjB,CAAsB,SAACC,CAAD,QAAOA,CAAAA,CAAC,CAACE,QAAF,GAAeA,QAAtB,EAAtB,CAAlB,EAAD,CAAxB,CACA,MAAOJ,CAAAA,IAAP,CACD,CAHM,CAMP,MAAO,IAAMK,CAAAA,kBAAkB,CAAG,QAArBA,CAAAA,kBAAqB,CAACN,GAAD,CAAMO,UAAN,CAAqB,CACrD;AACA;AACA,GAAMN,CAAAA,IAAI,CAAGF,cAAc,CAACC,GAAD,CAA3B,CACA,GAAMQ,CAAAA,MAAM,CAAGC,SAAS,EAAxB,CACA,GAAMC,CAAAA,gBAAgB,CAAG,GAAIrC,CAAAA,SAAJ,CAAc4B,IAAI,CAACU,eAAnB,EAAoCC,KAApC,CAA0CL,UAA1C,CAAzB,CACA,MAAOM,CAAAA,4BAA4B,CAACH,gBAAD,CAAmBT,IAAI,CAACa,gBAAxB,CAA0CN,MAA1C,CAAnC,CACD,CAPM,CASP,MAAO,IAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACf,GAAD,CAAS,CAClC,GAAMC,CAAAA,IAAI,CAAGF,cAAc,CAACC,GAAD,CAA3B,CAEA,MAAO,CACLgB,SAAS,CAAEf,IAAI,CAACgB,QAAL,CAAgB,GAAI5C,CAAAA,SAAJ,CAAc4B,IAAI,CAACgB,QAAL,CAAcD,SAA5B,CAAhB,CAAyD,GAAI3C,CAAAA,SAAJ,CAAc,CAAd,CAD/D,CAEL6C,YAAY,CAAEjB,IAAI,CAACgB,QAAL,CAAgB,GAAI5C,CAAAA,SAAJ,CAAc4B,IAAI,CAACgB,QAAL,CAAcC,YAA5B,CAAhB,CAA4D,GAAI7C,CAAAA,SAAJ,CAAc,CAAd,CAFrE,CAGL8C,aAAa,CAAElB,IAAI,CAACgB,QAAL,CAAgB,GAAI5C,CAAAA,SAAJ,CAAc4B,IAAI,CAACgB,QAAL,CAAcE,aAA5B,CAAhB,CAA6D,GAAI9C,CAAAA,SAAJ,CAAc,CAAd,CAHvE,CAIL+C,QAAQ,CAAEnB,IAAI,CAACgB,QAAL,CAAgB,GAAI5C,CAAAA,SAAJ,CAAc4B,IAAI,CAACgB,QAAL,CAAcG,QAA5B,CAAhB,CAAwD,GAAI/C,CAAAA,SAAJ,CAAc,CAAd,CAJ7D,CAAP,CAMD,CATM,CAYP;AAEA,MAAO,IAAMgD,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,CAACC,OAAD,CAAqB,CAC3C,iBAAwB5C,UAAU,EAAlC,CAAQ6C,WAAR,cAAQA,WAAR,CACA,GAAMlC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CACAF,SAAS,CAAC,UAAM,CACd,GAAIgD,OAAJ,CAAa,CACXjC,QAAQ,CAACP,uBAAuB,CAACwC,OAAD,CAAxB,CAAR,CACD,CACF,CAJQ,CAIN,CAACA,OAAD,CAAUjC,QAAV,CAAoBkC,WAApB,CAJM,CAAT,CAMA,GAAM3B,CAAAA,KAAK,CAAGnB,WAAW,CAAC,SAACgB,KAAD,QAAkBA,CAAAA,KAAK,CAACG,KAAN,CAAYF,IAA9B,EAAD,CAAzB,CACA,MAAOE,CAAAA,KAAP,CACD,CAXM,CAaP,MAAO,IAAM4B,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,CAACF,OAAD,CAAsB,CAC7C,iBAAwB5C,UAAU,EAAlC,CAAQ6C,WAAR,cAAQA,WAAR,CACA,GAAMlC,CAAAA,QAAQ,CAAGb,WAAW,EAA5B,CACAF,SAAS,CAAC,UAAM,CACd,GAAIgD,OAAJ,CAAa,CACXjC,QAAQ,CAACN,wBAAwB,CAACuC,OAAD,CAAzB,CAAR,CACD,CACF,CAJQ,CAIN,CAACA,OAAD,CAAUjC,QAAV,CAAoBkC,WAApB,CAJM,CAAT,CAMA,GAAMzB,CAAAA,MAAM,CAAGrB,WAAW,CAAC,SAACgB,KAAD,QAAkBA,CAAAA,KAAK,CAACK,MAAN,CAAaJ,IAA/B,EAAD,CAA1B,CACA,MAAOI,CAAAA,MAAP,CACD,CAXM,CAaP,MAAO,IAAM2B,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,CAACC,MAAD,CAAmB,CAChD,GAAMC,CAAAA,KAAK,CAAGlD,WAAW,CAAC,SAACgB,KAAD,QAAkBA,CAAAA,KAAK,CAACK,MAAN,CAAaJ,IAAb,CAAkBQ,IAAlB,CAAuB,SAAC0B,CAAD,QAAOA,CAAAA,CAAC,CAACF,MAAF,GAAaA,MAApB,EAAvB,CAAlB,EAAD,CAAzB,CACA,MAAOC,CAAAA,KAAP,CACD,CAHM,CAKP,MAAO,IAAME,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACH,MAAD,CAAkB,CAC9C,GAAMI,CAAAA,IAAI,CAAGrD,WAAW,CAAC,SAACgB,KAAD,QAAkBA,CAAAA,KAAK,CAACG,KAAN,CAAYF,IAAZ,CAAiBQ,IAAjB,CAAsB,SAAC0B,CAAD,QAAOA,CAAAA,CAAC,CAACF,MAAF,GAAaA,MAApB,EAAtB,CAAlB,EAAD,CAAxB,CACA,MAAOI,CAAAA,IAAP,CACD,CAHM,CAKP;AAEA,MAAO,IAAMC,CAAAA,eAAe,CAAG,QAAlBA,CAAAA,eAAkB,EAAiB,CAC9C,GAAM/B,CAAAA,GAAG,CAAGzB,IAAI,CAACyD,IAAL,CAAUC,UAAtB,CAAiC;AACjC,GAAMhC,CAAAA,IAAI,CAAGF,cAAc,CAACC,GAAD,CAA3B,CACA,MAAOC,CAAAA,IAAI,CAACiC,iBAAL,CAAyB,GAAI7D,CAAAA,SAAJ,CAAc4B,IAAI,CAACiC,iBAAnB,CAAzB,CAAiEjD,IAAxE,CACD,CAJM,CAQP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAGA,MAAO,IAAMkD,CAAAA,gBAAgB,CAAG,QAAnBA,CAAAA,gBAAmB,EAAiB,CAC/C,GAAMnC,CAAAA,GAAG,CAAG,CAAZ,CACA,GAAMC,CAAAA,IAAI,CAAGF,cAAc,CAACC,GAAD,CAA3B,CACA,MAAO,IAAI3B,CAAAA,SAAJ,CAAc4B,IAAI,CAACiC,iBAAnB,CAAP,CACD,CAJM,CAMP,MAAO,IAAMzB,CAAAA,SAAS,CAAG,QAAZA,CAAAA,SAAY,EAAM,CAC7B,GAAM2B,CAAAA,QAAQ,CAAGD,gBAAgB,EAAjC,CACA,GAAME,CAAAA,QAAQ,CAAGN,eAAe,EAAhC,CAGA,MAAO,CACH,CAACO,IAAI,CAAEtD,UAAU,CAACuD,GAAlB,CAAuBC,KAAK,CAAEJ,QAA9B,CADG,CAEH,CAACE,IAAI,CAAEtD,UAAU,CAACyD,IAAlB,CAAwBD,KAAK,CAAEJ,QAA/B,CAFG,CAGH,CAACE,IAAI,CAAEtD,UAAU,CAAC0D,IAAlB,CAAwBF,KAAK,CAAEJ,QAA/B,CAHG,CAIH,CAACE,IAAI,CAAEtD,UAAU,CAAC2D,GAAlB,CAAuBH,KAAK,CAAEH,QAA9B,CAJG,CAAP,CAMD,CAXM,CAaP,MAAO,IAAMO,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,CAACC,SAAD,CAAYrC,MAAZ,CAAuB,CAChD;AACA,GAAMsC,CAAAA,UAAU,CAAGtC,MAAM,CAACN,IAAP,CAAY,SAAAC,CAAC,QAAIA,CAAAA,CAAC,CAACmC,IAAF,GAAWO,SAAf,EAAb,CAAnB,CACA,GAAIC,UAAJ,CAAgB,CACd,MAAOA,CAAAA,UAAU,CAACN,KAAlB,CACD,CACDO,OAAO,CAACC,GAAR,CAAY,QAAZ,CAAsBxC,MAAtB,EACAuC,OAAO,CAACC,GAAR,CAAY,2BAAZ,CAAyCH,SAAzC,EACA,MAAO,IAAIxE,CAAAA,SAAJ,CAAc,CAAd,CAAP,CACD,CATM,CAYP,MAAO,IAAMwC,CAAAA,4BAA4B,CAAG,QAA/BA,CAAAA,4BAA+B,CAACH,gBAAD,CAAmBuC,UAAnB,CAA+BzC,MAA/B,CAA0C,CACpF;AACA;AACA,GAAIyC,UAAU,GAAKjE,UAAU,CAACkE,GAA1B,EAAiCD,UAAU,GAAKjE,UAAU,CAACmE,IAA/D,CAAqE,CACnE,MAAO,IAAI9E,CAAAA,SAAJ,CAAc,CAAd,EAAiBuC,KAAjB,CAAuBF,gBAAvB,CAAP,CACD,CACD,GAAIuC,UAAU,GAAKjE,UAAU,CAACoE,KAA9B,CAAqC,CACnC,MAAO,IAAI/E,CAAAA,SAAJ,CAAc,EAAd,EAAkBuC,KAAlB,CAAwBF,gBAAxB,CAAP,CACD,CACD,GAAIuC,UAAU,GAAKjE,UAAU,CAAC2D,GAA9B,CAAmC,CACjC,GAAMH,CAAAA,KAAK,CAAGI,WAAW,CAAC5D,UAAU,CAAC2D,GAAZ,CAAiBnC,MAAjB,CAAzB,CACA,MAAO,IAAInC,CAAAA,SAAJ,CAAc,CAAd,EAAiBuC,KAAjB,CAAuBF,gBAAvB,EAAyCE,KAAzC,CAA+C4B,KAA/C,CAAP,CACD,CACD,GAAIS,UAAU,GAAKjE,UAAU,CAACyD,IAA9B,CAAoC,CAClC,GAAMD,CAAAA,MAAK,CAAGI,WAAW,CAAC5D,UAAU,CAACyD,IAAZ,CAAkBjC,MAAlB,CAAzB,CACA,MAAO,IAAInC,CAAAA,SAAJ,CAAc,CAAd,EAAiBuC,KAAjB,CAAuBF,gBAAvB,EAAyCE,KAAzC,CAA+C4B,MAA/C,CAAP,CACD,CACDO,OAAO,CAACC,GAAR,CAAY,uCAAZ,CAAqDC,UAArD,EACA,MAAO,IAAI5E,CAAAA,SAAJ,CAAc,CAAd,CAAP,CACD,CAnBM,CAsBP,MAAO,IAAMgF,CAAAA,aAAa,CAAG,QAAhBA,CAAAA,aAAgB,EAAiB,CAC5C,GAAM7D,CAAAA,KAAK,CAAGD,QAAQ,EAAtB,CACA,GAAMiB,CAAAA,MAAM,CAAGC,SAAS,EAAxB,CACA,GAAMb,CAAAA,KAAK,CAAGD,cAAc,EAA5B,CACA,GAAMG,CAAAA,MAAM,CAAGD,eAAe,EAA9B,CAEA,GAAIyD,CAAAA,KAAK,CAAG,GAAIjF,CAAAA,SAAJ,CAAc,CAAd,CAAZ,CACA,IAAK,GAAIkF,CAAAA,CAAC,CAAG,CAAb,CAAgBA,CAAC,CAAG/D,KAAK,CAACgE,MAA1B,CAAkCD,CAAC,EAAnC,CAAuC,CACrC,GAAMtD,CAAAA,IAAI,CAAGT,KAAK,CAAC+D,CAAD,CAAlB,CACA,GAAItD,IAAI,CAACwD,mBAAT,CAA8B,CAC5B,GAAIC,CAAAA,GAAG,CAAG,GAAIrF,CAAAA,SAAJ,CAAc,CAAd,CAAV,CACAqF,GAAG,CAAG7C,4BAA4B,CAACZ,IAAI,CAACS,gBAAN,CAAwBT,IAAI,CAACa,gBAA7B,CAA+CN,MAA/C,CAAlC,CACA;AACA8C,KAAK,CAAGA,KAAK,CAACK,IAAN,CAAWD,GAAX,CAAR,CACD,CACF,CAED;AACA,IAAK,GAAIH,CAAAA,EAAC,CAAG,CAAb,CAAgBA,EAAC,CAAG3D,KAAK,CAAC4D,MAA1B,CAAkCD,EAAC,EAAnC,CAAuC,CACrC,GAAMzB,CAAAA,IAAI,CAAGlC,KAAK,CAAC2D,EAAD,CAAlB,CAEA,GAAMK,CAAAA,WAAW,CAAG,GAAIvF,CAAAA,SAAJ,CAAcyD,IAAI,CAACnB,eAAnB,EAAoCC,KAApC,CAA0CkB,IAAI,CAAC+B,WAA/C,EAA4DC,GAA5D,CAAgE,GAAIzF,CAAAA,SAAJ,CAAc,EAAd,EAAkBc,GAAlB,CAAsB,EAAtB,CAAhE,CAApB,CACA,GAAMuE,CAAAA,IAAG,CAAG7C,4BAA4B,CAAC+C,WAAD,CAAc9B,IAAI,CAAChB,gBAAnB,CAAqCN,MAArC,CAAxC,CAEA,GAAIkD,IAAJ,CAAS,CACP;AACAJ,KAAK,CAAGA,KAAK,CAACK,IAAN,CAAWD,IAAX,CAAR,CACD,CAEF,CAEA;AACD,IAAK,GAAIH,CAAAA,GAAC,CAAG,CAAb,CAAgBA,GAAC,CAAGzD,MAAM,CAAC0D,MAA3B,CAAmCD,GAAC,EAApC,CAAwC,CACtC,GAAM5B,CAAAA,KAAK,CAAG7B,MAAM,CAACyD,GAAD,CAApB,CAEA,GAAMK,CAAAA,YAAW,CAAG,GAAIvF,CAAAA,SAAJ,CAAcsD,KAAK,CAAChB,eAApB,EAAqCC,KAArC,CAA2Ce,KAAK,CAACkC,WAAjD,EAA8DC,GAA9D,CAAkE,GAAIzF,CAAAA,SAAJ,CAAc,EAAd,EAAkBc,GAAlB,CAAsB,EAAtB,CAAlE,CAApB,CACA,GAAMuE,CAAAA,KAAG,CAAG7C,4BAA4B,CAAC+C,YAAW,CAACE,GAAZ,CAAgB,CAAhB,CAAD,CAAqBnC,KAAK,CAACb,gBAA3B,CAA6CN,MAA7C,CAAxC,CAEA,GAAIkD,KAAG,EAAI,CAAC/B,KAAK,CAACoC,UAAlB,CAA8B,CAC5B;AACAT,KAAK,CAAGA,KAAK,CAACK,IAAN,CAAWD,KAAX,CAAR,CACD,CAEF,CAED,MAAOJ,CAAAA,KAAP,CACD,CA9CM","sourcesContent":["import BigNumber from 'bignumber.js'\nimport {useEffect} from 'react'\nimport labo from 'config/constants/labo'\nimport {useDispatch, useSelector} from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPools2PublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchPools2UserDataAsync\n} from './actions'\nimport {Farm, Pool, Pool2, State, State2} from './types'\nimport {QuoteToken} from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\nconst TEN_POW_18 = new BigNumber(10).pow(18)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n    dispatch(fetchPools2PublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const usePoolsPublic = (): Pool[] => {\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolsPublic2 = (): Pool2[] => {\n  const pools2 = useSelector((state: State) => state.pools2.data)\n  return pools2\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\n\nexport const useFarmTokensToUsd = (pid, farmTokens) => {\n  // farmTokens is the # of LP tokens, or just the number of tokens for single staking pools\n  // All price logic should go here for farms\n  const farm = useFarmFromPid(pid)\n  const prices = usePrices()\n  const quoteTokenAmount = new BigNumber(farm.quoteTokenPerLp).times(farmTokens)\n  return getTotalValueFromQuoteTokens(quoteTokenAmount, farm.quoteTokenSymbol, prices)\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePools2 = (account): Pool2[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPools2UserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools2 = useSelector((state: State) => state.pools2.data)\n  return pools2\n}\n\nexport const usePool2FromPid = (sousId): Pool2 => {\n  const pool2 = useSelector((state: State) => state.pools2.data.find((p) => p.sousId === sousId))\n  return pool2\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = labo.pids.pidBnbBusd // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\n\n\n// export const fetchLaboPrice = (): BigNumber => {\n//   const query = `\n//   {ethereum(network: bsc){\n//     address(address: {is: \"0xbf9a298a948079bed1e0902e78c61b1b30f58e7e\"}){\n//     balances {\n//     currency {\n//     symbol\n//     }\n//     value\n//     }}\n//     }}\n// `;\n// const url = \"https://graphql.bitquery.io/\";\n// const opts = {\n//     method: \"POST\",\n//     headers: {\n//         \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({\n//         query\n//     })\n// };\n\n// fetch(url, opts)\n//   .then(response => response.json())\n//   .then(json => {\n//     if (process.env.REACT_APP_DEBUG === \"true\") console.log(json.data.ethereum.address[0].balances);\n//   })\n//   .catch(console.error);\n\n//   return new BigNumber(3);\n// }\n\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 3;\n  const farm = useFarmFromPid(pid);\n  return new BigNumber(farm.tokenPriceVsQuote);\n}\n\nexport const usePrices = () => {\n  const misPrice = usePriceCakeBusd()\n  const onePrice = usePriceBnbBusd()\n\n\n  return [\n      {name: QuoteToken.MIS, price: misPrice},\n      {name: QuoteToken.RVRS, price: misPrice},\n      {name: QuoteToken.CAKE, price: misPrice},\n      {name: QuoteToken.ONE, price: onePrice},\n  ]\n}\n\nexport const lookupPrice = (tokenName, prices) => {\n  // lookup a specific price from usePrices output\n  const tokenPrice = prices.find(f => f.name === tokenName)\n  if (tokenPrice) {\n    return tokenPrice.price\n  }\n  console.log('prices', prices)\n  console.log(\"ERROR: No price found for\", tokenName)\n  return new BigNumber(0)\n}\n\n\nexport const getTotalValueFromQuoteTokens = (quoteTokenAmount, quoteToken, prices) => {\n  // WARNING: Needs to be updated for single-staking pools\n  // First handle all stable-coins\n  if (quoteToken === QuoteToken.UST || quoteToken === QuoteToken.BUSD) {\n    return new BigNumber(2).times(quoteTokenAmount)\n  }\n  if (quoteToken === QuoteToken.JEWEL) {\n    return new BigNumber(28).times(quoteTokenAmount)\n  }\n  if (quoteToken === QuoteToken.ONE) {\n    const price = lookupPrice(QuoteToken.ONE, prices)\n    return new BigNumber(2).times(quoteTokenAmount).times(price)\n  }\n  if (quoteToken === QuoteToken.RVRS) {\n    const price = lookupPrice(QuoteToken.RVRS, prices)\n    return new BigNumber(2).times(quoteTokenAmount).times(price)\n  }\n  console.log(\"ERROR: NO PRICE FOUND FOR QuoteToken:\", quoteToken)\n  return new BigNumber(0)\n}\n\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const prices = usePrices();\n  const pools = usePoolsPublic()\n  const pools2 = usePoolsPublic2()\n\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val = new BigNumber(0);\n      val = getTotalValueFromQuoteTokens(farm.quoteTokenAmount, farm.quoteTokenSymbol, prices)\n      // console.log(\"useTotalValue\", farm.pid, val && val.toNumber(), farm)\n      value = value.plus(val);\n    }\n  }\n  \n  // Do incubator pools\n  for (let i = 0; i < pools.length; i++) {\n    const pool = pools[i]\n\n    const quoteTokens = new BigNumber(pool.quoteTokenPerLp).times(pool.totalStaked).div(new BigNumber(10).pow(18))\n    const val = getTotalValueFromQuoteTokens(quoteTokens, pool.quoteTokenSymbol, prices)\n\n    if (val) {\n      // console.log(\"useTotalValue\", farm.pid, val && val.toNumber(), farm)\n      value = value.plus(val);\n    }\n\n  }\n\n   // Do burn pools\n  for (let i = 0; i < pools2.length; i++) {\n    const pool2 = pools2[i]\n\n    const quoteTokens = new BigNumber(pool2.quoteTokenPerLp).times(pool2.totalStaked).div(new BigNumber(10).pow(18))\n    const val = getTotalValueFromQuoteTokens(quoteTokens.div(2), pool2.quoteTokenSymbol, prices)\n\n    if (val && !pool2.isFinished) {\n      // console.log(\"useTotalValue\", farm.pid, val && val.toNumber(), farm)\n      value = value.plus(val);\n    }\n\n  }\n\n  return value;\n}"]},"metadata":{},"sourceType":"module"}