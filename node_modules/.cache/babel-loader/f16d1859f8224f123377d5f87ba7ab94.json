{"ast":null,"code":"import _toConsumableArray from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _regeneratorRuntime from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import poolsConfig2 from'config/constants/pools2';import sousChefABI from'config/abi/sousChefBurn.json';import cakeABI from'config/abi/cake.json';import wbnbABI from'config/abi/weth.json';import{QuoteToken}from'config/constants/types';import multicall from'utils/multicall';import{getWbnbAddress}from'utils/addressHelpers';import BigNumber from'bignumber.js';var CHAIN_ID=process.env.REACT_APP_CHAIN_ID;export var fetchPoolsBlockLimits=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var poolsWithEnd,callsStartBlock,callsEndBlock,starts,ends;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:poolsWithEnd=poolsConfig2.filter(function(p){return p.isFinished!==false;});callsStartBlock=poolsWithEnd.map(function(pool2Config){return{address:pool2Config.contractAddress[CHAIN_ID],name:'startBlock'};});callsEndBlock=poolsWithEnd.map(function(pool2Config){return{address:pool2Config.contractAddress[CHAIN_ID],name:'endBlock'};});_context.next=5;return multicall(sousChefABI,callsStartBlock);case 5:starts=_context.sent;_context.next=8;return multicall(sousChefABI,callsEndBlock);case 8:ends=_context.sent;return _context.abrupt(\"return\",poolsWithEnd.map(function(cakepoolConfig,index){var startBlock=starts[index];var endBlock=ends[index];return{sousId:cakepoolConfig.sousId,startBlock:new BigNumber(startBlock).toJSON(),endBlock:new BigNumber(endBlock).toJSON()};}));case 10:case\"end\":return _context.stop();}}},_callee);}));return function fetchPoolsBlockLimits(){return _ref.apply(this,arguments);};}();export var fetchPoolsQuoteTokenPerLp=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var nonBnbPools,quoteTokenAmountCalls,tokenAmountCalls,callsTotalSupply,quoteTokenAmounts,tokenAmounts,totalSupplys;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:nonBnbPools=poolsConfig2.filter(function(p){return p.stakingTokenName!==QuoteToken.BNB;});quoteTokenAmountCalls=nonBnbPools.map(function(pool2Config){return{address:pool2Config.quoteTokenPoolAddress,name:'balanceOf',params:[pool2Config.stakingTokenAddress]};});tokenAmountCalls=nonBnbPools.map(function(pool2Config){return{address:pool2Config.tokenPoolAddress,name:'balanceOf',params:[pool2Config.stakingTokenAddress]};});callsTotalSupply=nonBnbPools.map(function(pool2Config){return{address:pool2Config.stakingTokenAddress,name:'totalSupply',params:[]};});_context2.next=6;return multicall(cakeABI,quoteTokenAmountCalls);case 6:quoteTokenAmounts=_context2.sent;_context2.next=9;return multicall(cakeABI,tokenAmountCalls);case 9:tokenAmounts=_context2.sent;_context2.next=12;return multicall(cakeABI,callsTotalSupply);case 12:totalSupplys=_context2.sent;return _context2.abrupt(\"return\",_toConsumableArray(nonBnbPools.map(function(p,index){return{sousId:p.sousId,quoteTokenPerLp:new BigNumber(quoteTokenAmounts[index]).div(totalSupplys[index]).toJSON(),quoteTokenAmount:new BigNumber(quoteTokenAmounts[index]),tokenAmount:new BigNumber(tokenAmounts[index]),tokenPriceVsQuote:new BigNumber(quoteTokenAmounts[index]).div(tokenAmounts[index])};})));case 14:case\"end\":return _context2.stop();}}},_callee2);}));return function fetchPoolsQuoteTokenPerLp(){return _ref2.apply(this,arguments);};}();export var fetchPoolsTotalStatking=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var nonBnbPools,bnbPool,callsNonBnbPools,callsBnbPools,nonBnbPoolsTotalStaked,bnbPoolsTotalStaked;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:nonBnbPools=poolsConfig2.filter(function(p){return p.stakingTokenName!==QuoteToken.BNB;});bnbPool=poolsConfig2.filter(function(p){return p.stakingTokenName===QuoteToken.BNB;});callsNonBnbPools=nonBnbPools.map(function(pool2Config){return{address:pool2Config.contractAddress[CHAIN_ID],name:'stakedBondTokens',params:[]};});callsBnbPools=bnbPool.map(function(pool2Config){return{address:getWbnbAddress(),name:'balanceOf',params:[pool2Config.contractAddress[CHAIN_ID]]};});_context3.next=6;return multicall(sousChefABI,callsNonBnbPools);case 6:nonBnbPoolsTotalStaked=_context3.sent;_context3.next=9;return multicall(wbnbABI,callsBnbPools);case 9:bnbPoolsTotalStaked=_context3.sent;return _context3.abrupt(\"return\",[].concat(_toConsumableArray(nonBnbPools.map(function(p,index){return{sousId:p.sousId,totalStaked:new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON()};})),_toConsumableArray(bnbPool.map(function(p,index){return{sousId:p.sousId,totalStaked:new BigNumber(bnbPoolsTotalStaked[index]).toJSON()};}))));case 11:case\"end\":return _context3.stop();}}},_callee3);}));return function fetchPoolsTotalStatking(){return _ref3.apply(this,arguments);};}();","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/pools2/fetchPools.ts"],"names":["poolsConfig2","sousChefABI","cakeABI","wbnbABI","QuoteToken","multicall","getWbnbAddress","BigNumber","CHAIN_ID","process","env","REACT_APP_CHAIN_ID","fetchPoolsBlockLimits","poolsWithEnd","filter","p","isFinished","callsStartBlock","map","pool2Config","address","contractAddress","name","callsEndBlock","starts","ends","cakepoolConfig","index","startBlock","endBlock","sousId","toJSON","fetchPoolsQuoteTokenPerLp","nonBnbPools","stakingTokenName","BNB","quoteTokenAmountCalls","quoteTokenPoolAddress","params","stakingTokenAddress","tokenAmountCalls","tokenPoolAddress","callsTotalSupply","quoteTokenAmounts","tokenAmounts","totalSupplys","quoteTokenPerLp","div","quoteTokenAmount","tokenAmount","tokenPriceVsQuote","fetchPoolsTotalStatking","bnbPool","callsNonBnbPools","callsBnbPools","nonBnbPoolsTotalStaked","bnbPoolsTotalStaked","totalStaked"],"mappings":"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","sourcesContent":["import poolsConfig2 from 'config/constants/pools2'\nimport sousChefABI from 'config/abi/sousChefBurn.json'\nimport cakeABI from 'config/abi/cake.json'\nimport wbnbABI from 'config/abi/weth.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport { getWbnbAddress } from 'utils/addressHelpers'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\nexport const fetchPoolsBlockLimits = async () => {\n  const poolsWithEnd = poolsConfig2.filter((p) => p.isFinished !== false)\n  const callsStartBlock = poolsWithEnd.map((pool2Config) => {\n    return {\n      address: pool2Config.contractAddress[CHAIN_ID],\n      name: 'startBlock',\n    }\n  })\n  const callsEndBlock = poolsWithEnd.map((pool2Config) => {\n    return {\n      address: pool2Config.contractAddress[CHAIN_ID],\n      name: 'endBlock',\n    }\n  })\n\n  const starts = await multicall(sousChefABI, callsStartBlock)\n  const ends = await multicall(sousChefABI, callsEndBlock)\n\n  return poolsWithEnd.map((cakepoolConfig, index) => {\n    const startBlock = starts[index]\n    const endBlock = ends[index]\n    return {\n      sousId: cakepoolConfig.sousId,\n      startBlock: new BigNumber(startBlock).toJSON(),\n      endBlock: new BigNumber(endBlock).toJSON(),\n    }\n  })\n}\n\nexport const fetchPoolsQuoteTokenPerLp = async () => {\n  const nonBnbPools = poolsConfig2.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n\n  const quoteTokenAmountCalls = nonBnbPools.map((pool2Config) => {\n    return {\n      address: pool2Config.quoteTokenPoolAddress,\n      name: 'balanceOf',\n      params: [pool2Config.stakingTokenAddress],\n    }\n  })\n  const tokenAmountCalls = nonBnbPools.map((pool2Config) => {\n    return {\n      address: pool2Config.tokenPoolAddress,\n      name: 'balanceOf',\n      params: [pool2Config.stakingTokenAddress],\n    }\n  })\n  const callsTotalSupply = nonBnbPools.map((pool2Config) => {\n    return {\n      address: pool2Config.stakingTokenAddress,\n      name: 'totalSupply',\n      params: [],\n    }\n  })\n\n  const quoteTokenAmounts = await multicall(cakeABI, quoteTokenAmountCalls)\n  const tokenAmounts = await multicall(cakeABI, tokenAmountCalls)\n  const totalSupplys = await multicall(cakeABI, callsTotalSupply)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      quoteTokenPerLp: new BigNumber(quoteTokenAmounts[index]).div(totalSupplys[index]).toJSON(),\n      quoteTokenAmount: new BigNumber(quoteTokenAmounts[index]),\n      tokenAmount: new BigNumber(tokenAmounts[index]),\n      tokenPriceVsQuote: new BigNumber(quoteTokenAmounts[index]).div(tokenAmounts[index]),\n    })),\n  ]\n}\n\n\nexport const fetchPoolsTotalStatking = async () => {\n  const nonBnbPools = poolsConfig2.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\n  const bnbPool = poolsConfig2.filter((p) => p.stakingTokenName === QuoteToken.BNB)\n\n  const callsNonBnbPools = nonBnbPools.map((pool2Config) => {\n    return {\n      address: pool2Config.contractAddress[CHAIN_ID],\n      name: 'stakedBondTokens',\n      params: [],\n    }\n  })\n\n  const callsBnbPools = bnbPool.map((pool2Config) => {\n    return {\n      address: getWbnbAddress(),\n      name: 'balanceOf',\n      params: [pool2Config.contractAddress[CHAIN_ID]],\n    }\n  })\n\n  const nonBnbPoolsTotalStaked = await multicall(sousChefABI, callsNonBnbPools)\n  const bnbPoolsTotalStaked = await multicall(wbnbABI, callsBnbPools)\n\n  return [\n    ...nonBnbPools.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(nonBnbPoolsTotalStaked[index]).toJSON(),\n    })),\n    ...bnbPool.map((p, index) => ({\n      sousId: p.sousId,\n      totalStaked: new BigNumber(bnbPoolsTotalStaked[index]).toJSON(),\n    })),\n  ]\n}\n"]},"metadata":{},"sourceType":"module"}