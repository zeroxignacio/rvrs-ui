{"ast":null,"code":"var _jsxFileName = \"/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Farms/components/DepositModal.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Modal } from '@pancakeswap-libs/uikit';\nimport ModalActions from 'components/ModalActions';\nimport TokenInput from 'components/TokenInput';\nimport useI18n from 'hooks/useI18n';\nimport { getFullDisplayBalance } from 'utils/formatBalance';\nimport styled from 'styled-components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst StyledBtn = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #ffff !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 400;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 100px;\n  padding: 25px;\n  `;\n_c = StyledBtn;\nconst StyledBtn2 = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #ffff !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 600;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 100px;\n  padding: 25px;\n\n  text-shadow: 0px 0px 10px #fff;\n  box-shadow: 0px 0px 10px #fff;\n  `;\n_c2 = StyledBtn2;\n\nconst DepositModal = ({\n  max,\n  onConfirm,\n  onDismiss,\n  tokenName = '',\n  depositFeeBP = 0,\n  valueUsd = 0\n}) => {\n  _s();\n\n  const [val, setVal] = useState('');\n  const [pendingTx, setPendingTx] = useState(false);\n  const TranslateString = useI18n();\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max);\n  }, [max]);\n  const handleChange = useCallback(e => {\n    setVal(e.currentTarget.value);\n  }, [setVal]);\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: `${TranslateString(3120, 'Stake')} ${tokenName}`,\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(TokenInput, {\n      value: val,\n      valueUsd: valueUsd,\n      onSelectMax: handleSelectMax,\n      onChange: handleChange,\n      max: fullBalance,\n      symbol: tokenName,\n      depositFeeBP: depositFeeBP\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalActions, {\n      children: [/*#__PURE__*/_jsxDEV(StyledBtn, {\n        style: {\n          justifyContent: \"center\"\n        },\n        onClick: onDismiss,\n        children: TranslateString(462, 'Cancel')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledBtn2, {\n        style: {\n          justifyContent: \"center\"\n        },\n        disabled: pendingTx,\n        onClick: async () => {\n          setPendingTx(true);\n          await onConfirm(val);\n          setPendingTx(false);\n          onDismiss();\n        },\n        children: pendingTx ? TranslateString(4818, 'Pending') : TranslateString(4624, 'Stake')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n\n_s(DepositModal, \"6CJIGJ2Y3KmfnLsU3NCO1RJwS2U=\", false, function () {\n  return [useI18n];\n});\n\n_c3 = DepositModal;\nexport default DepositModal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledBtn\");\n$RefreshReg$(_c2, \"StyledBtn2\");\n$RefreshReg$(_c3, \"DepositModal\");","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Farms/components/DepositModal.tsx"],"names":["React","useCallback","useMemo","useState","Modal","ModalActions","TokenInput","useI18n","getFullDisplayBalance","styled","StyledBtn","button","StyledBtn2","DepositModal","max","onConfirm","onDismiss","tokenName","depositFeeBP","valueUsd","val","setVal","pendingTx","setPendingTx","TranslateString","fullBalance","handleChange","e","currentTarget","value","handleSelectMax","justifyContent"],"mappings":";;;AACA,OAAOA,KAAP,IAAgBC,WAAhB,EAA6BC,OAA7B,EAAsCC,QAAtC,QAAsD,OAAtD;AACA,SAAiBC,KAAjB,QAA8B,yBAA9B;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,UAAP,MAAuB,uBAAvB;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,SAASC,qBAAT,QAAsC,qBAAtC;AACA,OAAOC,MAAP,MAAmB,mBAAnB;;AAGA,MAAMC,SAAS,GAAGD,MAAM,CAACE,MAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAjBA;KAAMD,S;AAmBJ,MAAME,UAAU,GAAGH,MAAM,CAACE,MAAO;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GApBE;MAAMC,U;;AA+BR,MAAMC,YAAyC,GAAG,CAC9C;AAAEC,EAAAA,GAAF;AAAOC,EAAAA,SAAP;AAAkBC,EAAAA,SAAlB;AAA6BC,EAAAA,SAAS,GAAG,EAAzC;AAA8CC,EAAAA,YAAY,GAAG,CAA7D;AAAgEC,EAAAA,QAAQ,GAAE;AAA1E,CAD8C,KACmC;AAAA;;AACnF,QAAM,CAACC,GAAD,EAAMC,MAAN,IAAgBlB,QAAQ,CAAC,EAAD,CAA9B;AACA,QAAM,CAACmB,SAAD,EAAYC,YAAZ,IAA4BpB,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAMqB,eAAe,GAAGjB,OAAO,EAA/B;AACA,QAAMkB,WAAW,GAAGvB,OAAO,CAAC,MAAM;AAChC,WAAOM,qBAAqB,CAACM,GAAD,CAA5B;AACD,GAF0B,EAExB,CAACA,GAAD,CAFwB,CAA3B;AAIA,QAAMY,YAAY,GAAGzB,WAAW,CAC7B0B,CAAD,IAA0C;AACxCN,IAAAA,MAAM,CAACM,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAN;AACD,GAH6B,EAI9B,CAACR,MAAD,CAJ8B,CAAhC;AAOA,QAAMS,eAAe,GAAG7B,WAAW,CAAC,MAAM;AACxCoB,IAAAA,MAAM,CAACI,WAAD,CAAN;AACD,GAFkC,EAEhC,CAACA,WAAD,EAAcJ,MAAd,CAFgC,CAAnC;AAIA,sBAEE,QAAC,KAAD;AACA,IAAA,KAAK,EAAG,GAAEG,eAAe,CAAC,IAAD,EAAO,OAAP,CAAgB,IAAGP,SAAU,EADtD;AAEA,IAAA,SAAS,EAAED,SAFX;AAAA,4BAIE,QAAC,UAAD;AACE,MAAA,KAAK,EAAEI,GADT;AAEE,MAAA,QAAQ,EAAED,QAFZ;AAGE,MAAA,WAAW,EAAEW,eAHf;AAIE,MAAA,QAAQ,EAAEJ,YAJZ;AAKE,MAAA,GAAG,EAAED,WALP;AAME,MAAA,MAAM,EAAER,SANV;AAOE,MAAA,YAAY,EAAEC;AAPhB;AAAA;AAAA;AAAA;AAAA,YAJF,eAcE,QAAC,YAAD;AAAA,8BAEE,QAAC,SAAD;AACE,QAAA,KAAK,EAAE;AAACa,UAAAA,cAAc,EAAC;AAAhB,SADT;AAEE,QAAA,OAAO,EAAEf,SAFX;AAAA,kBAEuBQ,eAAe,CAAC,GAAD,EAAM,QAAN;AAFtC;AAAA;AAAA;AAAA;AAAA,cAFF,eAOE,QAAC,UAAD;AACE,QAAA,KAAK,EAAE;AAACO,UAAAA,cAAc,EAAC;AAAhB,SADT;AAEE,QAAA,QAAQ,EAAET,SAFZ;AAGE,QAAA,OAAO,EAAE,YAAY;AACnBC,UAAAA,YAAY,CAAC,IAAD,CAAZ;AACA,gBAAMR,SAAS,CAACK,GAAD,CAAf;AACAG,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACAP,UAAAA,SAAS;AAAG,SAPhB;AAAA,kBAQKM,SAAS,GAAGE,eAAe,CAAC,IAAD,EAAO,SAAP,CAAlB,GAAsCA,eAAe,CAAC,IAAD,EAAO,OAAP;AARnE;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YAdF;AAAA;AAAA;AAAA;AAAA;AAAA,UAFF;AAsCD,CA1DD;;GAAMX,Y;UAIoBN,O;;;MAJpBM,Y;AA4DN,eAAeA,YAAf","sourcesContent":["import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport TokenInput from 'components/TokenInput'\nimport useI18n from 'hooks/useI18n'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport styled from 'styled-components'\n\n\nconst StyledBtn = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #ffff !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 400;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 100px;\n  padding: 25px;\n  `\n\n  const StyledBtn2 = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #ffff !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 600;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 100px;\n  padding: 25px;\n\n  text-shadow: 0px 0px 10px #fff;\n  box-shadow: 0px 0px 10px #fff;\n  `\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n  valueUsd?: number\n  depositFeeBP?: number\n}\n\nconst DepositModal: React.FC<DepositModalProps> = (\n    { max, onConfirm, onDismiss, tokenName = '' , depositFeeBP = 0, valueUsd= 0}) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n\n    <Modal \n    title={`${TranslateString(3120, 'Stake')} ${tokenName}`} \n    onDismiss={onDismiss}>\n      \n      <TokenInput\n        value={val}\n        valueUsd={valueUsd}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n        depositFeeBP={depositFeeBP}\n      />\n\n      <ModalActions>\n\n        <StyledBtn \n          style={{justifyContent:\"center\" }}\n          onClick={onDismiss}>{TranslateString(462, 'Cancel')}\n        </StyledBtn>\n\n        <StyledBtn2 \n          style={{justifyContent:\"center\" }}\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()}}>\n            {pendingTx ? TranslateString(4818, 'Pending') : TranslateString(4624, 'Stake')}\n          </StyledBtn2>\n\n        </ModalActions>\n\n    </Modal>\n  )\n}\n\nexport default DepositModal\n"]},"metadata":{},"sourceType":"module"}