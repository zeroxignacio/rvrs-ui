{"ast":null,"code":"var _jsxFileName = \"/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Pools/Syrup.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Route, useRouteMatch } from 'react-router-dom';\nimport BigNumber from 'bignumber.js';\nimport styled from 'styled-components';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { BLOCKS_PER_YEAR } from 'config';\nimport orderBy from 'lodash/orderBy';\nimport partition from 'lodash/partition';\nimport useI18n from 'hooks/useI18n';\nimport useBlock from 'hooks/useBlock';\nimport { usePools, usePrices, getTotalValueFromQuoteTokens, lookupPrice, useFarmFromPid } from 'state/hooks';\nimport Page from 'components/layout/Page';\nimport FlexStaking from 'components/layout/FlexStaking';\nimport StakeDashboard from 'views/StakeDashboard';\nimport PoolCard from './components/PoolCard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Title = styled.p`\n  font-size: 1.1em;\n  margin-bottom: 40px;\n  display: flex;\n  flex-flow: row;\n  justify-content: center;\n  color: #2E2E2E;\n\n`;\nconst Feature = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: center;\n  margin: 19px;\n  font-size: 1.1em !important;\n  max-width: 180px;\n  text-align: center;\n\n\n  @media screen and (max-width: 680px){\n    max-width: 64%;\n    flex-flow: row;\n    align-items: flex-start;\n    & > svg{\n      width: 42px;\n    }\n    & > p{\n      text-align: left;\n      margin-left: 15px;\n    }\n  \n`;\nconst ActionsWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 2px;\n  @media all and (max-width: 480px) {\n      flex-flow: column;\n  }\n  \n  \n`;\nconst Blablabla = styled.div`\n  text-color: red;\n  margin: 0px 18px;\n  margin-bottom: 50px;\n`;\nconst GuideLink = styled.span`\n  color: #0073ff;\n`;\nconst Divider = styled.div`\n  background-color: #1E2129;\n  height: 3px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 25px;\n  margin-bottom: 25px;\n  width: 20%;\n`;\nconst SvgHero = styled.div`\n  display: flex;\n  flex-flow: row;\n  flex-wrap: wrap;\n\n  justify-content: center;\n  padding: 42px 12px;\n\n  @media all and (max-width: 1350px) { \n    max-width: 100%;\n  }\n`;\nexport const aprToApy = apr => {\n  const cmpd = 1000;\n  const apy = new BigNumber(apr).div(100).div(365).plus(1).pow(365).minus(1).times(100);\n  return apy.isNaN() || !apy.isFinite() ? null : apy;\n};\nexport const BIG_TEN = new BigNumber(10);\n\nconst Farm = () => {\n  _s();\n\n  const {\n    path\n  } = useRouteMatch();\n  const {\n    account\n  } = useWallet();\n  const farm0 = useFarmFromPid(0);\n  const pools = usePools(account);\n  const prices = usePrices();\n  const block = useBlock();\n  const poolsWithApy = pools.map(pool => {\n    const quoteTokens = pool.totalStaked ? new BigNumber(pool.totalStaked.toString()).div(2).div(BIG_TEN.pow(18)) : new BigNumber(0);\n    const tvl = getTotalValueFromQuoteTokens(quoteTokens, pool.quoteTokenSymbol, prices);\n    const reverseAtlastUserAction = pool.userData ? new BigNumber(pool.userData.reverseAtlastUserAction) : new BigNumber(0);\n    const lastDepositedTime = pool.userData ? new BigNumber(pool.userData.lastDepositedTime) : new BigNumber(0);\n    const lastUserActionTime = pool.userData ? new BigNumber(pool.userData.lastUserActionTime) : new BigNumber(0); // console.log(\"APY\", pool, tvl && tvl.toNumber())\n\n    const rewardTokenPrice = lookupPrice(pool.tokenName, prices); // console.log(\"price\", pool.tokenName, rewardTokenPrice && rewardTokenPrice.toNumber())\n\n    const totalRewardPricePerYear = rewardTokenPrice.times(farm0.vikingPerBlock).div(BIG_TEN.pow(18)).times(farm0.poolWeight).times(BLOCKS_PER_YEAR); // const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n\n    const apr = totalRewardPricePerYear.div(tvl).times(100).times(2);\n    const apy = aprToApy(apr); // console.log(\"TVL\", pool.stakingTokenName, tvl && tvl.toNumber(), apy && apy.toNumber())\n\n    return { ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apr,\n      apy,\n      tvl,\n      lastDepositedTime,\n      lastUserActionTime,\n      reverseAtlastUserAction\n    };\n  });\n  const [finishedPools, openPools] = partition(poolsWithApy, pool => pool.isFinished);\n  const {\n    url,\n    isExact\n  } = useRouteMatch();\n  const TranslateString = useI18n();\n  console.log(poolsWithApy);\n  return /*#__PURE__*/_jsxDEV(Page, {\n    children: [/*#__PURE__*/_jsxDEV(StakeDashboard, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FlexStaking, {\n      children: [/*#__PURE__*/_jsxDEV(Route, {\n        exact: true,\n        path: `${path}`,\n        children: /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: orderBy(openPools, ['sortOrder']).map(pool => /*#__PURE__*/_jsxDEV(PoolCard, {\n            pool: pool\n          }, pool.sousId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }, this))\n        }, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: `${path}/history`,\n        children: orderBy(finishedPools, ['sortOrder']).map(pool => /*#__PURE__*/_jsxDEV(PoolCard, {\n          pool: pool\n        }, pool.sousId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Farm, \"ScSScjUjdQ+7P+6eh1dVDV9S6/0=\", false, function () {\n  return [useRouteMatch, useWallet, useFarmFromPid, usePools, usePrices, useBlock, useRouteMatch, useI18n];\n});\n\n_c = Farm;\nexport default Farm;\n\nvar _c;\n\n$RefreshReg$(_c, \"Farm\");","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Pools/Syrup.tsx"],"names":["React","Route","useRouteMatch","BigNumber","styled","useWallet","BLOCKS_PER_YEAR","orderBy","partition","useI18n","useBlock","usePools","usePrices","getTotalValueFromQuoteTokens","lookupPrice","useFarmFromPid","Page","FlexStaking","StakeDashboard","PoolCard","Title","p","Feature","div","ActionsWrapper","Blablabla","GuideLink","span","Divider","SvgHero","aprToApy","apr","cmpd","apy","plus","pow","minus","times","isNaN","isFinite","BIG_TEN","Farm","path","account","farm0","pools","prices","block","poolsWithApy","map","pool","quoteTokens","totalStaked","toString","tvl","quoteTokenSymbol","reverseAtlastUserAction","userData","lastDepositedTime","lastUserActionTime","rewardTokenPrice","tokenName","totalRewardPricePerYear","vikingPerBlock","poolWeight","isFinished","sousId","endBlock","finishedPools","openPools","url","isExact","TranslateString","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Route, useRouteMatch, Link } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ButtonMenu, ButtonMenuItem, Heading, LinkExternal } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport {\n  useFarms,\n  usePriceBnbBusd,\n  usePools,\n  usePrices,\n  getTotalValueFromQuoteTokens,\n  lookupPrice, useFarmFromPid,\n} from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { FaQuestionCircle , FaUserCheck, FaLock, FaHistory, FaExchangeAlt, FaWater, FaProjectDiagram } from 'react-icons/fa'\nimport FlexStaking from 'components/layout/FlexStaking'\n\nimport StakeDashboard from 'views/StakeDashboard'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\n\nconst Title = styled.p`\n  font-size: 1.1em;\n  margin-bottom: 40px;\n  display: flex;\n  flex-flow: row;\n  justify-content: center;\n  color: #2E2E2E;\n\n`\n\nconst Feature = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: center;\n  margin: 19px;\n  font-size: 1.1em !important;\n  max-width: 180px;\n  text-align: center;\n\n\n  @media screen and (max-width: 680px){\n    max-width: 64%;\n    flex-flow: row;\n    align-items: flex-start;\n    & > svg{\n      width: 42px;\n    }\n    & > p{\n      text-align: left;\n      margin-left: 15px;\n    }\n  \n`\nconst ActionsWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 2px;\n  @media all and (max-width: 480px) {\n      flex-flow: column;\n  }\n  \n  \n`\n\n\nconst Blablabla = styled.div`\n  text-color: red;\n  margin: 0px 18px;\n  margin-bottom: 50px;\n`\nconst GuideLink = styled.span`\n  color: #0073ff;\n`\nconst Divider = styled.div`\n  background-color: #1E2129;\n  height: 3px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 25px;\n  margin-bottom: 25px;\n  width: 20%;\n`\n\nconst SvgHero = styled.div`\n  display: flex;\n  flex-flow: row;\n  flex-wrap: wrap;\n\n  justify-content: center;\n  padding: 42px 12px;\n\n  @media all and (max-width: 1350px) { \n    max-width: 100%;\n  }\n`\n\nexport const aprToApy = (apr: number): BigNumber => {\n  const cmpd = 1000;\n  const apy = new BigNumber(apr).div(100).div(365).plus(1).pow(365).minus(1).times(100);\n\n  return apy.isNaN() || !apy.isFinite() ? null : apy;\n};\n\nexport const BIG_TEN = new BigNumber(10);\n\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { account } = useWallet()\n  const farm0 = useFarmFromPid(0);\n  const pools = usePools(account)\n  const prices = usePrices()\n  const block = useBlock()\n\n  const poolsWithApy = pools.map((pool) => {\n\n    const quoteTokens = pool.totalStaked ?\n        new BigNumber(pool.totalStaked.toString()).div(2).div(BIG_TEN.pow(18)) :\n        new BigNumber(0)\n    const tvl = getTotalValueFromQuoteTokens(quoteTokens, pool.quoteTokenSymbol, prices)\n\n    const reverseAtlastUserAction = pool.userData ?\n        new BigNumber(pool.userData.reverseAtlastUserAction) :\n        new BigNumber(0)\n\n    const lastDepositedTime = pool.userData ?\n        new BigNumber(pool.userData.lastDepositedTime) :\n        new BigNumber(0)\n\n    const lastUserActionTime = pool.userData ?\n        new BigNumber(pool.userData.lastUserActionTime) :\n        new BigNumber(0)\n\n    // console.log(\"APY\", pool, tvl && tvl.toNumber())\n    const rewardTokenPrice = lookupPrice(pool.tokenName, prices)\n    // console.log(\"price\", pool.tokenName, rewardTokenPrice && rewardTokenPrice.toNumber())\n\n    const totalRewardPricePerYear = rewardTokenPrice.times(farm0.vikingPerBlock).div(BIG_TEN.pow(18)).times(farm0.poolWeight).times(BLOCKS_PER_YEAR)\n    // const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apr = totalRewardPricePerYear.div(tvl).times(100).times(2)\n    const apy = aprToApy(apr)\n    // console.log(\"TVL\", pool.stakingTokenName, tvl && tvl.toNumber(), apy && apy.toNumber())\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apr,\n      apy,\n      tvl,\n      lastDepositedTime,\n      lastUserActionTime,\n      reverseAtlastUserAction\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n  console.log(poolsWithApy)\n\n  return (\n    <Page>\n\n      <StakeDashboard/>    \n\n      <FlexStaking>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </> \n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexStaking>\n\n          \n    </Page>\n  )\n}\n\nexport default Farm\n"]},"metadata":{},"sourceType":"module"}