{"ast":null,"code":"import _taggedTemplateLiteral from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";import _objectSpread from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6;import React from'react';import styled,{keyframes}from'styled-components';import{useWallet}from'@binance-chain/bsc-use-wallet';import{usePriceCakeBusd}from'state/hooks';import'bootstrap/dist/css/bootstrap.min.css';import{Container,ButtonGroup}from'react-bootstrap';import{getBalanceNumber}from'utils/formatBalance';import useTokenBalance from'hooks/useTokenBalance';import useWalletModal from'components/WalletModal';import{getCakeAddress}from'utils/addressHelpers';import{NavLink}from'react-router-dom';import rvrs from'config/constants/rvrs';import{Flex}from'../layout/flex';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Nav=function Nav(props){var _useWallet=useWallet(),account=_useWallet.account,connect=_useWallet.connect,reset=_useWallet.reset;var rvrsPriceUsd=usePriceCakeBusd();var rvrsBalance=getBalanceNumber(useTokenBalance(getCakeAddress())).toLocaleString('en-us',{maximumFractionDigits:0});var _useWalletModal=useWalletModal(connect,reset),onPresentConnectModal=_useWalletModal.onPresentConnectModal;return/*#__PURE__*/_jsxs(MenuContainer,{children:[/*#__PURE__*/_jsx(ButtonGroup,{style:{marginRight:\"20px\"},children:/*#__PURE__*/_jsxs(ButtonContainer,{children:[/*#__PURE__*/_jsx(StyledButton,{as:StyledNavLink,to:\"/staking\",isActive:function isActive(match,_ref){var pathname=_ref.pathname;return Boolean(match)||pathname.startsWith('/staking');},children:\"Staking\"}),/*#__PURE__*/_jsx(StyledButton,{as:StyledNavLink,to:\"/bonds\",isActive:function isActive(match,_ref2){var pathname=_ref2.pathname;return Boolean(match)||pathname.startsWith('/bonds');},children:\"\\xA0Bonds\\xA0\"}),/*#__PURE__*/_jsx(StyledButton,{as:StyledNavLink,to:\"/airdrop\",isActive:function isActive(match,_ref3){var pathname=_ref3.pathname;return Boolean(match)||pathname.startsWith('/airdrop');},children:\"Airdrop\"})]})}),/*#__PURE__*/_jsx(ButtonGroup,{children:account!=null&&account.length>1?/*#__PURE__*/_jsx(ConnectButton,{style:{justifyContent:\"space-between\"},as:StyledNavLink,to:\"/dashboard\",isActive:function isActive(match,_ref4){var pathname=_ref4.pathname;return Boolean(match)||pathname.startsWith('/airdrop');},children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(\"object\",{type:\"image/svg+xml\",data:\"/images/hmny.svg\",width:\"50px\",children:\"\\xA0\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginLeft:'10px',marginRight:'20px'},children:[account.substring(0,6),\" \"]})]})}):/*#__PURE__*/_jsx(ConnectButton,_objectSpread(_objectSpread({as:StyledNavLink,to:\"/dashboard\",isActive:function isActive(match,_ref5){var pathname=_ref5.pathname;return Boolean(match)||pathname.startsWith('/dashboard');},disabled:rvrs.isLocked.unlockWalletButton,onClick:onPresentConnectModal},props),{},{children:/*#__PURE__*/_jsxs(Flex,{alignItems:\"center\",children:[/*#__PURE__*/_jsx(\"object\",{type:\"image/svg+xml\",data:\"/images/hmny.svg\",width:\"50px\",children:\"\\xA0\"}),/*#__PURE__*/_jsx(\"div\",{style:{marginLeft:'10px',marginRight:'20px'},children:\"Connect\"})]})}))})]});};var MenuContainer=styled(Container)(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  padding-top: 50px;\\n  text-align: end;\\n  flex-wrap: wrap;\\n  max-width: 730px;\\n\"])));var pulse=keyframes(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  0% {\\n    box-shadow: 0px 0px 5px -5px #5A6F73;\\n  }\\n  50% {\\n    box-shadow: -10px 0px 30px -5px #506970, 0px 0px 40px -5px #464F68\\n  }\\n  100% {\\n    box-shadow: 0px 0px 5px -5px #5A6F73;\\n  }\\n\"])));var StyledButton=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  border: #FFFF solid 0px;\\n  border-radius: 35px;\\n  background-color: #2D3544;\\n  padding-top: 20px;\\n  padding-bottom: 20px;\\n  padding-left: 28px;\\n  padding-right: 28px;\\n  font-size: 18px;\\n  font-weight: 500;\\n  &:hover  {\\n    background-color: #363F50;\\n    transition: 0.5s;\\n  }\\n\"])));var ConnectButton=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  text-align: center;\\n  border: 1.5px;\\n  border-style: solid !important;\\n  border-color: #CBCBCB !important;\\n  border-radius: 35px;\\n  background-color: #2D3544;\\n  padding: 5px;\\n  font-size: 18px;\\n  font-weight: 500;\\n  &:hover  {\\n    background-color: #363F50;\\n    transition: 0.5s;\\n    transform: translate(-5px)\\n  }\\n\"])));var ButtonContainer=styled.div(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  border-radius: 35px;\\n  background-color: #2D3544;\\n  padding-top: 23px;\\n  padding-bottom: 23px;\\n  border: 1.5px;\\n  border-color: #CBCBCB !important;\\n  border-style: solid !important;\\n  animation: \",\" 8s infinite ease-out;\\n\"])),pulse);var activeClassName='ACTIVE';var StyledNavLink=styled(NavLink).attrs({activeClassName:activeClassName})(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  &:focus  {\\n    background-image: linear-gradient(to right, #464F68, #506970);\\n    font-weight: 600;\\n    transform: translate(0px)\\n\\n  }\\n\"])));export default Nav;","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/navigation/nav.tsx"],"names":["React","styled","keyframes","useWallet","usePriceCakeBusd","Container","ButtonGroup","getBalanceNumber","useTokenBalance","useWalletModal","getCakeAddress","NavLink","rvrs","Flex","Nav","props","account","connect","reset","rvrsPriceUsd","rvrsBalance","toLocaleString","maximumFractionDigits","onPresentConnectModal","marginRight","StyledNavLink","match","pathname","Boolean","startsWith","length","justifyContent","marginLeft","substring","isLocked","unlockWalletButton","MenuContainer","pulse","StyledButton","div","ConnectButton","ButtonContainer","activeClassName","attrs"],"mappings":"scAAA,MAAOA,CAAAA,KAAP,KAAgC,OAAhC,CACA,MAAOC,CAAAA,MAAP,EAAiBC,SAAjB,KAAkC,mBAAlC,CACA,OAASC,SAAT,KAA0B,+BAA1B,CACA,OAASC,gBAAT,KAAiC,aAAjC,CACA,MAAO,sCAAP,CACA,OAASC,SAAT,CAAoBC,WAApB,KAA+C,iBAA/C,CACA,OAASC,gBAAT,KAAiC,qBAAjC,CACA,MAAOC,CAAAA,eAAP,KAA4B,uBAA5B,CACA,MAAOC,CAAAA,cAAP,KAA2B,wBAA3B,CACA,OAASC,cAAT,KAA+B,sBAA/B,CACA,OAASC,OAAT,KAAwB,kBAAxB,CACA,MAAOC,CAAAA,IAAP,KAAiB,uBAAjB,CACA,OAASC,IAAT,KAAqB,gBAArB,C,wFAGA,GAAMC,CAAAA,GAAG,CAAG,QAANA,CAAAA,GAAM,CAACC,KAAD,CAAW,gBACeZ,SAAS,EADxB,CACba,OADa,YACbA,OADa,CACJC,OADI,YACJA,OADI,CACKC,KADL,YACKA,KADL,CAErB,GAAMC,CAAAA,YAAY,CAAGf,gBAAgB,EAArC,CACA,GAAMgB,CAAAA,WAAW,CAAGb,gBAAgB,CAACC,eAAe,CAACE,cAAc,EAAf,CAAhB,CAAhB,CAAoDW,cAApD,CAAmE,OAAnE,CAA4E,CAAEC,qBAAqB,CAAE,CAAzB,CAA5E,CAApB,CAHqB,oBAIab,cAAc,CAACQ,OAAD,CAAUC,KAAV,CAJ3B,CAIbK,qBAJa,iBAIbA,qBAJa,CAQrB,mBACE,MAAC,aAAD,yBACE,KAAC,WAAD,EAAa,KAAK,CAAE,CAAEC,WAAW,CAAE,MAAf,CAApB,uBACE,MAAC,eAAD,yBACI,KAAC,YAAD,EACE,EAAE,CAAEC,aADN,CAEE,EAAE,CAAC,UAFL,CAGE,QAAQ,CAAE,kBAACC,KAAD,UAAUC,CAAAA,QAAV,MAAUA,QAAV,OACRC,CAAAA,OAAO,CAACF,KAAD,CAAP,EACAC,QAAQ,CAACE,UAAT,CAAoB,UAApB,CAFQ,EAHZ,qBADJ,cASE,KAAC,YAAD,EACE,EAAE,CAAEJ,aADN,CAEE,EAAE,CAAC,QAFL,CAGE,QAAQ,CAAE,kBAACC,KAAD,WAAUC,CAAAA,QAAV,OAAUA,QAAV,OACRC,CAAAA,OAAO,CAACF,KAAD,CAAP,EACAC,QAAQ,CAACE,UAAT,CAAoB,QAApB,CAFQ,EAHZ,2BATF,cAkBE,KAAC,YAAD,EACE,EAAE,CAAEJ,aADN,CAEE,EAAE,CAAC,UAFL,CAGE,QAAQ,CAAE,kBAACC,KAAD,WAAUC,CAAAA,QAAV,OAAUA,QAAV,OACRC,CAAAA,OAAO,CAACF,KAAD,CAAP,EACAC,QAAQ,CAACE,UAAT,CAAoB,UAApB,CAFQ,EAHZ,qBAlBF,GADF,EADF,cAgCE,KAAC,WAAD,WACGb,OAAO,EAAI,IAAX,EAAmBA,OAAO,CAACc,MAAR,CAAiB,CAApC,cACC,KAAC,aAAD,EACE,KAAK,CAAE,CAAEC,cAAc,CAAE,eAAlB,CADT,CAEE,EAAE,CAAEN,aAFN,CAGE,EAAE,CAAC,YAHL,CAIE,QAAQ,CAAE,kBAACC,KAAD,WAAUC,CAAAA,QAAV,OAAUA,QAAV,OACRC,CAAAA,OAAO,CAACF,KAAD,CAAP,EACAC,QAAQ,CAACE,UAAT,CAAoB,UAApB,CAFQ,EAJZ,uBAQE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,wBACE,eAAQ,IAAI,CAAC,eAAb,CAA6B,IAAI,CAAC,kBAAlC,CAAqD,KAAK,CAAC,MAA3D,kBADF,cAEE,aAAK,KAAK,CAAE,CAAEG,UAAU,CAAE,MAAd,CAAsBR,WAAW,CAAE,MAAnC,CAAZ,WAA0DR,OAAO,CAACiB,SAAR,CAAkB,CAAlB,CAAqB,CAArB,CAA1D,OAFF,GARF,EADD,cAeC,KAAC,aAAD,8BACE,EAAE,CAAER,aADN,CAEE,EAAE,CAAC,YAFL,CAGE,QAAQ,CAAE,kBAACC,KAAD,WAAUC,CAAAA,QAAV,OAAUA,QAAV,OACRC,CAAAA,OAAO,CAACF,KAAD,CAAP,EACAC,QAAQ,CAACE,UAAT,CAAoB,YAApB,CAFQ,EAHZ,CAOE,QAAQ,CAAEjB,IAAI,CAACsB,QAAL,CAAcC,kBAP1B,CAQE,OAAO,CAAEZ,qBARX,EAQsCR,KARtC,4BASE,MAAC,IAAD,EAAM,UAAU,CAAC,QAAjB,wBACE,eAAQ,IAAI,CAAC,eAAb,CAA6B,IAAI,CAAC,kBAAlC,CAAqD,KAAK,CAAC,MAA3D,kBADF,cAEE,YAAK,KAAK,CAAE,CAAEiB,UAAU,CAAE,MAAd,CAAsBR,WAAW,CAAE,MAAnC,CAAZ,qBAFF,GATF,GAhBJ,EAhCF,GADF,CAqED,CA7ED,CA+EA,GAAMY,CAAAA,aAAa,CAAGnC,MAAM,CAACI,SAAD,CAAT,sJAAnB,CAOA,GAAMgC,CAAAA,KAAK,CAAGnC,SAAH,6QAAX,CAYA,GAAMoC,CAAAA,YAAY,CAAGrC,MAAM,CAACsC,GAAV,+XAAlB,CAiBA,GAAMC,CAAAA,aAAa,CAAGvC,MAAM,CAACsC,GAAV,gZAAnB,CAiBA,GAAME,CAAAA,eAAe,CAAGxC,MAAM,CAACsC,GAAV,4SAQNF,KARM,CAArB,CAWA,GAAMK,CAAAA,eAAe,CAAG,QAAxB,CAEA,GAAMjB,CAAAA,aAAa,CAAGxB,MAAM,CAACU,OAAD,CAAN,CAAgBgC,KAAhB,CAAsB,CAAED,eAAe,CAAfA,eAAF,CAAtB,CAAH,oNAAnB,CASA,cAAe5B,CAAAA,GAAf","sourcesContent":["import React, { useState } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container, ButtonGroup, Button } from 'react-bootstrap'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useWalletModal from 'components/WalletModal'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { NavLink } from 'react-router-dom'\nimport rvrs from 'config/constants/rvrs'\nimport { Flex } from '../layout/flex'\n\n\nconst Nav = (props) => {\n  const { account, connect, reset } = useWallet()\n  const rvrsPriceUsd = usePriceCakeBusd()\n  const rvrsBalance = getBalanceNumber(useTokenBalance(getCakeAddress())).toLocaleString('en-us', { maximumFractionDigits: 0 });\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n\n\n  return (\n    <MenuContainer>\n      <ButtonGroup style={{ marginRight: \"20px\" }}>\n        <ButtonContainer>\n            <StyledButton\n              as={StyledNavLink}\n              to=\"/staking\"\n              isActive={(match, { pathname }) =>\n                Boolean(match) ||\n                pathname.startsWith('/staking')\n              }>Staking\n            </StyledButton>\n          <StyledButton\n            as={StyledNavLink}\n            to=\"/bonds\"\n            isActive={(match, { pathname }) =>\n              Boolean(match) ||\n              pathname.startsWith('/bonds')\n            }\n          >&nbsp;Bonds&nbsp;\n          </StyledButton>\n          <StyledButton\n            as={StyledNavLink}\n            to=\"/airdrop\"\n            isActive={(match, { pathname }) =>\n              Boolean(match) ||\n              pathname.startsWith('/airdrop')\n            }>Airdrop\n          </StyledButton>\n        </ButtonContainer>\n      </ButtonGroup>\n\n\n      <ButtonGroup>\n        {account != null && account.length > 1 ?\n          <ConnectButton\n            style={{ justifyContent: \"space-between\" }}\n            as={StyledNavLink}\n            to=\"/dashboard\"\n            isActive={(match, { pathname }) =>\n              Boolean(match) ||\n              pathname.startsWith('/airdrop')\n            }>\n            <Flex alignItems=\"center\">\n              <object type=\"image/svg+xml\" data=\"/images/hmny.svg\" width=\"50px\">&nbsp;</object>\n              <div style={{ marginLeft: '10px', marginRight: '20px' }}>{account.substring(0, 6)} </div>\n            </Flex>\n          </ConnectButton>\n          :\n          <ConnectButton\n            as={StyledNavLink}\n            to=\"/dashboard\"\n            isActive={(match, { pathname }) =>\n              Boolean(match) ||\n              pathname.startsWith('/dashboard')\n            }\n            disabled={rvrs.isLocked.unlockWalletButton}\n            onClick={onPresentConnectModal} {...props}>\n            <Flex alignItems=\"center\">\n              <object type=\"image/svg+xml\" data=\"/images/hmny.svg\" width=\"50px\">&nbsp;</object>\n              <div style={{ marginLeft: '10px', marginRight: '20px' }}>Connect</div>\n            </Flex>\n          </ConnectButton>\n        }\n      </ButtonGroup>\n\n\n    </MenuContainer>\n  )\n}\n\nconst MenuContainer = styled(Container)`\n  padding-top: 50px;\n  text-align: end;\n  flex-wrap: wrap;\n  max-width: 730px;\n`\n\nconst pulse = keyframes`\n  0% {\n    box-shadow: 0px 0px 5px -5px #5A6F73;\n  }\n  50% {\n    box-shadow: -10px 0px 30px -5px #506970, 0px 0px 40px -5px #464F68\n  }\n  100% {\n    box-shadow: 0px 0px 5px -5px #5A6F73;\n  }\n`\n\nconst StyledButton = styled.div`\n  text-align: center;\n  border: #FFFF solid 0px;\n  border-radius: 35px;\n  background-color: #2D3544;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 28px;\n  padding-right: 28px;\n  font-size: 18px;\n  font-weight: 500;\n  &:hover  {\n    background-color: #363F50;\n    transition: 0.5s;\n  }\n`\n\nconst ConnectButton = styled.div`\n  text-align: center;\n  border: 1.5px;\n  border-style: solid !important;\n  border-color: #CBCBCB !important;\n  border-radius: 35px;\n  background-color: #2D3544;\n  padding: 5px;\n  font-size: 18px;\n  font-weight: 500;\n  &:hover  {\n    background-color: #363F50;\n    transition: 0.5s;\n    transform: translate(-5px)\n  }\n`\n\nconst ButtonContainer = styled.div`\n  border-radius: 35px;\n  background-color: #2D3544;\n  padding-top: 23px;\n  padding-bottom: 23px;\n  border: 1.5px;\n  border-color: #CBCBCB !important;\n  border-style: solid !important;\n  animation: ${pulse} 8s infinite ease-out;\n`\n\nconst activeClassName = 'ACTIVE'\n\nconst StyledNavLink = styled(NavLink).attrs({ activeClassName })`\n  &:focus  {\n    background-image: linear-gradient(to right, #464F68, #506970);\n    font-weight: 600;\n    transform: translate(0px)\n\n  }\n`\n\nexport default Nav"]},"metadata":{},"sourceType":"module"}