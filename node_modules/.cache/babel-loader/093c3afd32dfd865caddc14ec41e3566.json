{"ast":null,"code":"var _jsxFileName = \"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/navigation/nav.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled, { keyframes } from 'styled-components';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { usePriceCakeBusd } from 'state/hooks';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Container, ButtonGroup } from 'react-bootstrap';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport useTokenBalance from 'hooks/useTokenBalance';\nimport useWalletModal from 'components/WalletModal';\nimport { getCakeAddress } from 'utils/addressHelpers';\nimport { NavLink } from 'react-router-dom';\nimport rvrs from 'config/constants/rvrs';\nimport { Flex } from '../layout/flex';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Nav = props => {\n  _s();\n\n  const {\n    account,\n    connect,\n    reset\n  } = useWallet();\n  const rvrsPriceUsd = usePriceCakeBusd();\n  const rvrsBalance = getBalanceNumber(useTokenBalance(getCakeAddress())).toLocaleString('en-us', {\n    maximumFractionDigits: 0\n  });\n  const {\n    onPresentConnectModal\n  } = useWalletModal(connect, reset);\n  return /*#__PURE__*/_jsxDEV(MenuContainer, {\n    children: [/*#__PURE__*/_jsxDEV(ButtonGroup, {\n      style: {\n        marginRight: \"20px\"\n      },\n      children: /*#__PURE__*/_jsxDEV(ButtonContainer, {\n        children: [/*#__PURE__*/_jsxDEV(StyledButton, {\n          as: StyledNavLink,\n          to: \"/staking\",\n          isActive: (match, _ref) => {\n            let {\n              pathname\n            } = _ref;\n            return Boolean(match) || pathname.startsWith('/staking');\n          },\n          children: \"Staking\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          as: StyledNavLink,\n          to: \"/bonds\",\n          isActive: (match, _ref2) => {\n            let {\n              pathname\n            } = _ref2;\n            return Boolean(match) || pathname.startsWith('/bonds');\n          },\n          children: \"\\xA0Bonds\\xA0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(StyledButton, {\n          as: StyledNavLink,\n          to: \"/airdrop\",\n          isActive: (match, _ref3) => {\n            let {\n              pathname\n            } = _ref3;\n            return Boolean(match) || pathname.startsWith('/airdrop');\n          },\n          children: \"Airdrop\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ButtonGroup, {\n      children: account != null && account.length > 1 ? /*#__PURE__*/_jsxDEV(ConnectButton, {\n        style: {\n          justifyContent: \"space-between\"\n        },\n        as: StyledNavLink,\n        to: \"/dashboard\",\n        isActive: (match, _ref4) => {\n          let {\n            pathname\n          } = _ref4;\n          return Boolean(match) || pathname.startsWith('/airdrop');\n        },\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"object\", {\n            type: \"image/svg+xml\",\n            data: \"/images/hmny.svg\",\n            width: \"50px\",\n            children: \"\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: '10px',\n              marginRight: '20px'\n            },\n            children: [account.substring(0, 6), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ConnectButton, {\n        as: StyledNavLink,\n        to: \"/dashboard\",\n        isActive: (match, _ref5) => {\n          let {\n            pathname\n          } = _ref5;\n          return Boolean(match) || pathname.startsWith('/dashboard');\n        },\n        disabled: rvrs.isLocked.unlockWalletButton,\n        onClick: onPresentConnectModal,\n        ...props,\n        children: /*#__PURE__*/_jsxDEV(Flex, {\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(\"object\", {\n            type: \"image/svg+xml\",\n            data: \"/images/hmny.svg\",\n            width: \"50px\",\n            children: \"\\xA0\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            style: {\n              marginLeft: '10px',\n              marginRight: '20px'\n            },\n            children: \"Connect\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Nav, \"y3Q+Z+p4TQhPw/qK3mVr9U7elug=\", false, function () {\n  return [useWallet, usePriceCakeBusd, useTokenBalance, useWalletModal];\n});\n\n_c = Nav;\nconst MenuContainer = styled(Container)`\n  padding-top: 50px;\n  text-align: end;\n  flex-wrap: wrap;\n  max-width: 730px;\n`;\n_c2 = MenuContainer;\nconst pulse = keyframes`\n  0% {\n    box-shadow: 0px 0px 5px -5px #5A6F73;\n  }\n  50% {\n    box-shadow: -10px 0px 30px -5px #506970, 0px 0px 40px -5px #464F68\n  }\n  100% {\n    box-shadow: 0px 0px 5px -5px #5A6F73;\n  }\n`;\nconst StyledButton = styled.div`\n  text-align: center;\n  border: #FFFF solid 0px;\n  border-radius: 35px;\n  background-color: #2D3544;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 28px;\n  padding-right: 28px;\n  font-size: 18px;\n  font-weight: 500;\n  &:hover  {\n    background-color: #363F50;\n    transition: 0.5s;\n  }\n`;\n_c3 = StyledButton;\nconst ConnectButton = styled.div`\n  text-align: center;\n  border: 1.5px;\n  border-style: solid !important;\n  border-color: #CBCBCB !important;\n  border-radius: 35px;\n  background-color: #2D3544;\n  padding: 5px;\n  font-size: 18px;\n  font-weight: 500;\n  &:hover  {\n    background-color: #363F50;\n    transition: 0.5s;\n    transform: translate(-5px)\n  }\n`;\n_c4 = ConnectButton;\nconst ButtonContainer = styled.div`\n  border-radius: 35px;\n  background-color: #2D3544;\n  padding-top: 23px;\n  padding-bottom: 23px;\n  border: 1.5px;\n  border-color: #CBCBCB !important;\n  border-style: solid !important;\n  animation: ${pulse} 8s infinite ease-out;\n`;\n_c5 = ButtonContainer;\nconst activeClassName = 'ACTIVE';\nconst StyledNavLink = styled(NavLink).attrs({\n  activeClassName\n})`\n  &:focus  {\n    background-image: linear-gradient(to right, #464F68, #506970);\n    font-weight: 600;\n    transform: translate(0px)\n\n  }\n`;\nexport default Nav;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"Nav\");\n$RefreshReg$(_c2, \"MenuContainer\");\n$RefreshReg$(_c3, \"StyledButton\");\n$RefreshReg$(_c4, \"ConnectButton\");\n$RefreshReg$(_c5, \"ButtonContainer\");","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/navigation/nav.tsx"],"names":["React","styled","keyframes","useWallet","usePriceCakeBusd","Container","ButtonGroup","getBalanceNumber","useTokenBalance","useWalletModal","getCakeAddress","NavLink","rvrs","Flex","Nav","props","account","connect","reset","rvrsPriceUsd","rvrsBalance","toLocaleString","maximumFractionDigits","onPresentConnectModal","marginRight","StyledNavLink","match","pathname","Boolean","startsWith","length","justifyContent","marginLeft","substring","isLocked","unlockWalletButton","MenuContainer","pulse","StyledButton","div","ConnectButton","ButtonContainer","activeClassName","attrs"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container, ButtonGroup, Button } from 'react-bootstrap'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useWalletModal from 'components/WalletModal'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { NavLink } from 'react-router-dom'\nimport rvrs from 'config/constants/rvrs'\nimport { Flex } from '../layout/flex'\n\n\nconst Nav = (props) => {\n  const { account, connect, reset } = useWallet()\n  const rvrsPriceUsd = usePriceCakeBusd()\n  const rvrsBalance = getBalanceNumber(useTokenBalance(getCakeAddress())).toLocaleString('en-us', { maximumFractionDigits: 0 });\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n\n\n  return (\n    <MenuContainer>\n      <ButtonGroup style={{ marginRight: \"20px\" }}>\n        <ButtonContainer>\n            <StyledButton\n              as={StyledNavLink}\n              to=\"/staking\"\n              isActive={(match, { pathname }) =>\n                Boolean(match) ||\n                pathname.startsWith('/staking')\n              }>Staking\n            </StyledButton>\n          <StyledButton\n            as={StyledNavLink}\n            to=\"/bonds\"\n            isActive={(match, { pathname }) =>\n              Boolean(match) ||\n              pathname.startsWith('/bonds')\n            }\n          >&nbsp;Bonds&nbsp;\n          </StyledButton>\n          <StyledButton\n            as={StyledNavLink}\n            to=\"/airdrop\"\n            isActive={(match, { pathname }) =>\n              Boolean(match) ||\n              pathname.startsWith('/airdrop')\n            }>Airdrop\n          </StyledButton>\n        </ButtonContainer>\n      </ButtonGroup>\n\n\n      <ButtonGroup>\n        {account != null && account.length > 1 ?\n          <ConnectButton\n            style={{ justifyContent: \"space-between\" }}\n            as={StyledNavLink}\n            to=\"/dashboard\"\n            isActive={(match, { pathname }) =>\n              Boolean(match) ||\n              pathname.startsWith('/airdrop')\n            }>\n            <Flex alignItems=\"center\">\n              <object type=\"image/svg+xml\" data=\"/images/hmny.svg\" width=\"50px\">&nbsp;</object>\n              <div style={{ marginLeft: '10px', marginRight: '20px' }}>{account.substring(0, 6)} </div>\n            </Flex>\n          </ConnectButton>\n          :\n          <ConnectButton\n            as={StyledNavLink}\n            to=\"/dashboard\"\n            isActive={(match, { pathname }) =>\n              Boolean(match) ||\n              pathname.startsWith('/dashboard')\n            }\n            disabled={rvrs.isLocked.unlockWalletButton}\n            onClick={onPresentConnectModal} {...props}>\n            <Flex alignItems=\"center\">\n              <object type=\"image/svg+xml\" data=\"/images/hmny.svg\" width=\"50px\">&nbsp;</object>\n              <div style={{ marginLeft: '10px', marginRight: '20px' }}>Connect</div>\n            </Flex>\n          </ConnectButton>\n        }\n      </ButtonGroup>\n\n\n    </MenuContainer>\n  )\n}\n\nconst MenuContainer = styled(Container)`\n  padding-top: 50px;\n  text-align: end;\n  flex-wrap: wrap;\n  max-width: 730px;\n`\n\nconst pulse = keyframes`\n  0% {\n    box-shadow: 0px 0px 5px -5px #5A6F73;\n  }\n  50% {\n    box-shadow: -10px 0px 30px -5px #506970, 0px 0px 40px -5px #464F68\n  }\n  100% {\n    box-shadow: 0px 0px 5px -5px #5A6F73;\n  }\n`\n\nconst StyledButton = styled.div`\n  text-align: center;\n  border: #FFFF solid 0px;\n  border-radius: 35px;\n  background-color: #2D3544;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 28px;\n  padding-right: 28px;\n  font-size: 18px;\n  font-weight: 500;\n  &:hover  {\n    background-color: #363F50;\n    transition: 0.5s;\n  }\n`\n\nconst ConnectButton = styled.div`\n  text-align: center;\n  border: 1.5px;\n  border-style: solid !important;\n  border-color: #CBCBCB !important;\n  border-radius: 35px;\n  background-color: #2D3544;\n  padding: 5px;\n  font-size: 18px;\n  font-weight: 500;\n  &:hover  {\n    background-color: #363F50;\n    transition: 0.5s;\n    transform: translate(-5px)\n  }\n`\n\nconst ButtonContainer = styled.div`\n  border-radius: 35px;\n  background-color: #2D3544;\n  padding-top: 23px;\n  padding-bottom: 23px;\n  border: 1.5px;\n  border-color: #CBCBCB !important;\n  border-style: solid !important;\n  animation: ${pulse} 8s infinite ease-out;\n`\n\nconst activeClassName = 'ACTIVE'\n\nconst StyledNavLink = styled(NavLink).attrs({ activeClassName })`\n  &:focus  {\n    background-image: linear-gradient(to right, #464F68, #506970);\n    font-weight: 600;\n    transform: translate(0px)\n\n  }\n`\n\nexport default Nav"]},"metadata":{},"sourceType":"module"}