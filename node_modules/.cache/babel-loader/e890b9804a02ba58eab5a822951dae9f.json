{"ast":null,"code":"export var QuoteToken;(function(QuoteToken){QuoteToken[\"BNB\"]=\"BNB\";QuoteToken[\"CAKE\"]=\"CAKE\";QuoteToken[\"SYRUP\"]=\"SYRUP\";QuoteToken[\"BUSD\"]=\"BUSD\";QuoteToken[\"TWT\"]=\"TWT\";QuoteToken[\"UST\"]=\"UST\";QuoteToken[\"GYA\"]=\"GYA\";QuoteToken[\"DSL\"]=\"DSL\";QuoteToken[\"WONE\"]=\"WONE\";QuoteToken[\"MIS\"]=\"MIS\";QuoteToken[\"ONEETH\"]=\"ONEETH\";QuoteToken[\"ONE\"]=\"ONE\";QuoteToken[\"MISONE\"]=\"MIS-ONE\";QuoteToken[\"MISTRANQ\"]=\"MIS-TRANQ\";QuoteToken[\"MISXYA\"]=\"MIS-XYA\";QuoteToken[\"TRANQ\"]=\"TRANQ\";QuoteToken[\"XYA\"]=\"XYA\";QuoteToken[\"COSMIC\"]=\"COSMIC\";QuoteToken[\"MISMAGIC\"]=\"MIS-MAGIC\";QuoteToken[\"MAGIC\"]=\"MAGIC\";QuoteToken[\"MISLBLOX\"]=\"MIS-LBLOX\";QuoteToken[\"LBLOX\"]=\"LBLOX\";QuoteToken[\"MISCOINK\"]=\"MIS-COINK\";QuoteToken[\"TROLL\"]=\"TROLL\";QuoteToken[\"MISTROLL\"]=\"MIS-TROLL\";QuoteToken[\"MISLUNA\"]=\"MIS-LUNA\";QuoteToken[\"LUNA\"]=\"LUNA\";QuoteToken[\"TRANQB\"]=\"TRANQB\";QuoteToken[\"JEWEL\"]=\"JEWEL\";QuoteToken[\"MISKURO\"]=\"MIS-KURO\";QuoteToken[\"KURO\"]=\"KURO\";QuoteToken[\"SONIC\"]=\"SONIC\";QuoteToken[\"MISSONIC\"]=\"MIS-SONIC\";QuoteToken[\"RVRS\"]=\"RVRS\";QuoteToken[\"ONERVRS\"]=\"ONE-RVRS\";QuoteToken[\"USTRVRS\"]=\"UST-RVRS\";QuoteToken[\"ETHRVRS\"]=\"ETH-RVRS\";QuoteToken[\"USDCRVRS\"]=\"USDC-RVRS\";})(QuoteToken||(QuoteToken={}));export var PoolCategory;(function(PoolCategory){PoolCategory[\"COMMUNITY\"]=\"Community\";PoolCategory[\"CORE\"]=\"Core\";PoolCategory[\"BINANCE\"]=\"Binance\";})(PoolCategory||(PoolCategory={}));export var Pool2Category;(function(Pool2Category){Pool2Category[\"COMMUNITY\"]=\"Community\";Pool2Category[\"CORE\"]=\"Core\";Pool2Category[\"BINANCE\"]=\"Binance\";})(Pool2Category||(Pool2Category={}));","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/types.ts"],"names":["QuoteToken","PoolCategory","Pool2Category"],"mappings":"AA0CA,UAAYA,CAAAA,UAAZ,C,UAAYA,U,EAAAA,U,cAAAA,U,gBAAAA,U,kBAAAA,U,gBAAAA,U,cAAAA,U,cAAAA,U,cAAAA,U,cAAAA,U,gBAAAA,U,cAAAA,U,oBAAAA,U,cAAAA,U,qBAAAA,U,yBAAAA,U,qBAAAA,U,kBAAAA,U,cAAAA,U,oBAAAA,U,yBAAAA,U,kBAAAA,U,yBAAAA,U,kBAAAA,U,yBAAAA,U,kBAAAA,U,yBAAAA,U,uBAAAA,U,gBAAAA,U,oBAAAA,U,kBAAAA,U,uBAAAA,U,gBAAAA,U,kBAAAA,U,yBAAAA,U,gBAAAA,U,uBAAAA,U,uBAAAA,U,uBAAAA,U,4BAAAA,U,GAAAA,U,MAyCZ,UAAYC,CAAAA,YAAZ,C,UAAYA,Y,EAAAA,Y,0BAAAA,Y,gBAAAA,Y,yBAAAA,Y,GAAAA,Y,MAMZ,UAAYC,CAAAA,aAAZ,C,UAAYA,a,EAAAA,a,0BAAAA,a,gBAAAA,a,yBAAAA,a,GAAAA,a","sourcesContent":["export type IfoStatus = 'coming_soon' | 'live' | 'finished'\n\nexport interface Ifo {\n  id: string\n  isActive?: boolean\n  address: string\n  name: string\n  subTitle?: string\n  description?: string\n  launchDate: string\n  launchTime: string\n  endDate?: string\n  endTime?: string\n  saleAmount: string\n  raiseAmount: string\n  cakeToBurn: string\n  projectSiteUrl: string\n  currency: string\n  currencyAddress: string\n  tokenDecimals: number\n  releaseBlockNumber: number\n  isActive2?: boolean\n}\n\nexport interface MoneyWheelBet {\n  val1: string\n  val3: string\n  val5: string\n  val10: string\n  val20: string\n  val50: string\n}\n\nexport interface MoneyWheel2Bet {\n  val1: string\n  val3: string\n  val5: string\n  val10: string\n  val20: string\n  val50: string\n}\n\nexport enum QuoteToken {\n  'BNB' = 'BNB',\n  'CAKE' = 'CAKE',\n  'SYRUP' = 'SYRUP',\n  'BUSD' = 'BUSD',\n  'TWT' = 'TWT',\n  'UST' = 'UST',\n  'GYA' = 'GYA',\n  'DSL' = 'DSL',\n  'WONE' = 'WONE',\n  'MIS' = 'MIS',\n  'ONEETH' = 'ONEETH',\n  'ONE' = 'ONE',\n  'MISONE' = 'MIS-ONE',\n  'MISTRANQ' = 'MIS-TRANQ',\n  'MISXYA' = 'MIS-XYA',\n  'TRANQ' = 'TRANQ',\n  'XYA' = 'XYA',\n  'COSMIC' = 'COSMIC',\n  'MISMAGIC' = 'MIS-MAGIC',\n  'MAGIC' = 'MAGIC',\n  'MISLBLOX' = 'MIS-LBLOX',\n  'LBLOX' = 'LBLOX',\n  'MISCOINK' = 'MIS-COINK',\n  'TROLL' = 'TROLL',\n  'MISTROLL' = 'MIS-TROLL',\n  'MISLUNA' = 'MIS-LUNA',\n  'LUNA' = 'LUNA',\n  'TRANQB' = 'TRANQB',\n  'JEWEL' = 'JEWEL',\n  'MISKURO' = 'MIS-KURO',\n  'KURO' = 'KURO',\n  'SONIC' = 'SONIC',\n  'MISSONIC' = 'MIS-SONIC',\n  'RVRS' = 'RVRS',\n  'ONERVRS' = 'ONE-RVRS',\n  'USTRVRS' = 'UST-RVRS',\n  'ETHRVRS' = 'ETH-RVRS',\n  'USDCRVRS' = 'USDC-RVRS'\n}\n\nexport enum PoolCategory {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport enum Pool2Category {\n  'COMMUNITY' = 'Community',\n  'CORE' = 'Core',\n  'BINANCE' = 'Binance', // Pools using native BNB behave differently than pools using a token\n}\n\nexport interface Address {\n  1666700000?: string\n  1666600000: string\n}\n\nexport interface FarmConfig {\n  pid: number\n  lpSymbol: string\n  lpAddresses: Address\n  tokenSymbol: string\n  tokenAddresses: Address\n  quoteTokenSymbol: QuoteToken\n  quoteTokenAdresses: Address\n  multiplier?: string\n  isTokenOnly?: boolean\n  isCommunity?: boolean\n  version?: number\n  risk: number\n  dual?: {\n    rewardPerBlock: number\n    earnLabel: string\n    endBlock: number\n  }\n}\n\nexport interface CoinPriceConfig {\n  value?: number\n}\n\nexport interface PoolConfig {\n  sousId?: number\n  image?: string\n  tokenName: string\n  quoteTokenSymbol: QuoteToken\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  tokenPoolAddress?: string\n  quoteTokenPoolAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  startBlock?: number\n  endBlock?: number\n  sortOrder?: number\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n  earnToken?: string\n}\n\nexport interface Pool2Config {\n  sousId?: number\n  image?: string\n  tokenName: string\n  quoteTokenSymbol: QuoteToken\n  stakingTokenName: QuoteToken\n  stakingLimit?: number\n  stakingTokenAddress?: string\n  tokenPoolAddress?: string\n  quoteTokenPoolAddress?: string\n  contractAddress: Address\n  poolCategory: PoolCategory\n  projectLink: string\n  tokenPerBlock: string\n  startBlock?: number\n  endBlock?: number\n  sortOrder?: number\n  isSingleAsset?: boolean\n  harvest?: boolean\n  isFinished?: boolean\n  tokenDecimals: number\n  isDepositFinished?: boolean\n  lockBlock: number\n  notFinished: boolean\n}\n\nexport type Images = {\n  lg: string\n  md: string\n  sm: string\n  ipfs?: string\n}\n\nexport type NftImages = {\n  blur?: string\n} & Images\n\nexport type NftVideo = {\n  webm: string\n  mp4: string\n}\n\nexport type Nft = {\n  name: string\n  description: string\n  images: NftImages\n  sortOrder: number\n  bunnyId: number\n  video?: NftVideo\n}\n"]},"metadata":{},"sourceType":"module"}