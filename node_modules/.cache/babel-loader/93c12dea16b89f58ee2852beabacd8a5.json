{"ast":null,"code":"import _slicedToArray from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _objectSpread from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _taggedTemplateLiteral from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject,_templateObject2,_templateObject3,_templateObject4,_templateObject5,_templateObject6,_templateObject7;import React from'react';import{Route,useRouteMatch}from'react-router-dom';import BigNumber from'bignumber.js';import styled from'styled-components';import{useWallet}from'@binance-chain/bsc-use-wallet';import{BLOCKS_PER_YEAR}from'config';import orderBy from'lodash/orderBy';import partition from'lodash/partition';import useI18n from'hooks/useI18n';import useBlock from'hooks/useBlock';import{usePools,usePrices,getTotalValueFromQuoteTokens,lookupPrice,useFarmFromPid}from'state/hooks';import Page from'components/layout/Page';import FlexStaking from'components/layout/FlexStaking';import StakeDashboard from'views/StakeDashboard';import PoolCard from'./components/PoolCard';import{jsx as _jsx}from\"react/jsx-runtime\";import{Fragment as _Fragment}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Title=styled.p(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  font-size: 1.1em;\\n  margin-bottom: 40px;\\n  display: flex;\\n  flex-flow: row;\\n  justify-content: center;\\n  color: #2E2E2E;\\n\\n\"])));var Feature=styled.div(_templateObject2||(_templateObject2=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-flow: column;\\n  align-items: center;\\n  justify-content: center;\\n  margin: 19px;\\n  font-size: 1.1em !important;\\n  max-width: 180px;\\n  text-align: center;\\n\\n\\n  @media screen and (max-width: 680px){\\n    max-width: 64%;\\n    flex-flow: row;\\n    align-items: flex-start;\\n    & > svg{\\n      width: 42px;\\n    }\\n    & > p{\\n      text-align: left;\\n      margin-left: 15px;\\n    }\\n  \\n\"])));var ActionsWrapper=styled.div(_templateObject3||(_templateObject3=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  margin-bottom: 2px;\\n  @media all and (max-width: 480px) {\\n      flex-flow: column;\\n  }\\n  \\n  \\n\"])));var Blablabla=styled.div(_templateObject4||(_templateObject4=_taggedTemplateLiteral([\"\\n  text-color: red;\\n  margin: 0px 18px;\\n  margin-bottom: 50px;\\n\"])));var GuideLink=styled.span(_templateObject5||(_templateObject5=_taggedTemplateLiteral([\"\\n  color: #0073ff;\\n\"])));var Divider=styled.div(_templateObject6||(_templateObject6=_taggedTemplateLiteral([\"\\n  background-color: #1E2129;\\n  height: 3px;\\n  margin-left: auto;\\n  margin-right: auto;\\n  margin-top: 25px;\\n  margin-bottom: 25px;\\n  width: 20%;\\n\"])));var SvgHero=styled.div(_templateObject7||(_templateObject7=_taggedTemplateLiteral([\"\\n  display: flex;\\n  flex-flow: row;\\n  flex-wrap: wrap;\\n\\n  justify-content: center;\\n  padding: 42px 12px;\\n\\n  @media all and (max-width: 1350px) { \\n    max-width: 100%;\\n  }\\n\"])));export var aprToApy=function aprToApy(apr){var cmpd=1000;var apy=new BigNumber(apr).div(100).div(365).plus(1).pow(365).minus(1).times(100);return apy.isNaN()||!apy.isFinite()?null:apy;};export var BIG_TEN=new BigNumber(10);var Farm=function Farm(){var _useRouteMatch=useRouteMatch(),path=_useRouteMatch.path;var _useWallet=useWallet(),account=_useWallet.account;var farm0=useFarmFromPid(0);var pools=usePools(account);var prices=usePrices();var block=useBlock();var poolsWithApy=pools.map(function(pool){var quoteTokens=pool.totalStaked?new BigNumber(pool.totalStaked.toString()).div(2).div(BIG_TEN.pow(18)):new BigNumber(0);var tvl=getTotalValueFromQuoteTokens(quoteTokens,pool.quoteTokenSymbol,prices);var reverseAtlastUserAction=pool.userData?new BigNumber(pool.userData.reverseAtlastUserAction):new BigNumber(0);var lastDepositedTime=pool.userData?new BigNumber(pool.userData.lastDepositedTime):new BigNumber(0);var lastUserActionTime=pool.userData?new BigNumber(pool.userData.lastUserActionTime):new BigNumber(0);// console.log(\"APY\", pool, tvl && tvl.toNumber())\nvar rewardTokenPrice=lookupPrice(pool.tokenName,prices);// console.log(\"price\", pool.tokenName, rewardTokenPrice && rewardTokenPrice.toNumber())\nvar totalRewardPricePerYear=rewardTokenPrice.times(farm0.vikingPerBlock).div(BIG_TEN.pow(18)).times(farm0.poolWeight).times(BLOCKS_PER_YEAR);// const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\nvar apr=totalRewardPricePerYear.div(tvl).times(100).times(2);var apy=aprToApy(apr);// console.log(\"TVL\", pool.stakingTokenName, tvl && tvl.toNumber(), apy && apy.toNumber())\nreturn _objectSpread(_objectSpread({},pool),{},{isFinished:pool.sousId===0?false:pool.isFinished||block>pool.endBlock,apr:apr,apy:apy,tvl:tvl,lastDepositedTime:lastDepositedTime,lastUserActionTime:lastUserActionTime,reverseAtlastUserAction:reverseAtlastUserAction});});var _partition=partition(poolsWithApy,function(pool){return pool.isFinished;}),_partition2=_slicedToArray(_partition,2),finishedPools=_partition2[0],openPools=_partition2[1];var _useRouteMatch2=useRouteMatch(),url=_useRouteMatch2.url,isExact=_useRouteMatch2.isExact;var TranslateString=useI18n();console.log(poolsWithApy);return/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsx(StakeDashboard,{}),/*#__PURE__*/_jsxs(FlexStaking,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path),children:/*#__PURE__*/_jsx(_Fragment,{children:orderBy(openPools,['sortOrder']).map(function(pool){return/*#__PURE__*/_jsx(PoolCard,{pool:pool},pool.sousId);})})}),/*#__PURE__*/_jsx(Route,{path:\"\".concat(path,\"/history\"),children:orderBy(finishedPools,['sortOrder']).map(function(pool){return/*#__PURE__*/_jsx(PoolCard,{pool:pool},pool.sousId);})})]})]});};export default Farm;","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Pools/Syrup.tsx"],"names":["React","Route","useRouteMatch","BigNumber","styled","useWallet","BLOCKS_PER_YEAR","orderBy","partition","useI18n","useBlock","usePools","usePrices","getTotalValueFromQuoteTokens","lookupPrice","useFarmFromPid","Page","FlexStaking","StakeDashboard","PoolCard","Title","p","Feature","div","ActionsWrapper","Blablabla","GuideLink","span","Divider","SvgHero","aprToApy","apr","cmpd","apy","plus","pow","minus","times","isNaN","isFinite","BIG_TEN","Farm","path","account","farm0","pools","prices","block","poolsWithApy","map","pool","quoteTokens","totalStaked","toString","tvl","quoteTokenSymbol","reverseAtlastUserAction","userData","lastDepositedTime","lastUserActionTime","rewardTokenPrice","tokenName","totalRewardPricePerYear","vikingPerBlock","poolWeight","isFinished","sousId","endBlock","finishedPools","openPools","url","isExact","TranslateString","console","log"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { Route, useRouteMatch, Link } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ButtonMenu, ButtonMenuItem, Heading, LinkExternal } from '@pancakeswap-libs/uikit'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useI18n from 'hooks/useI18n'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport {\n  useFarms,\n  usePriceBnbBusd,\n  usePools,\n  usePrices,\n  getTotalValueFromQuoteTokens,\n  lookupPrice, useFarmFromPid,\n} from 'state/hooks'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport FlexLayout from 'components/layout/Flex'\nimport Page from 'components/layout/Page'\nimport { FaQuestionCircle , FaUserCheck, FaLock, FaHistory, FaExchangeAlt, FaWater, FaProjectDiagram } from 'react-icons/fa'\nimport FlexStaking from 'components/layout/FlexStaking'\n\nimport StakeDashboard from 'views/StakeDashboard'\nimport Coming from './components/Coming'\nimport PoolCard from './components/PoolCard'\n\nconst Title = styled.p`\n  font-size: 1.1em;\n  margin-bottom: 40px;\n  display: flex;\n  flex-flow: row;\n  justify-content: center;\n  color: #2E2E2E;\n\n`\n\nconst Feature = styled.div`\n  display: flex;\n  flex-flow: column;\n  align-items: center;\n  justify-content: center;\n  margin: 19px;\n  font-size: 1.1em !important;\n  max-width: 180px;\n  text-align: center;\n\n\n  @media screen and (max-width: 680px){\n    max-width: 64%;\n    flex-flow: row;\n    align-items: flex-start;\n    & > svg{\n      width: 42px;\n    }\n    & > p{\n      text-align: left;\n      margin-left: 15px;\n    }\n  \n`\nconst ActionsWrapper = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin-bottom: 2px;\n  @media all and (max-width: 480px) {\n      flex-flow: column;\n  }\n  \n  \n`\n\n\nconst Blablabla = styled.div`\n  text-color: red;\n  margin: 0px 18px;\n  margin-bottom: 50px;\n`\nconst GuideLink = styled.span`\n  color: #0073ff;\n`\nconst Divider = styled.div`\n  background-color: #1E2129;\n  height: 3px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 25px;\n  margin-bottom: 25px;\n  width: 20%;\n`\n\nconst SvgHero = styled.div`\n  display: flex;\n  flex-flow: row;\n  flex-wrap: wrap;\n\n  justify-content: center;\n  padding: 42px 12px;\n\n  @media all and (max-width: 1350px) { \n    max-width: 100%;\n  }\n`\n\nexport const aprToApy = (apr: number): BigNumber => {\n  const cmpd = 1000;\n  const apy = new BigNumber(apr).div(100).div(365).plus(1).pow(365).minus(1).times(100);\n\n  return apy.isNaN() || !apy.isFinite() ? null : apy;\n};\n\nexport const BIG_TEN = new BigNumber(10);\n\n\nconst Farm: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { account } = useWallet()\n  const farm0 = useFarmFromPid(0);\n  const pools = usePools(account)\n  const prices = usePrices()\n  const block = useBlock()\n\n  const poolsWithApy = pools.map((pool) => {\n\n    const quoteTokens = pool.totalStaked ?\n        new BigNumber(pool.totalStaked.toString()).div(2).div(BIG_TEN.pow(18)) :\n        new BigNumber(0)\n    const tvl = getTotalValueFromQuoteTokens(quoteTokens, pool.quoteTokenSymbol, prices)\n\n    const reverseAtlastUserAction = pool.userData ?\n        new BigNumber(pool.userData.reverseAtlastUserAction) :\n        new BigNumber(0)\n\n    const lastDepositedTime = pool.userData ?\n        new BigNumber(pool.userData.lastDepositedTime) :\n        new BigNumber(0)\n\n    const lastUserActionTime = pool.userData ?\n        new BigNumber(pool.userData.lastUserActionTime) :\n        new BigNumber(0)\n\n    // console.log(\"APY\", pool, tvl && tvl.toNumber())\n    const rewardTokenPrice = lookupPrice(pool.tokenName, prices)\n    // console.log(\"price\", pool.tokenName, rewardTokenPrice && rewardTokenPrice.toNumber())\n\n    const totalRewardPricePerYear = rewardTokenPrice.times(farm0.vikingPerBlock).div(BIG_TEN.pow(18)).times(farm0.poolWeight).times(BLOCKS_PER_YEAR)\n    // const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    const apr = totalRewardPricePerYear.div(tvl).times(100).times(2)\n    const apy = aprToApy(apr)\n    // console.log(\"TVL\", pool.stakingTokenName, tvl && tvl.toNumber(), apy && apy.toNumber())\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apr,\n      apy,\n      tvl,\n      lastDepositedTime,\n      lastUserActionTime,\n      reverseAtlastUserAction\n    }\n  })\n\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n  const { url, isExact } = useRouteMatch()\n  const TranslateString = useI18n()\n  console.log(poolsWithApy)\n\n  return (\n    <Page>\n\n      <StakeDashboard/>    \n\n      <FlexStaking>\n        <Route exact path={`${path}`}>\n          <>\n            {orderBy(openPools, ['sortOrder']).map((pool) => (\n              <PoolCard key={pool.sousId} pool={pool} />\n            ))}\n          </> \n        </Route>\n        <Route path={`${path}/history`}>\n          {orderBy(finishedPools, ['sortOrder']).map((pool) => (\n            <PoolCard key={pool.sousId} pool={pool} />\n          ))}\n        </Route>\n      </FlexStaking>\n\n          \n    </Page>\n  )\n}\n\nexport default Farm\n"]},"metadata":{},"sourceType":"module"}