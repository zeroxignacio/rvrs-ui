{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useCallback,useMemo,useState}from'react';import ModalActions from'components/layout/modal/modalActions';import{getFullDisplayBalance}from'utils/formatBalance';import{Modal}from'@pancakeswap-libs/uikit';import{TranslateString}from'utils/translateTextHelpers';import ModalButton from'components/layout/buttons/modalButton';import TokenInput from'../../../components/layout/modal/input';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var StakeModal=function StakeModal(_ref){var max=_ref.max,onConfirm=_ref.onConfirm,onDismiss=_ref.onDismiss,_ref$tokenName=_ref.tokenName,tokenName=_ref$tokenName===void 0?'':_ref$tokenName;var _useState=useState(''),_useState2=_slicedToArray(_useState,2),val=_useState2[0],setVal=_useState2[1];var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),pendingTx=_useState4[0],setPendingTx=_useState4[1];var fullBalance=useMemo(function(){return getFullDisplayBalance(max);},[max]);var handleChange=useCallback(function(e){setVal(e.currentTarget.value);},[setVal]);var handleSelectMax=useCallback(function(){setVal(fullBalance);},[fullBalance,setVal]);return/*#__PURE__*/_jsxs(Modal,{title:\"\".concat(TranslateString(3016,'Stake'),\" \").concat(tokenName),onDismiss:onDismiss,children:[/*#__PURE__*/_jsx(TokenInput,{value:val,onSelectMax:handleSelectMax,onChange:handleChange,max:fullBalance,symbol:tokenName}),/*#__PURE__*/_jsx(ModalActions,{children:/*#__PURE__*/_jsx(ModalButton,{disabled:pendingTx,onClick:/*#__PURE__*/_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setPendingTx(true);_context.next=3;return onConfirm(val);case 3:setPendingTx(false);onDismiss();case 5:case\"end\":return _context.stop();}}},_callee);})),children:pendingTx?'Pending...':'Confirm'})})]});};export default StakeModal;","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/modals/stakeModal.tsx"],"names":["React","useCallback","useMemo","useState","ModalActions","getFullDisplayBalance","Modal","TranslateString","ModalButton","TokenInput","StakeModal","max","onConfirm","onDismiss","tokenName","val","setVal","pendingTx","setPendingTx","fullBalance","handleChange","e","currentTarget","value","handleSelectMax"],"mappings":"kfACA,MAAOA,CAAAA,KAAP,EAAgBC,WAAhB,CAA6BC,OAA7B,CAAsCC,QAAtC,KAAsD,OAAtD,CAEA,MAAOC,CAAAA,YAAP,KAAyB,sCAAzB,CACA,OAASC,qBAAT,KAAsC,qBAAtC,CACA,OAASC,KAAT,KAAsB,yBAAtB,CACA,OAASC,eAAT,KAAgC,4BAAhC,CAEA,MAAOC,CAAAA,WAAP,KAAwB,uCAAxB,CACA,MAAOC,CAAAA,UAAP,KAAuB,wCAAvB,C,wFASA,GAAMC,CAAAA,UAAuC,CAAG,QAA1CA,CAAAA,UAA0C,MAAmD,IAAhDC,CAAAA,GAAgD,MAAhDA,GAAgD,CAA3CC,SAA2C,MAA3CA,SAA2C,CAAhCC,SAAgC,MAAhCA,SAAgC,qBAArBC,SAAqB,CAArBA,SAAqB,yBAAT,EAAS,8BAC3EX,QAAQ,CAAC,EAAD,CADmE,wCAC1FY,GAD0F,eACrFC,MADqF,8BAE/Db,QAAQ,CAAC,KAAD,CAFuD,yCAE1Fc,SAF0F,eAE/EC,YAF+E,eAGjG,GAAMC,CAAAA,WAAW,CAAGjB,OAAO,CAAC,UAAM,CAChC,MAAOG,CAAAA,qBAAqB,CAACM,GAAD,CAA5B,CACD,CAF0B,CAExB,CAACA,GAAD,CAFwB,CAA3B,CAGA,GAAMS,CAAAA,YAAY,CAAGnB,WAAW,CAC9B,SAACoB,CAAD,CAA0C,CACxCL,MAAM,CAACK,CAAC,CAACC,aAAF,CAAgBC,KAAjB,CAAN,CACD,CAH6B,CAI9B,CAACP,MAAD,CAJ8B,CAAhC,CAMA,GAAMQ,CAAAA,eAAe,CAAGvB,WAAW,CAAC,UAAM,CACxCe,MAAM,CAACG,WAAD,CAAN,CACD,CAFkC,CAEhC,CAACA,WAAD,CAAcH,MAAd,CAFgC,CAAnC,CAIA,mBACE,MAAC,KAAD,EAAO,KAAK,WAAKT,eAAe,CAAC,IAAD,CAAO,OAAP,CAApB,aAAuCO,SAAvC,CAAZ,CAAgE,SAAS,CAAED,SAA3E,wBACE,KAAC,UAAD,EACE,KAAK,CAAEE,GADT,CAEE,WAAW,CAAES,eAFf,CAGE,QAAQ,CAAEJ,YAHZ,CAIE,GAAG,CAAED,WAJP,CAKE,MAAM,CAAEL,SALV,EADF,cAQE,KAAC,YAAD,wBACE,KAAC,WAAD,EACE,QAAQ,CAAEG,SADZ,CAEE,OAAO,sEAAE,mIACPC,YAAY,CAAC,IAAD,CAAZ,CADO,sBAEDN,CAAAA,SAAS,CAACG,GAAD,CAFR,QAGPG,YAAY,CAAC,KAAD,CAAZ,CACAL,SAAS,GAJF,sDAAF,EAFT,UASGI,SAAS,CAAG,YAAH,CAAkB,SAT9B,EADF,EARF,GADF,CAwBD,CAxCD,CA0CA,cAAeP,CAAAA,UAAf","sourcesContent":["import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport ModalActions from 'components/layout/modal/modalActions'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { Modal } from '@pancakeswap-libs/uikit'\nimport { TranslateString } from 'utils/translateTextHelpers'\nimport useWalletModal from 'components/WalletModal'\nimport ModalButton from 'components/layout/buttons/modalButton'\nimport TokenInput from '../../../components/layout/modal/input'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst StakeModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(3016, 'Stake')} ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <ModalButton\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? 'Pending...' : 'Confirm'}\n        </ModalButton>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default StakeModal"]},"metadata":{},"sourceType":"module"}