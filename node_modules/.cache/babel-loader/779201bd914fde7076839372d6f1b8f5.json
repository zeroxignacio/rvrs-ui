{"ast":null,"code":"import multicall from 'utils/multicall';\nimport { getAirdropAddress } from 'utils/addressHelpers';\nimport RewardClaim from \"../../config/abi/RewardClaim.json\";\n\nconst fetchAirdropUserInfo = async account => {\n  const calls = [{\n    address: getAirdropAddress(),\n    name: 'totalDistributed',\n    params: []\n  }, {\n    address: getAirdropAddress(),\n    name: 'claimable',\n    params: [account]\n  }, {\n    address: getAirdropAddress(),\n    name: 'claimed',\n    params: [account]\n  }, {\n    address: getAirdropAddress(),\n    name: 'lastClaimAmount',\n    params: [account]\n  }];\n  const userInfo = await multicall(RewardClaim, calls);\n  const output = {\n    totalDistributed: userInfo[0],\n    userClaimable: userInfo[1],\n    userTotalClaimed: userInfo[2],\n    userLastClaimedAmount: userInfo[3]\n  };\n  return output;\n};\n\nexport default fetchAirdropUserInfo;","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/airdrop/fetchAirdropUser.ts"],"names":["multicall","getAirdropAddress","RewardClaim","fetchAirdropUserInfo","account","calls","address","name","params","userInfo","output","totalDistributed","userClaimable","userTotalClaimed","userLastClaimedAmount"],"mappings":"AACA,OAAOA,SAAP,MAAsB,iBAAtB;AACA,SAAQC,iBAAR,QAAgC,sBAAhC;AACA,OAAOC,WAAP,MAAwB,mCAAxB;;AAEA,MAAMC,oBAAoB,GAAG,MAAOC,OAAP,IAAmB;AAC9C,QAAMC,KAAK,GAAG,CACZ;AACEC,IAAAA,OAAO,EAAEL,iBAAiB,EAD5B;AAEEM,IAAAA,IAAI,EAAE,kBAFR;AAGEC,IAAAA,MAAM,EAAE;AAHV,GADY,EAMZ;AACEF,IAAAA,OAAO,EAAEL,iBAAiB,EAD5B;AAEEM,IAAAA,IAAI,EAAE,WAFR;AAGEC,IAAAA,MAAM,EAAE,CAACJ,OAAD;AAHV,GANY,EAWZ;AACEE,IAAAA,OAAO,EAAEL,iBAAiB,EAD5B;AAEEM,IAAAA,IAAI,EAAE,SAFR;AAGEC,IAAAA,MAAM,EAAE,CAACJ,OAAD;AAHV,GAXY,EAgBZ;AACEE,IAAAA,OAAO,EAAEL,iBAAiB,EAD5B;AAEEM,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,MAAM,EAAE,CAACJ,OAAD;AAHV,GAhBY,CAAd;AAsBA,QAAMK,QAAQ,GAAG,MAAMT,SAAS,CAACE,WAAD,EAAcG,KAAd,CAAhC;AAEA,QAAMK,MAAM,GAAG;AACbC,IAAAA,gBAAgB,EAAEF,QAAQ,CAAC,CAAD,CADb;AAEbG,IAAAA,aAAa,EAAEH,QAAQ,CAAC,CAAD,CAFV;AAGbI,IAAAA,gBAAgB,EAAEJ,QAAQ,CAAC,CAAD,CAHb;AAIbK,IAAAA,qBAAqB,EAAEL,QAAQ,CAAC,CAAD;AAJlB,GAAf;AAMA,SAAOC,MAAP;AACD,CAhCD;;AAkCA,eAAeP,oBAAf","sourcesContent":["\nimport multicall from 'utils/multicall'\nimport {getAirdropAddress} from 'utils/addressHelpers'\nimport RewardClaim from \"../../config/abi/RewardClaim.json\";\n\nconst fetchAirdropUserInfo = async (account) => {\n  const calls = [\n    {\n      address: getAirdropAddress(),\n      name: 'totalDistributed',\n      params: []\n    },\n    {\n      address: getAirdropAddress(),\n      name: 'claimable',\n      params: [account]\n    },\n    {\n      address: getAirdropAddress(),\n      name: 'claimed',\n      params: [account]\n    },\n    {\n      address: getAirdropAddress(),\n      name: 'lastClaimAmount',\n      params: [account]\n    }\n  ];\n  const userInfo = await multicall(RewardClaim, calls);\n\n  const output = {\n    totalDistributed: userInfo[0],\n    userClaimable: userInfo[1],\n    userTotalClaimed: userInfo[2],\n    userLastClaimedAmount: userInfo[3]\n  };\n  return output\n};\n\nexport default fetchAirdropUserInfo;\n"]},"metadata":{},"sourceType":"module"}