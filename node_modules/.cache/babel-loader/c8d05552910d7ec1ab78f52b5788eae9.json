{"ast":null,"code":"import _regeneratorRuntime from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import BigNumber from'bignumber.js';import{useWallet}from'@binance-chain/bsc-use-wallet';import cakeABI from'config/abi/cake.json';import{getContract}from'utils/web3';import{getTokenBalance}from'utils/erc20';import{getCakeAddress,getRvrsOneAddress,getRvrsUstAddress,getUstAddress}from'utils/addressHelpers';import useRefresh from'./useRefresh';var useTokenBalance=function useTokenBalance(tokenAddress){var _useState=useState(new BigNumber(0)),_useState2=_slicedToArray(_useState,2),balance=_useState2[0],setBalance=_useState2[1];var _useWallet=useWallet(),account=_useWallet.account,ethereum=_useWallet.ethereum;var _useRefresh=useRefresh(),fastRefresh=_useRefresh.fastRefresh;useEffect(function(){var fetchBalance=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var res;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return getTokenBalance(ethereum,tokenAddress,account);case 2:res=_context.sent;setBalance(new BigNumber(res));case 4:case\"end\":return _context.stop();}}},_callee);}));return function fetchBalance(){return _ref.apply(this,arguments);};}();if(account&&ethereum){fetchBalance();}},[account,ethereum,tokenAddress,fastRefresh]);return balance;};export var useTotalSupply=function useTotalSupply(){var _useRefresh2=useRefresh(),slowRefresh=_useRefresh2.slowRefresh;var _useState3=useState(),_useState4=_slicedToArray(_useState3,2),totalSupply=_useState4[0],setTotalSupply=_useState4[1];useEffect(function(){function fetchTotalSupply(){return _fetchTotalSupply.apply(this,arguments);}function _fetchTotalSupply(){_fetchTotalSupply=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(){var cakeContract,supply;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:cakeContract=getContract(cakeABI,getCakeAddress());_context2.next=3;return cakeContract.methods.totalSupply().call();case 3:supply=_context2.sent;setTotalSupply(new BigNumber(supply));case 5:case\"end\":return _context2.stop();}}},_callee2);}));return _fetchTotalSupply.apply(this,arguments);}fetchTotalSupply();},[slowRefresh]);return totalSupply;};export var useBurnedBalance=function useBurnedBalance(tokenAddress){var _useState5=useState(new BigNumber(0)),_useState6=_slicedToArray(_useState5,2),balance=_useState6[0],setBalance=_useState6[1];var _useRefresh3=useRefresh(),slowRefresh=_useRefresh3.slowRefresh;useEffect(function(){var fetchBalance=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(){var cakeContract,bal;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:cakeContract=getContract(cakeABI,getCakeAddress());_context3.next=3;return cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call();case 3:bal=_context3.sent;setBalance(new BigNumber(bal));case 5:case\"end\":return _context3.stop();}}},_callee3);}));return function fetchBalance(){return _ref2.apply(this,arguments);};}();fetchBalance();},[tokenAddress,slowRefresh]);return balance;};export var useUstTreasuryBalance=function useUstTreasuryBalance(tokenAddress){var _useState7=useState(new BigNumber(0)),_useState8=_slicedToArray(_useState7,2),balance=_useState8[0],setBalance=_useState8[1];var _useRefresh4=useRefresh(),slowRefresh=_useRefresh4.slowRefresh;useEffect(function(){var fetchBalance=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee4(){var ustContract,bal;return _regeneratorRuntime.wrap(function _callee4$(_context4){while(1){switch(_context4.prev=_context4.next){case 0:ustContract=getContract(cakeABI,getUstAddress());_context4.next=3;return ustContract.methods.balanceOf('0xA3904e99b6012EB883DB1090D02D4e954539EC61').call();case 3:bal=_context4.sent;setBalance(new BigNumber(bal));case 5:case\"end\":return _context4.stop();}}},_callee4);}));return function fetchBalance(){return _ref3.apply(this,arguments);};}();fetchBalance();},[tokenAddress,slowRefresh]);return balance;};export var useRvrsOneTreasuryBalance=function useRvrsOneTreasuryBalance(tokenAddress){var _useState9=useState(new BigNumber(0)),_useState10=_slicedToArray(_useState9,2),balance=_useState10[0],setBalance=_useState10[1];var _useRefresh5=useRefresh(),slowRefresh=_useRefresh5.slowRefresh;useEffect(function(){var fetchBalance=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee5(){var rvrsoneContract,bal;return _regeneratorRuntime.wrap(function _callee5$(_context5){while(1){switch(_context5.prev=_context5.next){case 0:rvrsoneContract=getContract(cakeABI,getRvrsOneAddress());_context5.next=3;return rvrsoneContract.methods.balanceOf('0xA3904e99b6012EB883DB1090D02D4e954539EC61').call();case 3:bal=_context5.sent;setBalance(new BigNumber(bal));case 5:case\"end\":return _context5.stop();}}},_callee5);}));return function fetchBalance(){return _ref4.apply(this,arguments);};}();fetchBalance();},[tokenAddress,slowRefresh]);return balance;};export var useRvrsUstTreasuryBalance=function useRvrsUstTreasuryBalance(tokenAddress){var _useState11=useState(new BigNumber(0)),_useState12=_slicedToArray(_useState11,2),balance=_useState12[0],setBalance=_useState12[1];var _useRefresh6=useRefresh(),slowRefresh=_useRefresh6.slowRefresh;useEffect(function(){var fetchBalance=/*#__PURE__*/function(){var _ref5=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee6(){var rvrsustContract,bal;return _regeneratorRuntime.wrap(function _callee6$(_context6){while(1){switch(_context6.prev=_context6.next){case 0:rvrsustContract=getContract(cakeABI,getRvrsUstAddress());_context6.next=3;return rvrsustContract.methods.balanceOf('0xA3904e99b6012EB883DB1090D02D4e954539EC61').call();case 3:bal=_context6.sent;setBalance(new BigNumber(bal));case 5:case\"end\":return _context6.stop();}}},_callee6);}));return function fetchBalance(){return _ref5.apply(this,arguments);};}();fetchBalance();},[tokenAddress,slowRefresh]);return balance;};export default useTokenBalance;","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useTokenBalance.ts"],"names":["useEffect","useState","BigNumber","useWallet","cakeABI","getContract","getTokenBalance","getCakeAddress","getRvrsOneAddress","getRvrsUstAddress","getUstAddress","useRefresh","useTokenBalance","tokenAddress","balance","setBalance","account","ethereum","fastRefresh","fetchBalance","res","useTotalSupply","slowRefresh","totalSupply","setTotalSupply","fetchTotalSupply","cakeContract","methods","call","supply","useBurnedBalance","balanceOf","bal","useUstTreasuryBalance","ustContract","useRvrsOneTreasuryBalance","rvrsoneContract","useRvrsUstTreasuryBalance","rvrsustContract"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport cakeABI from 'config/abi/cake.json'\nimport { getContract } from 'utils/web3'\nimport { getTokenBalance } from 'utils/erc20'\nimport { getCakeAddress, getRvrsOneAddress, getRvrsUstAddress, getUstAddress } from 'utils/addressHelpers'\nimport useRefresh from './useRefresh'\n\nconst useTokenBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const { fastRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const res = await getTokenBalance(ethereum, tokenAddress, account)\n      setBalance(new BigNumber(res))\n    }\n\n    if (account && ethereum) {\n      fetchBalance()\n    }\n  }, [account, ethereum, tokenAddress, fastRefresh])\n\n  return balance\n}\n\nexport const useTotalSupply = () => {\n  const { slowRefresh } = useRefresh()\n  const [totalSupply, setTotalSupply] = useState<BigNumber>()\n\n  useEffect(() => {\n    async function fetchTotalSupply() {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const supply = await cakeContract.methods.totalSupply().call()\n      setTotalSupply(new BigNumber(supply))\n    }\n\n    fetchTotalSupply()\n  }, [slowRefresh])\n\n  return totalSupply\n}\n\nexport const useBurnedBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const cakeContract = getContract(cakeABI, getCakeAddress())\n      const bal = await cakeContract.methods.balanceOf('0x000000000000000000000000000000000000dEaD').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useUstTreasuryBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const ustContract = getContract(cakeABI, getUstAddress())\n      const bal = await ustContract.methods.balanceOf('0xA3904e99b6012EB883DB1090D02D4e954539EC61').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useRvrsOneTreasuryBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rvrsoneContract = getContract(cakeABI, getRvrsOneAddress())\n      const bal = await rvrsoneContract.methods.balanceOf('0xA3904e99b6012EB883DB1090D02D4e954539EC61').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport const useRvrsUstTreasuryBalance = (tokenAddress: string) => {\n  const [balance, setBalance] = useState(new BigNumber(0))\n  const { slowRefresh } = useRefresh()\n\n  useEffect(() => {\n    const fetchBalance = async () => {\n      const rvrsustContract = getContract(cakeABI, getRvrsUstAddress())\n      const bal = await rvrsustContract.methods.balanceOf('0xA3904e99b6012EB883DB1090D02D4e954539EC61').call()\n      setBalance(new BigNumber(bal))\n    }\n\n    fetchBalance()\n  }, [tokenAddress, slowRefresh])\n\n  return balance\n}\n\nexport default useTokenBalance\n"]},"metadata":{},"sourceType":"module"}