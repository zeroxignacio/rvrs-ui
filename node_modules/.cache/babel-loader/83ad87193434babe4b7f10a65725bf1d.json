{"ast":null,"code":"var _jsxFileName = \"/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Farms/components/FarmCard/CardActionsContainer.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState, useCallback } from 'react';\nimport BigNumber from 'bignumber.js';\nimport styled from 'styled-components';\nimport { getContract } from 'utils/erc20';\nimport { Flex, LinkExternal } from '@pancakeswap-libs/uikit';\nimport { useFarmFromPid, useFarmTokensToUsd, useFarmUser } from 'state/hooks';\nimport useI18n from 'hooks/useI18n';\nimport UnlockButton from 'components/UnlockButton';\nimport { useApprove } from 'hooks/useApprove';\nimport labo from 'config/constants/labo';\nimport StakeAction from './StakeAction';\nimport HarvestAction from './HarvestAction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Action = styled.div`\n  padding-top: 16px;\n`;\n_c = Action;\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: bold;\n  color: ${({\n  theme\n}) => theme.colors.text};\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({\n  theme\n}) => theme.colors.primary};\n  }\n`;\nconst StyledBtn = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #ffff !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 400;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 90px;\n  padding: 20px;\n\n  `;\n_c2 = StyledBtn;\n\nconst CardActions = ({\n  farm,\n  ethereum,\n  account\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const {\n    pid,\n    lpAddresses,\n    tokenAddresses,\n    isTokenOnly,\n    depositFeeBP\n  } = useFarmFromPid(farm.pid);\n  const {\n    allowance,\n    tokenBalance,\n    stakedBalance,\n    earnings\n  } = useFarmUser(pid);\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID];\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID];\n  const lpName = farm.lpSymbol.toUpperCase();\n  const isApproved = account && allowance && allowance.isGreaterThan(0);\n  const tokenBalanceUsd = useFarmTokensToUsd(pid, tokenBalance);\n  const stakedBalanceUsd = useFarmTokensToUsd(pid, stakedBalance.div(new BigNumber(10).pow(18))); // console.log(\"StakedBalance\", farm.pid, stakedBalance && stakedBalance.toNumber())\n  // console.log(\"StakedBalanceUsd\", farm.pid, stakedBalanceUsd && stakedBalanceUsd.toNumber())\n  // console.log(pid)\n  // console.log(tokenBalanceUsd)\n  // console.log(stakedBalanceUsd)\n\n  const lpContract = useMemo(() => {\n    if (isTokenOnly) {\n      return getContract(ethereum, tokenAddress);\n    }\n\n    return getContract(ethereum, lpAddress);\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly]);\n  const {\n    onApprove\n  } = useApprove(lpContract);\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true);\n      await onApprove();\n      setRequestedApproval(false);\n    } catch (e) {\n      console.error(e);\n    }\n  }, [onApprove]);\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? /*#__PURE__*/_jsxDEV(StakeAction, {\n      stakedBalance: stakedBalance,\n      stakedBalanceUsd: stakedBalanceUsd,\n      tokenBalance: tokenBalance,\n      tokenBalanceUsd: tokenBalanceUsd,\n      tokenName: lpName,\n      pid: pid,\n      depositFeeBP: depositFeeBP\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n      \"data-tip\": true,\n      \"data-for\": \"happyFace\",\n      children: /*#__PURE__*/_jsxDEV(Flex, {\n        justifyContent: \"end\",\n        children: /*#__PURE__*/_jsxDEV(StyledBtn, {\n          disabled: requestedApproval || labo.isLocked.unlockWalletButton,\n          onClick: handleApprove,\n          children: TranslateString(999, 'Enable')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Action, {\n    children: [/*#__PURE__*/_jsxDEV(HarvestAction, {\n      earnings: earnings,\n      pid: pid\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 7\n    }, this), !account ? /*#__PURE__*/_jsxDEV(UnlockButton, {\n      justifyContent: \"end\",\n      style: {\n        border: '1px',\n        justifyContent: \"center\",\n        color: '#8299dd !important',\n        borderRadius: '10px',\n        fontSize: '15px',\n        fontWeight: '200',\n        width: '35%',\n        display: 'inline-flex',\n        height: '44px',\n        padding: '20px',\n        minHeight: '21px',\n        maxHeight: '33px',\n        marginTop: '12px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 19\n    }, this) : renderApprovalOrStakeButton()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CardActions, \"3ybTk3ux13eiwY0FS5tZ8cVLnXs=\", false, function () {\n  return [useI18n, useFarmFromPid, useFarmUser, useFarmTokensToUsd, useFarmTokensToUsd, useApprove];\n});\n\n_c3 = CardActions;\nexport default CardActions;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Action\");\n$RefreshReg$(_c2, \"StyledBtn\");\n$RefreshReg$(_c3, \"CardActions\");","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Farms/components/FarmCard/CardActionsContainer.tsx"],"names":["React","useMemo","useState","useCallback","BigNumber","styled","getContract","Flex","LinkExternal","useFarmFromPid","useFarmTokensToUsd","useFarmUser","useI18n","UnlockButton","useApprove","labo","StakeAction","HarvestAction","Action","div","StyledLinkExternal","theme","colors","text","primary","StyledBtn","button","CardActions","farm","ethereum","account","TranslateString","requestedApproval","setRequestedApproval","pid","lpAddresses","tokenAddresses","isTokenOnly","depositFeeBP","allowance","tokenBalance","stakedBalance","earnings","lpAddress","process","env","REACT_APP_CHAIN_ID","tokenAddress","lpName","lpSymbol","toUpperCase","isApproved","isGreaterThan","tokenBalanceUsd","stakedBalanceUsd","pow","lpContract","onApprove","handleApprove","e","console","error","renderApprovalOrStakeButton","isLocked","unlockWalletButton","border","justifyContent","color","borderRadius","fontSize","fontWeight","width","display","height","padding","minHeight","maxHeight","marginTop"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,EAAyBC,QAAzB,EAAmCC,WAAnC,QAAsD,OAAtD;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAiBC,IAAjB,EAAuBC,YAAvB,QAAiD,yBAAjD;AAEA,SAAQC,cAAR,EAA2CC,kBAA3C,EAA+DC,WAA/D,QAAmG,aAAnG;AACA,OAAOC,OAAP,MAAoB,eAApB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,SAASC,UAAT,QAA2B,kBAA3B;AAEA,OAAOC,IAAP,MAAiB,uBAAjB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;AAEA,MAAMC,MAAM,GAAGb,MAAM,CAACc,GAAI;AAC1B;AACA,CAFA;KAAMD,M;AAYN,MAAME,kBAAkB,GAAGf,MAAM,CAACG,YAAD,CAAe;AAChD;AACA;AACA,WAAW,CAAC;AAAEa,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaC,IAAK;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,MAAN,CAAaE,OAAQ;AAChD;AACA,CAdA;AAiBA,MAAMC,SAAS,GAAGpB,MAAM,CAACqB,MAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAlBA;MAAMD,S;;AAoBN,MAAME,WAA2C,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,QAAR;AAAkBC,EAAAA;AAAlB,CAAD,KAAiC;AAAA;;AACnF,QAAMC,eAAe,GAAGnB,OAAO,EAA/B;AACA,QAAM,CAACoB,iBAAD,EAAoBC,oBAApB,IAA4C/B,QAAQ,CAAC,KAAD,CAA1D;AACA,QAAM;AAAEgC,IAAAA,GAAF;AAAOC,IAAAA,WAAP;AAAoBC,IAAAA,cAApB;AAAoCC,IAAAA,WAApC;AAAiDC,IAAAA;AAAjD,MAAkE7B,cAAc,CAACmB,IAAI,CAACM,GAAN,CAAtF;AACA,QAAM;AAAEK,IAAAA,SAAF;AAAaC,IAAAA,YAAb;AAA2BC,IAAAA,aAA3B;AAA0CC,IAAAA;AAA1C,MAAuD/B,WAAW,CAACuB,GAAD,CAAxE;AACA,QAAMS,SAAS,GAAGR,WAAW,CAACS,OAAO,CAACC,GAAR,CAAYC,kBAAb,CAA7B;AACA,QAAMC,YAAY,GAAGX,cAAc,CAACQ,OAAO,CAACC,GAAR,CAAYC,kBAAb,CAAnC;AACA,QAAME,MAAM,GAAGpB,IAAI,CAACqB,QAAL,CAAcC,WAAd,EAAf;AACA,QAAMC,UAAU,GAAGrB,OAAO,IAAIS,SAAX,IAAwBA,SAAS,CAACa,aAAV,CAAwB,CAAxB,CAA3C;AACA,QAAMC,eAAe,GAAG3C,kBAAkB,CAACwB,GAAD,EAAMM,YAAN,CAA1C;AACA,QAAMc,gBAAgB,GAAG5C,kBAAkB,CAACwB,GAAD,EAAMO,aAAa,CAACtB,GAAd,CAAkB,IAAIf,SAAJ,CAAc,EAAd,EAAkBmD,GAAlB,CAAsB,EAAtB,CAAlB,CAAN,CAA3C,CAVmF,CAWnF;AACA;AAEA;AACA;AACA;;AAEA,QAAMC,UAAU,GAAGvD,OAAO,CAAC,MAAM;AAC/B,QAAGoC,WAAH,EAAe;AACb,aAAO/B,WAAW,CAACuB,QAAD,EAAuBkB,YAAvB,CAAlB;AACD;;AACD,WAAOzC,WAAW,CAACuB,QAAD,EAAuBc,SAAvB,CAAlB;AACD,GALyB,EAKvB,CAACd,QAAD,EAAWc,SAAX,EAAsBI,YAAtB,EAAoCV,WAApC,CALuB,CAA1B;AAOA,QAAM;AAAEoB,IAAAA;AAAF,MAAgB3C,UAAU,CAAC0C,UAAD,CAAhC;AAEA,QAAME,aAAa,GAAGvD,WAAW,CAAC,YAAY;AAC5C,QAAI;AACF8B,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACA,YAAMwB,SAAS,EAAf;AACAxB,MAAAA,oBAAoB,CAAC,KAAD,CAApB;AACD,KAJD,CAIE,OAAO0B,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,KAAR,CAAcF,CAAd;AACD;AACF,GARgC,EAQ9B,CAACF,SAAD,CAR8B,CAAjC;;AAaA,QAAMK,2BAA2B,GAAG,MAAM;AACxC,WAAOX,UAAU,gBACf,QAAC,WAAD;AACI,MAAA,aAAa,EAAEV,aADnB;AAEI,MAAA,gBAAgB,EAAEa,gBAFtB;AAGI,MAAA,YAAY,EAAEd,YAHlB;AAII,MAAA,eAAe,EAAEa,eAJrB;AAKI,MAAA,SAAS,EAAEL,MALf;AAKuB,MAAA,GAAG,EAAEd,GAL5B;AAMI,MAAA,YAAY,EAAEI;AANlB;AAAA;AAAA;AAAA;AAAA,YADe,gBAUf;AAAM,sBAAN;AAAe,kBAAS,WAAxB;AAAA,6BAEA,QAAC,IAAD;AAAM,QAAA,cAAc,EAAC,KAArB;AAAA,+BACE,QAAC,SAAD;AACA,UAAA,QAAQ,EAAEN,iBAAiB,IAAIjB,IAAI,CAACgD,QAAL,CAAcC,kBAD7C;AAEA,UAAA,OAAO,EAAEN,aAFT;AAAA,oBAGG3B,eAAe,CAAC,GAAD,EAAM,QAAN;AAHlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AAFA;AAAA;AAAA;AAAA;AAAA,YAVF;AAsBD,GAvBD;;AAyBA,sBACE,QAAC,MAAD;AAAA,4BAEE,QAAC,aAAD;AAAe,MAAA,QAAQ,EAAEW,QAAzB;AAAmC,MAAA,GAAG,EAAER;AAAxC;AAAA;AAAA;AAAA;AAAA,YAFF,EAKG,CAACJ,OAAD,gBAAW,QAAC,YAAD;AAAc,MAAA,cAAc,EAAC,KAA7B;AACZ,MAAA,KAAK,EAAE;AACLmC,QAAAA,MAAM,EAAE,KADH;AAELC,QAAAA,cAAc,EAAE,QAFX;AAGLC,QAAAA,KAAK,EAAE,oBAHF;AAILC,QAAAA,YAAY,EAAE,MAJT;AAKLC,QAAAA,QAAQ,EAAE,MALL;AAMLC,QAAAA,UAAU,EAAE,KANP;AAOLC,QAAAA,KAAK,EAAE,KAPF;AAQLC,QAAAA,OAAO,EAAE,aARJ;AASLC,QAAAA,MAAM,EAAE,MATH;AAULC,QAAAA,OAAO,EAAE,MAVJ;AAWLC,QAAAA,SAAS,EAAE,MAXN;AAYLC,QAAAA,SAAS,EAAE,MAZN;AAaLC,QAAAA,SAAS,EAAE;AAbN;AADK;AAAA;AAAA;AAAA;AAAA,YAAX,GAgBFf,2BAA2B,EArB5B;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD,CA3FD;;GAAMnC,W;UACoBf,O,EAEgDH,c,EACXE,W,EAKrCD,kB,EACCA,kB,EAeHI,U;;;MAzBlBa,W;AA6FN,eAAeA,WAAf","sourcesContent":["import React, { useMemo, useState, useCallback } from 'react'\nimport BigNumber from 'bignumber.js'\nimport styled from 'styled-components'\nimport { provider } from 'web3-core'\nimport { getContract } from 'utils/erc20'\nimport { Button, Flex, LinkExternal, Text } from '@pancakeswap-libs/uikit'\nimport { Farm } from 'state/types'\nimport {useFarmFromPid, useFarmFromSymbol, useFarmTokensToUsd, useFarmUser, usePriceCakeBusd} from 'state/hooks'\nimport useI18n from 'hooks/useI18n'\nimport UnlockButton from 'components/UnlockButton'\nimport { useApprove } from 'hooks/useApprove'\nimport ReactTooltip from 'react-tooltip';\nimport labo from 'config/constants/labo'\nimport { Address } from 'config/constants/types'\nimport StakeAction from './StakeAction'\nimport HarvestAction from './HarvestAction'\n\nconst Action = styled.div`\n  padding-top: 16px;\n`\nexport interface FarmWithStakedValue extends Farm {\n  apy?: BigNumber\n}\n\ninterface FarmCardActionsProps {\n  farm: FarmWithStakedValue\n  ethereum?: provider\n  account?: string\n}\nconst StyledLinkExternal = styled(LinkExternal)`\n  text-decoration: none;\n  font-weight: bold;\n  color: ${({ theme }) => theme.colors.text};\n  display: flex;\n  align-items: center;\n  margin-top: 25px;\n\n  svg {\n    padding-left: 4px;\n    height: 18px;\n    width: auto;\n    fill: ${({ theme }) => theme.colors.primary};\n  }\n`\n\n\nconst StyledBtn = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #ffff !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 400;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 90px;\n  padding: 20px;\n\n  `\n\nconst CardActions: React.FC<FarmCardActionsProps> = ({ farm, ethereum, account }) => {\n  const TranslateString = useI18n()\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const { pid, lpAddresses, tokenAddresses, isTokenOnly, depositFeeBP } = useFarmFromPid(farm.pid)\n  const { allowance, tokenBalance, stakedBalance, earnings } = useFarmUser(pid)\n  const lpAddress = lpAddresses[process.env.REACT_APP_CHAIN_ID]\n  const tokenAddress = tokenAddresses[process.env.REACT_APP_CHAIN_ID];\n  const lpName = farm.lpSymbol.toUpperCase()\n  const isApproved = account && allowance && allowance.isGreaterThan(0)\n  const tokenBalanceUsd = useFarmTokensToUsd(pid, tokenBalance)\n  const stakedBalanceUsd = useFarmTokensToUsd(pid, stakedBalance.div(new BigNumber(10).pow(18)))\n  // console.log(\"StakedBalance\", farm.pid, stakedBalance && stakedBalance.toNumber())\n  // console.log(\"StakedBalanceUsd\", farm.pid, stakedBalanceUsd && stakedBalanceUsd.toNumber())\n\n  // console.log(pid)\n  // console.log(tokenBalanceUsd)\n  // console.log(stakedBalanceUsd)\n\n  const lpContract = useMemo(() => {\n    if(isTokenOnly){\n      return getContract(ethereum as provider, tokenAddress);\n    }\n    return getContract(ethereum as provider, lpAddress);\n  }, [ethereum, lpAddress, tokenAddress, isTokenOnly])\n\n  const { onApprove } = useApprove(lpContract)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      await onApprove()\n      setRequestedApproval(false)\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove])\n\n\n\n\n  const renderApprovalOrStakeButton = () => {\n    return isApproved ? (\n      <StakeAction\n          stakedBalance={stakedBalance}\n          stakedBalanceUsd={stakedBalanceUsd}\n          tokenBalance={tokenBalance}\n          tokenBalanceUsd={tokenBalanceUsd}\n          tokenName={lpName} pid={pid}\n          depositFeeBP={depositFeeBP}\n      />\n    ) : (\n      <span data-tip data-for='happyFace'>\n\n      <Flex justifyContent=\"end\">\n        <StyledBtn\n        disabled={requestedApproval || labo.isLocked.unlockWalletButton} \n        onClick={handleApprove}>\n          {TranslateString(999, 'Enable')}\n        </StyledBtn>\n        \n      </Flex>\n      </span>\n    )\n  }\n\n  return (\n    <Action  >\n\n      <HarvestAction earnings={earnings} pid={pid} />\n\n\n      {!account ? <UnlockButton justifyContent=\"end\"\n      style={{\n        border: '1px',\n        justifyContent: \"center\",\n        color: '#8299dd !important',\n        borderRadius: '10px',\n        fontSize: '15px',\n        fontWeight: '200',\n        width: '35%',\n        display: 'inline-flex',\n        height: '44px',\n        padding: '20px',\n        minHeight: '21px',\n        maxHeight: '33px',\n        marginTop: '12px',\n      }} \n/> : renderApprovalOrStakeButton()}\n\n    </Action>\n  )\n}\n\nexport default CardActions\n"]},"metadata":{},"sourceType":"module"}