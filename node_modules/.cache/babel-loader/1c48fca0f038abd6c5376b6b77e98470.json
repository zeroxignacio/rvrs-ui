{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ProjectsGroupsModel = exports.ProjectsGroups = void 0;\n\nvar core_1 = require(\"../core\");\n\nvar ProjectsGroups = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(ProjectsGroups, _core_1$CrowdinApi);\n\n  var _super = _createSuper(ProjectsGroups);\n\n  function ProjectsGroups() {\n    _classCallCheck(this, ProjectsGroups);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ProjectsGroups, [{\n    key: \"listGroups\",\n    value:\n    /**\n     * @param parentId parent group identifier\n     * @param offset starting offset in the collection (default 0)\n     * @param userId get user own projects\n     * @param limit maximum number of items to retrieve (default 25)\n     */\n    function listGroups(parentId, offset, userId, limit) {\n      var url = \"\".concat(this.url, \"/groups\");\n      url = this.addQueryParam(url, 'parentId', parentId);\n      url = this.addQueryParam(url, 'userId', userId);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param request request body\n     */\n\n  }, {\n    key: \"addGroup\",\n    value: function addGroup(request) {\n      var url = \"\".concat(this.url, \"/groups\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param group group identifier\n     */\n\n  }, {\n    key: \"getGroup\",\n    value: function getGroup(groupId) {\n      var url = \"\".concat(this.url, \"/groups/\").concat(groupId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     */\n\n  }, {\n    key: \"deleteGroup\",\n    value: function deleteGroup(groupId) {\n      var url = \"\".concat(this.url, \"/groups/\").concat(groupId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"editGroup\",\n    value: function editGroup(groupId, request) {\n      var url = \"\".concat(this.url, \"/groups/\").concat(groupId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     * @param hasManagerAccess projects with manager access (default 0)\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n\n  }, {\n    key: \"listProjects\",\n    value: function listProjects(groupId, hasManagerAccess, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects\");\n      url = this.addQueryParam(url, 'groupId', groupId);\n      url = this.addQueryParam(url, 'hasManagerAccess', hasManagerAccess);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param request request body\n     */\n\n  }, {\n    key: \"addProject\",\n    value: function addProject(request) {\n      var url = \"\".concat(this.url, \"/projects\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     */\n\n  }, {\n    key: \"getProject\",\n    value: function getProject(projectId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     */\n\n  }, {\n    key: \"deleteProject\",\n    value: function deleteProject(projectId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"editProject\",\n    value: function editProject(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n  }]);\n\n  return ProjectsGroups;\n}(core_1.CrowdinApi);\n\nexports.ProjectsGroups = ProjectsGroups;\nvar ProjectsGroupsModel;\n\n(function (ProjectsGroupsModel) {\n  var Type;\n\n  (function (Type) {\n    Type[Type[\"FILES_BASED\"] = 0] = \"FILES_BASED\";\n    Type[Type[\"STRINGS_BASED\"] = 1] = \"STRINGS_BASED\";\n  })(Type = ProjectsGroupsModel.Type || (ProjectsGroupsModel.Type = {}));\n\n  var JoinPolicy;\n\n  (function (JoinPolicy) {\n    JoinPolicy[\"OPEN\"] = \"open\";\n    JoinPolicy[\"PRIVATE\"] = \"private\";\n  })(JoinPolicy = ProjectsGroupsModel.JoinPolicy || (ProjectsGroupsModel.JoinPolicy = {}));\n\n  var LanguageAccessPolicy;\n\n  (function (LanguageAccessPolicy) {\n    LanguageAccessPolicy[\"OPEN\"] = \"open\";\n    LanguageAccessPolicy[\"MODERATE\"] = \"moderate\";\n  })(LanguageAccessPolicy = ProjectsGroupsModel.LanguageAccessPolicy || (ProjectsGroupsModel.LanguageAccessPolicy = {}));\n})(ProjectsGroupsModel = exports.ProjectsGroupsModel || (exports.ProjectsGroupsModel = {}));","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/@crowdin/crowdin-api-client/out/projectsGroups/index.js"],"names":["Object","defineProperty","exports","value","ProjectsGroupsModel","ProjectsGroups","core_1","require","parentId","offset","userId","limit","url","addQueryParam","getList","request","post","defaultConfig","groupId","get","delete","patch","hasManagerAccess","projectId","CrowdinApi","Type","JoinPolicy","LanguageAccessPolicy"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.ProjectsGroupsModel = exports.ProjectsGroups = void 0;\nconst core_1 = require(\"../core\");\nclass ProjectsGroups extends core_1.CrowdinApi {\n    /**\n     * @param parentId parent group identifier\n     * @param offset starting offset in the collection (default 0)\n     * @param userId get user own projects\n     * @param limit maximum number of items to retrieve (default 25)\n     */\n    listGroups(parentId, offset, userId, limit) {\n        let url = `${this.url}/groups`;\n        url = this.addQueryParam(url, 'parentId', parentId);\n        url = this.addQueryParam(url, 'userId', userId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param request request body\n     */\n    addGroup(request) {\n        const url = `${this.url}/groups`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param group group identifier\n     */\n    getGroup(groupId) {\n        const url = `${this.url}/groups/${groupId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     */\n    deleteGroup(groupId) {\n        const url = `${this.url}/groups/${groupId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     * @param request request body\n     */\n    editGroup(groupId, request) {\n        const url = `${this.url}/groups/${groupId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param groupId group identifier\n     * @param hasManagerAccess projects with manager access (default 0)\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listProjects(groupId, hasManagerAccess, limit, offset) {\n        let url = `${this.url}/projects`;\n        url = this.addQueryParam(url, 'groupId', groupId);\n        url = this.addQueryParam(url, 'hasManagerAccess', hasManagerAccess);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param request request body\n     */\n    addProject(request) {\n        const url = `${this.url}/projects`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     */\n    getProject(projectId) {\n        const url = `${this.url}/projects/${projectId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     */\n    deleteProject(projectId) {\n        const url = `${this.url}/projects/${projectId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    editProject(projectId, request) {\n        const url = `${this.url}/projects/${projectId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n}\nexports.ProjectsGroups = ProjectsGroups;\nvar ProjectsGroupsModel;\n(function (ProjectsGroupsModel) {\n    let Type;\n    (function (Type) {\n        Type[Type[\"FILES_BASED\"] = 0] = \"FILES_BASED\";\n        Type[Type[\"STRINGS_BASED\"] = 1] = \"STRINGS_BASED\";\n    })(Type = ProjectsGroupsModel.Type || (ProjectsGroupsModel.Type = {}));\n    let JoinPolicy;\n    (function (JoinPolicy) {\n        JoinPolicy[\"OPEN\"] = \"open\";\n        JoinPolicy[\"PRIVATE\"] = \"private\";\n    })(JoinPolicy = ProjectsGroupsModel.JoinPolicy || (ProjectsGroupsModel.JoinPolicy = {}));\n    let LanguageAccessPolicy;\n    (function (LanguageAccessPolicy) {\n        LanguageAccessPolicy[\"OPEN\"] = \"open\";\n        LanguageAccessPolicy[\"MODERATE\"] = \"moderate\";\n    })(LanguageAccessPolicy = ProjectsGroupsModel.LanguageAccessPolicy || (ProjectsGroupsModel.LanguageAccessPolicy = {}));\n})(ProjectsGroupsModel = exports.ProjectsGroupsModel || (exports.ProjectsGroupsModel = {}));\n"]},"metadata":{},"sourceType":"script"}