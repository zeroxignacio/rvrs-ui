{"ast":null,"code":"var _jsxFileName = \"/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Farms/components/FarmCard/HarvestAction.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { Flex, Heading } from '@pancakeswap-libs/uikit';\nimport useI18n from 'hooks/useI18n';\nimport labo from 'config/constants/labo';\nimport { useHarvest } from 'hooks/useHarvest';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport styled from 'styled-components';\nimport { FaHandHoldingUsd } from 'react-icons/fa';\nimport useStake from '../../../../hooks/useStake';\nimport { usePriceCakeBusd } from \"../../../../state/hooks\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst USDStaked = styled.text`\n  font-size: 15px;\n  align-items: center;\n  color: #8E8E8E;\n  display: flex;\n  margin-top: 3px;\n  justify-content: flex-start;\n`;\n_c = USDStaked;\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n`;\n_c2 = BalanceAndCompound;\nconst StyledBtn = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: #2E3543 !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #2E3543 !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 400;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 120px;\n  padding: 20px;\n  box-shadow: 0px 0px 10px #ffff, 0 0px 0px 0 #fff;\n\n  `;\n_c3 = StyledBtn;\nconst LPStaked = styled.text`\nfont-size: 12px;\nfont-weigth: 30;\nalign-items: center;\ncolor: ${({\n  theme\n}) => theme.colors.textSubtle};\nmargin-top: 3px;\njustify-content: flex-start;\n`;\n_c4 = LPStaked;\n\nconst HarvestAction = ({\n  earnings,\n  pid\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const [pendingTx, setPendingTx] = useState(false);\n  const {\n    onReward\n  } = useHarvest(pid);\n  const {\n    onStake\n  } = useStake(pid);\n  const cakePrice = usePriceCakeBusd();\n  const rawEarningsBalance = getBalanceNumber(earnings);\n  const displayBalance = rawEarningsBalance.toLocaleString();\n  const rawEarningsUsdBalance = getBalanceNumber(earnings.times(cakePrice));\n  const displayBalanceUsd = rawEarningsUsdBalance.toLocaleString('en-us', {\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2\n  });\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    mb: \"10px\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      color: rawEarningsBalance === 0 ? 'textDisabled' : 'text',\n      children: [/*#__PURE__*/_jsxDEV(LPStaked, {\n        style: {\n          'color': 'white',\n          'fontSize': '16px'\n        },\n        children: displayBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this), earnings.gt(0) && /*#__PURE__*/_jsxDEV(USDStaked, {\n        children: [\"~$\", displayBalanceUsd]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 30\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(BalanceAndCompound, {\n      children: [pid === labo.pids.pidLabo ? /*#__PURE__*/_jsxDEV(StyledBtn, {\n        disabled: rawEarningsBalance === 0 || pendingTx,\n        onClick: async () => {\n          setPendingTx(true);\n          await onStake(rawEarningsBalance.toString());\n          setPendingTx(false);\n        },\n        style: {\n          'borderRadius': '5px',\n          'height': '40px',\n          'width': '103px',\n          'marginRight': '1px'\n        },\n        children: TranslateString(999, 'Compound')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(StyledBtn, {\n        disabled: rawEarningsBalance === 0 || pendingTx,\n        onClick: async () => {\n          setPendingTx(true);\n          await onReward();\n          setPendingTx(false);\n        },\n        style: {\n          'color': 'white'\n        },\n        children: [\"Claim  \\xA0\", /*#__PURE__*/_jsxDEV(FaHandHoldingUsd, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 51\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n};\n\n_s(HarvestAction, \"k1yYRsOfuA5Fi6KIkn2dLEFJQU4=\", false, function () {\n  return [useI18n, useHarvest, useStake, usePriceCakeBusd];\n});\n\n_c5 = HarvestAction;\nexport default HarvestAction;\n\nvar _c, _c2, _c3, _c4, _c5;\n\n$RefreshReg$(_c, \"USDStaked\");\n$RefreshReg$(_c2, \"BalanceAndCompound\");\n$RefreshReg$(_c3, \"StyledBtn\");\n$RefreshReg$(_c4, \"LPStaked\");\n$RefreshReg$(_c5, \"HarvestAction\");","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Farms/components/FarmCard/HarvestAction.tsx"],"names":["React","useState","Flex","Heading","useI18n","labo","useHarvest","getBalanceNumber","styled","FaHandHoldingUsd","useStake","usePriceCakeBusd","USDStaked","text","BalanceAndCompound","div","StyledBtn","button","LPStaked","theme","colors","textSubtle","HarvestAction","earnings","pid","TranslateString","pendingTx","setPendingTx","onReward","onStake","cakePrice","rawEarningsBalance","displayBalance","toLocaleString","rawEarningsUsdBalance","times","displayBalanceUsd","maximumFractionDigits","minimumFractionDigits","gt","pids","pidLabo","toString"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\nimport BigNumber from 'bignumber.js'\nimport {  Flex, Heading } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport labo from 'config/constants/labo'\nimport { useHarvest } from 'hooks/useHarvest'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport styled from 'styled-components'\nimport { FaHandHoldingUsd} from 'react-icons/fa';\nimport useStake from '../../../../hooks/useStake'\nimport {usePriceCakeBusd} from \"../../../../state/hooks\";\n\n\n\ninterface FarmCardActionsProps {\n  earnings?: BigNumber\n  pid?: number\n}\n\nconst USDStaked = styled.text`\n  font-size: 15px;\n  align-items: center;\n  color: #8E8E8E;\n  display: flex;\n  margin-top: 3px;\n  justify-content: flex-start;\n`\n\nconst BalanceAndCompound = styled.div`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex-direction: column;\n`\n\nconst StyledBtn = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: #2E3543 !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #2E3543 !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 400;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 120px;\n  padding: 20px;\n  box-shadow: 0px 0px 10px #ffff, 0 0px 0px 0 #fff;\n\n  `\n\n  const LPStaked = styled.text`\nfont-size: 12px;\nfont-weigth: 30;\nalign-items: center;\ncolor: ${({ theme }) => theme.colors.textSubtle};\nmargin-top: 3px;\njustify-content: flex-start;\n`\n\nconst HarvestAction: React.FC<FarmCardActionsProps> = ({ earnings, pid }) => {\n  const TranslateString = useI18n()\n  const [pendingTx, setPendingTx] = useState(false)\n  const { onReward } = useHarvest(pid)\n  const { onStake } = useStake(pid)\n  const cakePrice = usePriceCakeBusd()\n\n  const rawEarningsBalance = getBalanceNumber(earnings)\n  const displayBalance = rawEarningsBalance.toLocaleString()\n  const rawEarningsUsdBalance = getBalanceNumber(earnings.times(cakePrice), )\n  const displayBalanceUsd = rawEarningsUsdBalance.toLocaleString('en-us',{ maximumFractionDigits: 2, minimumFractionDigits: 2 })\n\n  return (\n    <Flex mb='10px' justifyContent='space-between' alignItems='center'>\n\n      <Heading color={rawEarningsBalance === 0 ? 'textDisabled' : 'text'}>\n          <LPStaked style={{'color': 'white', 'fontSize': '16px'}}>\n              {displayBalance}\n          </LPStaked>\n          {earnings.gt(0) && <USDStaked>~${displayBalanceUsd}</USDStaked>}\n      </Heading>\n\n      <BalanceAndCompound>\n        {pid === labo.pids.pidLabo ?\n          <StyledBtn\n            disabled={rawEarningsBalance === 0 || pendingTx}\n\n            onClick={async () => {\n              setPendingTx(true)\n              await onStake(rawEarningsBalance.toString())\n              setPendingTx(false)\n            }}\n            style={{\n              'borderRadius': '5px',\n              'height': '40px',\n              'width': '103px',\n              'marginRight': '1px'\n            }}\n          >\n            {TranslateString(999, 'Compound')}\n          </StyledBtn>\n          : null}\n\n        <StyledBtn\n          disabled={rawEarningsBalance === 0 || pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onReward()\n            setPendingTx(false)}}\n          style={{'color': 'white'}}>Claim  &nbsp;<FaHandHoldingUsd/>\n        </StyledBtn>\n\n      </BalanceAndCompound>\n    </Flex>\n  )\n}\n\nexport default HarvestAction\n"]},"metadata":{},"sourceType":"module"}