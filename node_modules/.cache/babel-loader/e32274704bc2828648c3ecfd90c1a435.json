{"ast":null,"code":"var _jsxFileName = \"/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Farms/components/FarmCard/StakeAction.tsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { Flex, Heading, useModal } from '@pancakeswap-libs/uikit';\nimport useI18n from 'hooks/useI18n';\nimport useStake from 'hooks/useStake';\nimport useUnstake from 'hooks/useUnstake';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport { FaArrowDown, FaArrowUp } from 'react-icons/fa';\nimport StyledBTN from 'components/layout/StyledBTN';\nimport DepositModal from '../DepositModal';\nimport WithdrawModal from '../WithdrawModal';\nimport './index.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`;\n_c = IconButtonWrapper;\nconst Staked = styled.div`\n  font-size: 8px;\n  color: ${({\n  theme\n}) => theme.colors.textSubtle};\n`;\nconst SumMinus = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #ffff !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 400;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 50px;\n  padding: 20px;\n  box-shadow: 10px #fff;\n  `;\n_c2 = SumMinus;\n\nconst StakeAction = ({\n  stakedBalance,\n  tokenBalance,\n  stakedBalanceUsd,\n  tokenBalanceUsd,\n  tokenName,\n  pid,\n  depositFeeBP\n}) => {\n  _s();\n\n  const TranslateString = useI18n();\n  const {\n    onStake\n  } = useStake(pid);\n  const {\n    onUnstake\n  } = useUnstake(pid);\n  const rawStakedBalance = getBalanceNumber(stakedBalance, 18);\n  const displayBalance = rawStakedBalance.toLocaleString();\n  const rawStakedBalanceUsd = getBalanceNumber(stakedBalanceUsd, 0);\n  const displayBalanceUsd = rawStakedBalanceUsd.toLocaleString('en-us', {\n    maximumFractionDigits: 2,\n    minimumFractionDigits: 2\n  });\n  const tokenBalanceUsdNum = getBalanceNumber(tokenBalanceUsd);\n  const [onPresentDeposit] = useModal( /*#__PURE__*/_jsxDEV(DepositModal, {\n    max: tokenBalance,\n    valueUsd: tokenBalanceUsdNum,\n    onConfirm: onStake,\n    tokenName: tokenName,\n    depositFeeBP: depositFeeBP\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 39\n  }, this));\n  const [onPresentWithdraw] = useModal( /*#__PURE__*/_jsxDEV(WithdrawModal, {\n    max: stakedBalance,\n    valueUsd: rawStakedBalanceUsd,\n    onConfirm: onUnstake,\n    tokenName: tokenName\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this));\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? /*#__PURE__*/_jsxDEV(StyledBTN, {\n      onClick: onPresentDeposit,\n      children: [\" \", TranslateString(999, 'Stake ')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this) : /*#__PURE__*/_jsxDEV(IconButtonWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(SumMinus, {\n        onClick: onPresentWithdraw,\n        style: {\n          marginRight: '5px',\n          marginTop: '0px',\n          marginLeft: '5px'\n        },\n        children: /*#__PURE__*/_jsxDEV(FaArrowUp, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(SumMinus, {\n        style: {\n          marginRight: '0px',\n          marginTop: '0px',\n          marginLeft: '0px'\n        },\n        onClick: onPresentDeposit,\n        children: /*#__PURE__*/_jsxDEV(FaArrowDown, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 39\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this);\n  };\n\n  const USDStaked = styled.text`\n  font-size: 15px;\n  align-items: center;\n  color: #8E8E8E;\n  display: flex;\n  margin-top: 3px;\n  justify-content: flex-start;\n`;\n  const LPStaked = styled.text`\nfont-size: 12px;\nfont-weigth: 30;\nalign-items: center;\ncolor: ${({\n    theme\n  }) => theme.colors.textSubtle};\nmargin-top: 3px;\njustify-content: flex-start;\n`;\n  return /*#__PURE__*/_jsxDEV(Flex, {\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    children: [/*#__PURE__*/_jsxDEV(Heading, {\n      color: rawStakedBalance === 0 ? 'textDisabled' : 'text',\n      children: [/*#__PURE__*/_jsxDEV(LPStaked, {\n        style: {\n          'color': 'white',\n          'fontSize': '16px'\n        },\n        children: displayBalance\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), stakedBalance.gt(0) && /*#__PURE__*/_jsxDEV(USDStaked, {\n        children: [\"~$\", displayBalanceUsd]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), renderStakingButtons()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 136,\n    columnNumber: 5\n  }, this);\n};\n\n_s(StakeAction, \"WxmC5ksX9Rezbx1Edxpgm7HpZZE=\", false, function () {\n  return [useI18n, useStake, useUnstake, useModal, useModal];\n});\n\n_c3 = StakeAction;\nexport default StakeAction;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"IconButtonWrapper\");\n$RefreshReg$(_c2, \"SumMinus\");\n$RefreshReg$(_c3, \"StakeAction\");","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Farms/components/FarmCard/StakeAction.tsx"],"names":["React","styled","Flex","Heading","useModal","useI18n","useStake","useUnstake","getBalanceNumber","FaArrowDown","FaArrowUp","StyledBTN","DepositModal","WithdrawModal","IconButtonWrapper","div","Staked","theme","colors","textSubtle","SumMinus","button","StakeAction","stakedBalance","tokenBalance","stakedBalanceUsd","tokenBalanceUsd","tokenName","pid","depositFeeBP","TranslateString","onStake","onUnstake","rawStakedBalance","displayBalance","toLocaleString","rawStakedBalanceUsd","displayBalanceUsd","maximumFractionDigits","minimumFractionDigits","tokenBalanceUsdNum","onPresentDeposit","onPresentWithdraw","renderStakingButtons","marginRight","marginTop","marginLeft","USDStaked","text","LPStaked","gt"],"mappings":"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","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { Button, Flex, Heading, IconButton, AddIcon, MinusIcon, useModal } from '@pancakeswap-libs/uikit'\nimport useI18n from 'hooks/useI18n'\nimport useStake from 'hooks/useStake'\nimport useUnstake from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { FaArrowDown, FaArrowUp, FaClock, FaFire, FaFlask, FaGhost, FaInfinity, FaLock, FaMountain, FaRegHandPointDown, FaRegWindowRestore, FaSeedling, FaTractor, FaTruck, } from 'react-icons/fa'\nimport StyledBTN from 'components/layout/StyledBTN'\nimport DepositModal from '../DepositModal'\nimport WithdrawModal from '../WithdrawModal'\nimport './index.css'\n\n\ninterface FarmCardActionsProps {\n  stakedBalance?: BigNumber\n  tokenBalance?: BigNumber\n  stakedBalanceUsd?: BigNumber\n  tokenBalanceUsd?: BigNumber\n  tokenName?: string\n  pid?: number\n  depositFeeBP?: number\n}\n\nconst IconButtonWrapper = styled.div`\n  display: flex;\n  svg {\n    width: 20px;\n  }\n`\n\nconst Staked = styled.div`\n  font-size: 8px;\n  color: ${({ theme }) => theme.colors.textSubtle};\n`\n\n  const SumMinus = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #ffff !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 400;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 50px;\n  padding: 20px;\n  box-shadow: 10px #fff;\n  `\n\nconst StakeAction: React.FC<FarmCardActionsProps> = (\n    { stakedBalance,\n      tokenBalance,\n      stakedBalanceUsd,\n      tokenBalanceUsd,\n      tokenName,\n      pid,\n      depositFeeBP\n    }) => {\n  const TranslateString = useI18n()\n  const { onStake } = useStake(pid)\n  const { onUnstake } = useUnstake(pid)\n\n  const rawStakedBalance = getBalanceNumber(stakedBalance, 18)\n  const displayBalance = rawStakedBalance.toLocaleString()\n  const rawStakedBalanceUsd = getBalanceNumber(stakedBalanceUsd, 0)\n  const displayBalanceUsd = rawStakedBalanceUsd.toLocaleString('en-us', { maximumFractionDigits: 2, minimumFractionDigits: 2 })\n\n  const tokenBalanceUsdNum = getBalanceNumber(tokenBalanceUsd)\n\n  const [onPresentDeposit] = useModal(<DepositModal\n      max={tokenBalance}\n      valueUsd={tokenBalanceUsdNum}\n      onConfirm={onStake}\n      tokenName={tokenName}\n      depositFeeBP={depositFeeBP} />)\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal\n        max={stakedBalance}\n        valueUsd={rawStakedBalanceUsd}\n        onConfirm={onUnstake}\n        tokenName={tokenName} />,\n  )\n\n  const renderStakingButtons = () => {\n    return rawStakedBalance === 0 ? (\n      <StyledBTN onClick={onPresentDeposit} > {TranslateString(999, 'Stake ')}</StyledBTN>\n    ) : (\n      <IconButtonWrapper>\n        \n        <SumMinus \n        onClick={onPresentWithdraw} \n        style={{\n          marginRight: '5px',\n          marginTop: '0px',\n          marginLeft: '5px',\n        }}><FaArrowUp/>\n        </SumMinus>\n\n        <SumMinus style={{\n          marginRight: '0px',\n          marginTop: '0px',\n          marginLeft: '0px',\n        }} onClick={onPresentDeposit}><FaArrowDown/>        \n        </SumMinus>\n      </IconButtonWrapper>\n    )\n  }\n\n  const USDStaked = styled.text`\n  font-size: 15px;\n  align-items: center;\n  color: #8E8E8E;\n  display: flex;\n  margin-top: 3px;\n  justify-content: flex-start;\n`\n\nconst LPStaked = styled.text`\nfont-size: 12px;\nfont-weigth: 30;\nalign-items: center;\ncolor: ${({ theme }) => theme.colors.textSubtle};\nmargin-top: 3px;\njustify-content: flex-start;\n`\n\n  return (\n    <Flex justifyContent=\"space-between\" alignItems=\"center\">\n      \n      <Heading color={rawStakedBalance === 0 ? 'textDisabled' : 'text'}>\n\n        <LPStaked style={{'color': 'white', 'fontSize': '16px'}}  >\n          {displayBalance}\n        </LPStaked>\n\n        {stakedBalance.gt(0) && <USDStaked>~${displayBalanceUsd}</USDStaked>}\n\n      </Heading>\n      {renderStakingButtons()}\n    </Flex>\n  )\n}\n\nexport default StakeAction\n\n"]},"metadata":{},"sourceType":"module"}