{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Labels = void 0;\n\nvar core_1 = require(\"../core\");\n\nvar Labels = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(Labels, _core_1$CrowdinApi);\n\n  var _super = _createSuper(Labels);\n\n  function Labels() {\n    _classCallCheck(this, Labels);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Labels, [{\n    key: \"listLabels\",\n    value:\n    /**\n     * @param projectId project identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    function listLabels(projectId, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/labels\");\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"addLabel\",\n    value: function addLabel(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/labels\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     */\n\n  }, {\n    key: \"getLabel\",\n    value: function getLabel(projectId, labelId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/labels/\").concat(labelId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     */\n\n  }, {\n    key: \"deleteLabel\",\n    value: function deleteLabel(projectId, labelId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/labels/\").concat(labelId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"editLabel\",\n    value: function editLabel(projectId, labelId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/labels/\").concat(labelId);\n      return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"assignLabelToString\",\n    value: function assignLabelToString(projectId, labelId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/labels/\").concat(labelId, \"/strings\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     * @param stringIds string identifiers\n     */\n\n  }, {\n    key: \"unassignLabelFromString\",\n    value: function unassignLabelFromString(projectId, labelId, stringIds) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/labels/\").concat(labelId, \"/strings\");\n      url = this.addQueryParam(url, 'stringIds', stringIds);\n      return this.delete(url, this.defaultConfig());\n    }\n  }]);\n\n  return Labels;\n}(core_1.CrowdinApi);\n\nexports.Labels = Labels;","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/@crowdin/crowdin-api-client/out/labels/index.js"],"names":["Object","defineProperty","exports","value","Labels","core_1","require","projectId","limit","offset","url","getList","request","post","defaultConfig","labelId","get","delete","patch","stringIds","addQueryParam","CrowdinApi"],"mappings":"AAAA;;;;;;;;;;AACAA,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAAEC,EAAAA,KAAK,EAAE;AAAT,CAA7C;AACAD,OAAO,CAACE,MAAR,GAAiB,KAAK,CAAtB;;AACA,IAAMC,MAAM,GAAGC,OAAO,CAAC,SAAD,CAAtB;;IACMF,M;;;;;;;;;;;;;;AACF;AACJ;AACA;AACA;AACA;AACI,wBAAWG,SAAX,EAAsBC,KAAtB,EAA6BC,MAA7B,EAAqC;AACjC,UAAMC,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,YAAT;AACA,aAAO,KAAKI,OAAL,CAAaD,GAAb,EAAkBF,KAAlB,EAAyBC,MAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,kBAASF,SAAT,EAAoBK,OAApB,EAA6B;AACzB,UAAMF,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,YAAT;AACA,aAAO,KAAKM,IAAL,CAAUH,GAAV,EAAeE,OAAf,EAAwB,KAAKE,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,kBAASP,SAAT,EAAoBQ,OAApB,EAA6B;AACzB,UAAML,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,qBAA+CQ,OAA/C,CAAT;AACA,aAAO,KAAKC,GAAL,CAASN,GAAT,EAAc,KAAKI,aAAL,EAAd,CAAP;AACH;AACD;AACJ;AACA;AACA;;;;WACI,qBAAYP,SAAZ,EAAuBQ,OAAvB,EAAgC;AAC5B,UAAML,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,qBAA+CQ,OAA/C,CAAT;AACA,aAAO,KAAKE,MAAL,CAAYP,GAAZ,EAAiB,KAAKI,aAAL,EAAjB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,mBAAUP,SAAV,EAAqBQ,OAArB,EAA8BH,OAA9B,EAAuC;AACnC,UAAMF,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,qBAA+CQ,OAA/C,CAAT;AACA,aAAO,KAAKG,KAAL,CAAWR,GAAX,EAAgBE,OAAhB,EAAyB,KAAKE,aAAL,EAAzB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,6BAAoBP,SAApB,EAA+BQ,OAA/B,EAAwCH,OAAxC,EAAiD;AAC7C,UAAMF,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,qBAA+CQ,OAA/C,aAAT;AACA,aAAO,KAAKF,IAAL,CAAUH,GAAV,EAAeE,OAAf,EAAwB,KAAKE,aAAL,EAAxB,CAAP;AACH;AACD;AACJ;AACA;AACA;AACA;;;;WACI,iCAAwBP,SAAxB,EAAmCQ,OAAnC,EAA4CI,SAA5C,EAAuD;AACnD,UAAIT,GAAG,aAAM,KAAKA,GAAX,uBAA2BH,SAA3B,qBAA+CQ,OAA/C,aAAP;AACAL,MAAAA,GAAG,GAAG,KAAKU,aAAL,CAAmBV,GAAnB,EAAwB,WAAxB,EAAqCS,SAArC,CAAN;AACA,aAAO,KAAKF,MAAL,CAAYP,GAAZ,EAAiB,KAAKI,aAAL,EAAjB,CAAP;AACH;;;;EA7DgBT,MAAM,CAACgB,U;;AA+D5BnB,OAAO,CAACE,MAAR,GAAiBA,MAAjB","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.Labels = void 0;\nconst core_1 = require(\"../core\");\nclass Labels extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listLabels(projectId, limit, offset) {\n        const url = `${this.url}/projects/${projectId}/labels`;\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    addLabel(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/labels`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     */\n    getLabel(projectId, labelId) {\n        const url = `${this.url}/projects/${projectId}/labels/${labelId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     */\n    deleteLabel(projectId, labelId) {\n        const url = `${this.url}/projects/${projectId}/labels/${labelId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     * @param request request body\n     */\n    editLabel(projectId, labelId, request) {\n        const url = `${this.url}/projects/${projectId}/labels/${labelId}`;\n        return this.patch(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     * @param request request body\n     */\n    assignLabelToString(projectId, labelId, request) {\n        const url = `${this.url}/projects/${projectId}/labels/${labelId}/strings`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param labelId label identifier\n     * @param stringIds string identifiers\n     */\n    unassignLabelFromString(projectId, labelId, stringIds) {\n        let url = `${this.url}/projects/${projectId}/labels/${labelId}/strings`;\n        url = this.addQueryParam(url, 'stringIds', stringIds);\n        return this.delete(url, this.defaultConfig());\n    }\n}\nexports.Labels = Labels;\n"]},"metadata":{},"sourceType":"script"}