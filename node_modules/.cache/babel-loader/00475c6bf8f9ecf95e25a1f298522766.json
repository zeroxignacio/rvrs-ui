{"ast":null,"code":"import _objectSpread from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _regeneratorRuntime from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";import _asyncToGenerator from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";import _slicedToArray from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import _taggedTemplateLiteral from\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";var _templateObject;import React,{useEffect,useCallback,useState}from'react';import{Route,useRouteMatch}from'react-router-dom';import{useDispatch}from'react-redux';import styled from'styled-components';import BigNumber from'bignumber.js';import{useWallet}from'@binance-chain/bsc-use-wallet';import{BLOCKS_PER_YEAR}from'config';import FarmsFlex from'components/layout/FarmsFlex';import Page from'components/layout/Page';import{getTotalValueFromQuoteTokens,useFarms,usePriceBnbBusd,usePriceCakeBusd,usePrices}from'state/hooks';import useRefresh from'hooks/useRefresh';import{fetchFarmUserDataAsync}from'state/actions';import useI18n from'hooks/useI18n';import PoolsDashboard1 from'views/PoolsDashboard1';import FarmCard from'./components/FarmCard/FarmCard';import FarmTabButtons from'./components/FarmTabButtons';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Flexed2=styled.div(_templateObject||(_templateObject=_taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: center;\\n  flex-wrap: wrap;\\n  & > * {\\n\\n    width: 100%;\\n    margin: 0 6px;\\n    margin-bottom: 18px;\\n  }\\n\"])));var Farms=function Farms(farmsProps){var _useRouteMatch=useRouteMatch(),path=_useRouteMatch.path;var TranslateString=useI18n();var farms=useFarms();var prices=usePrices();var farmsLP=useFarms();var cakePrice=usePriceCakeBusd();var bnbPrice=usePriceBnbBusd();var _useWallet=useWallet(),account=_useWallet.account,ethereum=_useWallet.ethereum;var tokenMode=farmsProps.tokenMode;var _useState=useState(true),_useState2=_slicedToArray(_useState,2),modalOpen=_useState2[0],setModalOpen=_useState2[1];var handleModal=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:setModalOpen(!modalOpen);case 1:case\"end\":return _context.stop();}}},_callee);}));return function handleModal(){return _ref.apply(this,arguments);};}();// if (process.env.REACT_APP_DEBUG === \"true\") console.log(cakePrice, \"testingg cakePrice\");\nvar dispatch=useDispatch();var _useRefresh=useRefresh(),fastRefresh=_useRefresh.fastRefresh;useEffect(function(){if(account){dispatch(fetchFarmUserDataAsync(account));}},[account,dispatch,fastRefresh]);var _useState3=useState(false),_useState4=_slicedToArray(_useState3,2),stakedOnly=_useState4[0],setStakedOnly=_useState4[1];var activeFarms=farmsLP.filter(function(farm){return!!farm.isTokenOnly===!!tokenMode&&farm.multiplier!=='0X'&&farm.pid>0;});var inactiveFarms=farmsLP.filter(function(farm){return!!farm.isTokenOnly===!!tokenMode&&farm.multiplier==='0X'&&farm.pid>0;});var stakedOnlyFarms=activeFarms.filter(function(farm){return farm.userData&&new BigNumber(farm.userData.stakedBalance).isGreaterThan(0);});var vikingPerBlock=0;// if (process.env.REACT_APP_DEBUG === \"true\"){ console.log(farms[0], 'testing viking per block') }\nif(farms&&farms[0]&&farms[0].vikingPerBlock){vikingPerBlock=new BigNumber(farms[0].vikingPerBlock).div(new BigNumber(10).pow(18)).toNumber();}// /!\\ This function will be removed soon\n// This function compute the APY for each farm and will be replaced when we have a reliable API\n// to retrieve assets prices against USD\nvar farmsList=useCallback(function(farmsToDisplay,removed){// const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\nvar farmsToDisplayWithAPY=farmsToDisplay.map(function(farm){// if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n//   return farm\n// }\nvar cakeRewardPerBlock=new BigNumber(farm.vikingPerBlock||1).times(new BigNumber(farm.poolWeight)).div(new BigNumber(10).pow(18));var cakeRewardPerYear=cakeRewardPerBlock.times(BLOCKS_PER_YEAR).times(2);var apy=new BigNumber(cakePrice).times(cakeRewardPerYear);var totalValue=getTotalValueFromQuoteTokens(farm.quoteTokenAmount,farm.quoteTokenSymbol,prices);if(totalValue.comparedTo(0)>0){apy=apy.div(totalValue);}return _objectSpread(_objectSpread({},farm),{},{apy:apy});});return farmsToDisplayWithAPY.map(function(farm){return/*#__PURE__*/_jsx(FarmCard,{farm:farm,removed:removed,bnbPrice:bnbPrice,cakePrice:cakePrice,ethereum:ethereum,account:account},farm.pid);});},[prices,cakePrice,bnbPrice,account,ethereum]);return/*#__PURE__*/_jsxs(Page,{children:[/*#__PURE__*/_jsx(Flexed2,{children:/*#__PURE__*/_jsx(PoolsDashboard1,{})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(FarmsFlex,{children:[/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path),children:stakedOnly?farmsList(stakedOnlyFarms,false):farmsList(activeFarms,false)}),/*#__PURE__*/_jsx(Route,{exact:true,path:\"\".concat(path,\"/history\"),children:farmsList(inactiveFarms,true)})]}),/*#__PURE__*/_jsx(FarmTabButtons,{stakedOnly:stakedOnly,setStakedOnly:setStakedOnly,tokenMode:tokenMode})]})]});};export default Farms;","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Farms/Farms.tsx"],"names":["React","useEffect","useCallback","useState","Route","useRouteMatch","useDispatch","styled","BigNumber","useWallet","BLOCKS_PER_YEAR","FarmsFlex","Page","getTotalValueFromQuoteTokens","useFarms","usePriceBnbBusd","usePriceCakeBusd","usePrices","useRefresh","fetchFarmUserDataAsync","useI18n","PoolsDashboard1","FarmCard","FarmTabButtons","Flexed2","div","Farms","farmsProps","path","TranslateString","farms","prices","farmsLP","cakePrice","bnbPrice","account","ethereum","tokenMode","modalOpen","setModalOpen","handleModal","dispatch","fastRefresh","stakedOnly","setStakedOnly","activeFarms","filter","farm","isTokenOnly","multiplier","pid","inactiveFarms","stakedOnlyFarms","userData","stakedBalance","isGreaterThan","vikingPerBlock","pow","toNumber","farmsList","farmsToDisplay","removed","farmsToDisplayWithAPY","map","cakeRewardPerBlock","times","poolWeight","cakeRewardPerYear","apy","totalValue","quoteTokenAmount","quoteTokenSymbol","comparedTo"],"mappings":"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","sourcesContent":["import React, { useEffect, useCallback, useState } from 'react'\nimport { Route, useRouteMatch } from 'react-router-dom'\nimport { useDispatch } from 'react-redux'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { provider } from 'web3-core'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport FarmsFlex from 'components/layout/FarmsFlex'\nimport Page from 'components/layout/Page'\nimport {getTotalValueFromQuoteTokens, useFarms, usePriceBnbBusd, usePriceCakeBusd, usePrices} from 'state/hooks'\nimport useRefresh from 'hooks/useRefresh'\nimport { fetchFarmUserDataAsync } from 'state/actions'\nimport useI18n from 'hooks/useI18n'\nimport PoolsDashboard1 from 'views/PoolsDashboard1'\nimport FarmCard, { FarmWithStakedValue } from './components/FarmCard/FarmCard'\nimport FarmTabButtons from './components/FarmTabButtons'\n\n\nexport interface FarmsProps{\n  tokenMode?: boolean\n}\n\nconst Flexed2 = styled.div`\n  display: flex;\n  justify-content: center;\n  flex-wrap: wrap;\n  & > * {\n\n    width: 100%;\n    margin: 0 6px;\n    margin-bottom: 18px;\n  }\n`\n\nconst Farms: React.FC<FarmsProps> = (farmsProps) => {\n  const { path } = useRouteMatch()\n  const TranslateString = useI18n()\n  const farms = useFarms();\n  const prices = usePrices()\n  const farmsLP = useFarms()\n  const cakePrice = usePriceCakeBusd()\n  const bnbPrice = usePriceBnbBusd()\n  const { account, ethereum }: { account: string; ethereum: provider } = useWallet()\n  const {tokenMode} = farmsProps;\n  const [modalOpen, setModalOpen] = useState(true) \n  const handleModal = async () => {\n    setModalOpen(!modalOpen)\n  }  \n  // if (process.env.REACT_APP_DEBUG === \"true\") console.log(cakePrice, \"testingg cakePrice\");\n\n  const dispatch = useDispatch()\n  const { fastRefresh } = useRefresh()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchFarmUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const [stakedOnly, setStakedOnly] = useState(false)\n\n  const activeFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier !== '0X' && farm.pid > 0)\n  const inactiveFarms = farmsLP.filter((farm) => !!farm.isTokenOnly === !!tokenMode && farm.multiplier === '0X' && farm.pid > 0)\n\n  const stakedOnlyFarms = activeFarms.filter(\n    (farm) => farm.userData && new BigNumber(farm.userData.stakedBalance).isGreaterThan(0),\n  )\n  let vikingPerBlock = 0;\n  // if (process.env.REACT_APP_DEBUG === \"true\"){ console.log(farms[0], 'testing viking per block') }\n  if(farms && farms[0] && farms[0].vikingPerBlock){\n    vikingPerBlock = new BigNumber(farms[0].vikingPerBlock).div(new BigNumber(10).pow(18)).toNumber();\n  }\n  // /!\\ This function will be removed soon\n  // This function compute the APY for each farm and will be replaced when we have a reliable API\n  // to retrieve assets prices against USD\n  const farmsList = useCallback(\n    (farmsToDisplay, removed: boolean) => {\n      // const cakePriceVsBNB = new BigNumber(farmsLP.find((farm) => farm.pid === CAKE_POOL_PID)?.tokenPriceVsQuote || 0)\n      const farmsToDisplayWithAPY: FarmWithStakedValue[] = farmsToDisplay.map((farm) => {\n        // if (!farm.tokenAmount || !farm.lpTotalInQuoteToken || !farm.lpTotalInQuoteToken) {\n        //   return farm\n        // }\n\n        const cakeRewardPerBlock = new BigNumber(farm.vikingPerBlock || 1).times(new BigNumber(farm.poolWeight)) .div(new BigNumber(10).pow(18))\n        const cakeRewardPerYear = cakeRewardPerBlock.times(BLOCKS_PER_YEAR).times(2)\n      \n        let apy = new BigNumber(cakePrice).times(cakeRewardPerYear);\n\n        const totalValue = getTotalValueFromQuoteTokens(farm.quoteTokenAmount, farm.quoteTokenSymbol, prices);\n\n        if(totalValue.comparedTo(0) > 0){\n          apy = apy.div(totalValue);\n        }\n\n        return { ...farm, apy }\n      })\n      return farmsToDisplayWithAPY.map((farm) => (\n        <FarmCard\n          key={farm.pid}\n          farm={farm}\n          removed={removed}\n          bnbPrice={bnbPrice}\n          cakePrice={cakePrice}\n          ethereum={ethereum}\n          account={account}\n        />\n      ))\n    },\n    [prices, cakePrice, bnbPrice, account, ethereum],\n  )\n\n  return (\n    <Page>\n\n    <Flexed2>\n      <PoolsDashboard1/>\n    </Flexed2>\n\n      <div>\n        <FarmsFlex>\n          <Route exact path={`${path}`}>\n            {stakedOnly ? farmsList(stakedOnlyFarms, false) : farmsList(activeFarms, false)}\n          </Route>\n          <Route exact path={`${path}/history`}>\n            {farmsList(inactiveFarms, true)}\n          </Route>\n        </FarmsFlex>\n\n        <FarmTabButtons stakedOnly={stakedOnly} setStakedOnly={setStakedOnly} tokenMode={tokenMode}/>\n      </div>\n    </Page>\n  )\n}\n\n\nexport default Farms\n"]},"metadata":{},"sourceType":"module"}