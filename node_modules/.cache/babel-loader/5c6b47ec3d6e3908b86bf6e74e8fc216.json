{"ast":null,"code":"\"use strict\";\n\nvar _classCallCheck = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/classCallCheck\");\n\nvar _createClass = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createClass\");\n\nvar _inherits = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/inherits\");\n\nvar _createSuper = require(\"/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/createSuper\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.TranslationsModel = exports.Translations = void 0;\n\nvar core_1 = require(\"../core\");\n\nvar Translations = /*#__PURE__*/function (_core_1$CrowdinApi) {\n  _inherits(Translations, _core_1$CrowdinApi);\n\n  var _super = _createSuper(Translations);\n\n  function Translations() {\n    _classCallCheck(this, Translations);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Translations, [{\n    key: \"applyPreTranslation\",\n    value:\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    function applyPreTranslation(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/pre-translations\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param preTranslationId pre translation identifier\n     */\n\n  }, {\n    key: \"preTranslationStatus\",\n    value: function preTranslationStatus(projectId, preTranslationId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/pre-translations/\").concat(preTranslationId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param request request body\n     * @param eTag eTag 'If-None-Match' header\n     */\n\n  }, {\n    key: \"buildProjectFileTranslation\",\n    value: function buildProjectFileTranslation(projectId, fileId, request, eTag) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations/builds/files/\").concat(fileId);\n      var config = this.defaultConfig();\n\n      if (!!eTag) {\n        config.headers['If-None-Match'] = eTag;\n      }\n\n      return this.post(url, request, config);\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n\n  }, {\n    key: \"listProjectBuilds\",\n    value: function listProjectBuilds(projectId, branchId, limit, offset) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations/builds\");\n      url = this.addQueryParam(url, 'branchId', branchId);\n      return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"buildProject\",\n    value: function buildProject(projectId) {\n      var request = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations/builds\");\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n\n  }, {\n    key: \"downloadTranslations\",\n    value: function downloadTranslations(projectId, buildId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations/builds/\").concat(buildId, \"/download\");\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n\n  }, {\n    key: \"checkBuildStatus\",\n    value: function checkBuildStatus(projectId, buildId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations/builds/\").concat(buildId);\n      return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n\n  }, {\n    key: \"cancelBuild\",\n    value: function cancelBuild(projectId, buildId) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations/builds/\").concat(buildId);\n      return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param languageId language identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"uploadTranslation\",\n    value: function uploadTranslation(projectId, languageId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations/\").concat(languageId);\n      return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n\n  }, {\n    key: \"exportProjectTranslation\",\n    value: function exportProjectTranslation(projectId, request) {\n      var url = \"\".concat(this.url, \"/projects/\").concat(projectId, \"/translations/exports\");\n      return this.post(url, request, this.defaultConfig());\n    }\n  }]);\n\n  return Translations;\n}(core_1.CrowdinApi);\n\nexports.Translations = Translations;\nvar TranslationsModel;\n\n(function (TranslationsModel) {\n  var Method;\n\n  (function (Method) {\n    Method[\"TM\"] = \"tm\";\n    Method[\"MT\"] = \"mt\";\n  })(Method = TranslationsModel.Method || (TranslationsModel.Method = {}));\n\n  var AutoApproveOption;\n\n  (function (AutoApproveOption) {\n    AutoApproveOption[\"ALL\"] = \"all\";\n    AutoApproveOption[\"EXCEPT_AUTO_SUBSTITUTED\"] = \"exceptAutoSubstituted\";\n    AutoApproveOption[\"PERFECT_MATCH_ONLY\"] = \"perfectMatchOnly\";\n    AutoApproveOption[\"NONE\"] = \"none\";\n  })(AutoApproveOption = TranslationsModel.AutoApproveOption || (TranslationsModel.AutoApproveOption = {}));\n\n  var CharTransformation;\n\n  (function (CharTransformation) {\n    CharTransformation[\"ASIAN\"] = \"asian\";\n    CharTransformation[\"EUROPEAN\"] = \"european\";\n    CharTransformation[\"ARABIC\"] = \"arabic\";\n    CharTransformation[\"CYRILLIC\"] = \"cyrillic\";\n  })(CharTransformation = TranslationsModel.CharTransformation || (TranslationsModel.CharTransformation = {}));\n})(TranslationsModel = exports.TranslationsModel || (exports.TranslationsModel = {}));","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/node_modules/@crowdin/crowdin-api-client/out/translations/index.js"],"names":["Object","defineProperty","exports","value","TranslationsModel","Translations","core_1","require","projectId","request","url","post","defaultConfig","preTranslationId","get","fileId","eTag","config","headers","branchId","limit","offset","addQueryParam","getList","buildId","delete","languageId","CrowdinApi","Method","AutoApproveOption","CharTransformation"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.TranslationsModel = exports.Translations = void 0;\nconst core_1 = require(\"../core\");\nclass Translations extends core_1.CrowdinApi {\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    applyPreTranslation(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/pre-translations`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param preTranslationId pre translation identifier\n     */\n    preTranslationStatus(projectId, preTranslationId) {\n        const url = `${this.url}/projects/${projectId}/pre-translations/${preTranslationId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param fileId file identifier\n     * @param request request body\n     * @param eTag eTag 'If-None-Match' header\n     */\n    buildProjectFileTranslation(projectId, fileId, request, eTag) {\n        const url = `${this.url}/projects/${projectId}/translations/builds/files/${fileId}`;\n        const config = this.defaultConfig();\n        if (!!eTag) {\n            config.headers['If-None-Match'] = eTag;\n        }\n        return this.post(url, request, config);\n    }\n    /**\n     * @param projectId project identifier\n     * @param branchId branch identifier\n     * @param limit maximum number of items to retrieve (default 25)\n     * @param offset starting offset in the collection (default 0)\n     */\n    listProjectBuilds(projectId, branchId, limit, offset) {\n        let url = `${this.url}/projects/${projectId}/translations/builds`;\n        url = this.addQueryParam(url, 'branchId', branchId);\n        return this.getList(url, limit, offset);\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    buildProject(projectId, request = {}) {\n        const url = `${this.url}/projects/${projectId}/translations/builds`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n    downloadTranslations(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/translations/builds/${buildId}/download`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n    checkBuildStatus(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/translations/builds/${buildId}`;\n        return this.get(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param buildId build identifier\n     */\n    cancelBuild(projectId, buildId) {\n        const url = `${this.url}/projects/${projectId}/translations/builds/${buildId}`;\n        return this.delete(url, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param languageId language identifier\n     * @param request request body\n     */\n    uploadTranslation(projectId, languageId, request) {\n        const url = `${this.url}/projects/${projectId}/translations/${languageId}`;\n        return this.post(url, request, this.defaultConfig());\n    }\n    /**\n     * @param projectId project identifier\n     * @param request request body\n     */\n    exportProjectTranslation(projectId, request) {\n        const url = `${this.url}/projects/${projectId}/translations/exports`;\n        return this.post(url, request, this.defaultConfig());\n    }\n}\nexports.Translations = Translations;\nvar TranslationsModel;\n(function (TranslationsModel) {\n    let Method;\n    (function (Method) {\n        Method[\"TM\"] = \"tm\";\n        Method[\"MT\"] = \"mt\";\n    })(Method = TranslationsModel.Method || (TranslationsModel.Method = {}));\n    let AutoApproveOption;\n    (function (AutoApproveOption) {\n        AutoApproveOption[\"ALL\"] = \"all\";\n        AutoApproveOption[\"EXCEPT_AUTO_SUBSTITUTED\"] = \"exceptAutoSubstituted\";\n        AutoApproveOption[\"PERFECT_MATCH_ONLY\"] = \"perfectMatchOnly\";\n        AutoApproveOption[\"NONE\"] = \"none\";\n    })(AutoApproveOption = TranslationsModel.AutoApproveOption || (TranslationsModel.AutoApproveOption = {}));\n    let CharTransformation;\n    (function (CharTransformation) {\n        CharTransformation[\"ASIAN\"] = \"asian\";\n        CharTransformation[\"EUROPEAN\"] = \"european\";\n        CharTransformation[\"ARABIC\"] = \"arabic\";\n        CharTransformation[\"CYRILLIC\"] = \"cyrillic\";\n    })(CharTransformation = TranslationsModel.CharTransformation || (TranslationsModel.CharTransformation = {}));\n})(TranslationsModel = exports.TranslationsModel || (exports.TranslationsModel = {}));\n"]},"metadata":{},"sourceType":"script"}