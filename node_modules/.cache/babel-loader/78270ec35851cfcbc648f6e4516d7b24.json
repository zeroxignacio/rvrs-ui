{"ast":null,"code":"var _jsxFileName = \"/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/BondsDashboard/dashboard.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useState } from 'react';\nimport styled from 'styled-components';\nimport { Flex } from '@pancakeswap-libs/uikit';\nimport BigNumber from 'bignumber.js';\nimport { usePriceCakeBusd } from 'state/hooks';\nimport { useAllHarvest } from 'hooks/useHarvest';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance';\nimport { getBalanceNumber } from 'utils/formatBalance';\nimport useI18n from 'hooks/useI18n';\nimport farms from 'state/farms';\nimport { FaHandHoldingUsd, FaLongArrowAltRight } from 'react-icons/fa';\nimport useTokenBalance, { useTotalSupply, useBurnedBalance, useUstTreasuryBalance, useRvrsOneTreasuryBalance, useRvrsUstTreasuryBalance } from 'hooks/useTokenBalance';\nimport Container from 'components/layout/Container';\nimport { getCakeAddress, getRvrsOneAddress, getRvrsUstAddress, getUstAddress } from '../../utils/addressHelpers';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Price = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #405fb4 !important;\n  border-radius: 16px;\n  color: #405fb4;\n  font-size: 15px;\n  font-weight: 800;\n  width: 100%;\n  display: inline-flex;\n  min-height: 21px;\n  max-height: 37px;\n  letter-spacing: 0.03em;\n  padding: 15px;\n`;\nconst DashboardPage2 = styled(Container)`\n  min-height: calc(1vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 6px;\n  padding: 5px;\n  max-width: 770px;\n\n  ${({\n  theme\n}) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({\n  theme\n}) => theme.mediaQueries.lg} {\n    padding-top: 21px;\n    padding-bottom: 32px;\n  }\n`;\n_c = DashboardPage2;\nconst StyledBtn = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #ffff !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 400;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 40px;\n  padding: 12px;\n  box-shadow: 0px 0px 10px #ccc;\n`;\n_c2 = StyledBtn;\nconst Test = styled.text`\n  background-color: rgba(0, 0, 0,0) !important;\n  background: rgba(0, 0, 0,0) !important;\n  font-size: 20px;\n  font-weight: 600;\n  text-shadow: 0px 0px 10px #ccc;\n`;\n_c3 = Test;\nconst Divider = styled.div`\n  background-color: #1E2129;\n  height: 0px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 7px;\n  margin-bottom: 7px;\n  width: 0%;\n`;\nconst ExpandingWrapper = styled.div`\n  height: ${props => props.expanded ? '100%' : '0px'};\n  overflow: hidden;\n`;\nconst DetailsCard = styled.div`\n  background: rgba(0, 0, 0,0) !important;\n  border-radius: 0px;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 10px;\n  position: center;\n  text-align: center;\n`;\nconst Stat = styled.text`\n  font-size: 15px;\n  font-weight: 500;\n  text-shadow: 0px 0px 10px #ccc;\n`;\nconst Stat2 = styled.text`\n  font-size: 15px;\n  font-weight: 700;\n  text-shadow: 0px 0px 10px #ccc;\n`;\nconst DCard = styled.div`\n  background: #2E3543;\n  border-radius: 20px;\n  padding: 30px;\n  box-shadow: 1px 1px 3px #fff;\n  background-image: linear-gradient(to right, #3B4557 , #2B3344);\n  position: center;\n  text-align: center;\n`;\nconst Sub = styled.p`\n  color: #7F8997;\n  font-size: 13px;\n  font-weight: 500;\n  margin-bottom: 0px;\n  text-shadow: 0px 0px 0px #4E5C6D;\n`;\nconst DashboardCard = styled.div`\n  align-self: baseline;\n  background-image: linear-gradient(to right, #2E3646, #3B4557 , #2B3344);\n\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 0px;\n  position: relative;\n  text-align: center;\n\n\n  border: 0px solid #fff;\n  box-shadow: 0px 0px 5px #ccc;\n`;\n_c4 = DashboardCard;\nconst DashCard = styled.div`\n  align-self: baseline;\n  background-image: linear-gradient(to right, #2E3646, #3B4557 , #2B3344);\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 15px;\n  position: relative;\n  text-align: center;\n`;\n_c5 = DashCard;\n\nconst MoneyWheel = () => {\n  _s();\n\n  const [pendingTx, setPendingTx] = useState(false);\n  const {\n    account\n  } = useWallet();\n  const TranslateString = useI18n();\n  const farmsWithBalance = useFarmsWithBalance();\n  const cakeBalance = getBalanceNumber(useTokenBalance(getCakeAddress()));\n  const eggPrice = usePriceCakeBusd().toNumber();\n  const totalSupply = useTotalSupply();\n  const burnedBalance = useBurnedBalance(getCakeAddress());\n  const [showExpandableSection, setShowExpandableSection] = useState(false);\n  const earningsSum = farmsWithBalance.reduce((accum, farm) => {\n    return accum + new BigNumber(farm.balance).div(new BigNumber(10).pow(18)).toNumber();\n  }, 0);\n  const balancesWithValue = farmsWithBalance.filter(balanceType => balanceType.balance.toNumber() > 0);\n  const {\n    onReward\n  } = useAllHarvest(balancesWithValue.map(farmWithBalance => farmWithBalance.pid));\n  const cakePriceUsd = usePriceCakeBusd();\n  const misPrice = usePriceCakeBusd();\n  const tokenPrice = cakePriceUsd.toNumber().toFixed(2);\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\n  const cakeSupply = getBalanceNumber(circSupply);\n  const circulatingMath = new BigNumber(cakeSupply).minus(5000000);\n  const circulatingRVRS = circulatingMath.toNumber().toFixed(0);\n  const mCap = misPrice.times(circulatingRVRS).toNumber().toFixed(0);\n  const marketCap = misPrice.times(circSupply).isNaN() || !misPrice.times(circSupply).isFinite() ? new BigNumber(0) : misPrice.times(circSupply);\n  let vikingPerBlock = 0; // if (process.env.REACT_APP_DEBUG === \"true\"){ console.log(farms[0], 'testing viking per block') }\n\n  if (farms && farms[0] && farms[0].vikingPerBlock) {\n    vikingPerBlock = new BigNumber(farms[0].vikingPerBlock).div(new BigNumber(10).pow(18)).toNumber();\n  } // Treasury Balances\n\n\n  const ustTreasuryBalance = getBalanceNumber(useUstTreasuryBalance(getUstAddress()));\n  const rvrsOneTreasuryBalance = getBalanceNumber(useRvrsOneTreasuryBalance(getRvrsOneAddress()));\n  const rvrsUstTreasuryBalance = getBalanceNumber(useRvrsUstTreasuryBalance(getRvrsUstAddress()));\n  const RvrsOneValue = new BigNumber(rvrsOneTreasuryBalance).times(2.8);\n  const RvrsUstValue = new BigNumber(rvrsUstTreasuryBalance).times(5.65);\n  const RvrsOneValueString = RvrsOneValue.toNumber().toLocaleString('en-us', {\n    maximumFractionDigits: 1\n  });\n  const RvrsUstValueString = RvrsUstValue.toNumber().toLocaleString('en-us', {\n    maximumFractionDigits: 1\n  });\n  const ustTreasuryBalanceString = ustTreasuryBalance.toLocaleString('en-us', {\n    maximumFractionDigits: 1\n  });\n  const treasuryBalance = new BigNumber(RvrsOneValue).plus(RvrsUstValue).plus(ustTreasuryBalance).plus(612000).plus(372800).toNumber().toLocaleString('en-us', {\n    maximumFractionDigits: 0\n  });\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true);\n\n    try {\n      await onReward();\n    } catch (error) {// TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false);\n    }\n  }, [onReward]);\n  return /*#__PURE__*/_jsxDEV(DashboardPage2, {\n    children: /*#__PURE__*/_jsxDEV(DashboardCard, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(DashCard, {\n          style: {\n            padding: '40px',\n            marginLeft: '0px',\n            marginRight: '0px'\n          },\n          children: /*#__PURE__*/_jsxDEV(Flex, {\n            justifyContent: \"space-between\",\n            alignItems: \"left\",\n            ml: \"10px\",\n            mr: \"10px\",\n            marginBottom: \"-5px\",\n            mt: \"0px\",\n            children: [/*#__PURE__*/_jsxDEV(Flex, {\n              children: [/*#__PURE__*/_jsxDEV(Test, {\n                children: TranslateString(9299, 'Reverseum Treasury')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(StyledBtn, {\n                id: \"harvest-all\",\n                disabled: balancesWithValue.length <= 0 || pendingTx,\n                onClick: harvestAllFarms,\n                style: {\n                  'marginLeft': '15px',\n                  'marginTop': '-5px'\n                },\n                children: pendingTx ? /*#__PURE__*/_jsxDEV(FaHandHoldingUsd, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 36\n                }, this) : /*#__PURE__*/_jsxDEV(FaHandHoldingUsd, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 58\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 237,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Flex, {\n              children: /*#__PURE__*/_jsxDEV(\"a\", {\n                style: {\n                  textShadow: '0px 0px 8px #fff',\n                  borderRadius: '10px',\n                  border: '1px',\n                  borderStyle: 'solid !important',\n                  borderColor: 'white'\n                },\n                target: \"_blanK\",\n                rel: \"noreferrer\",\n                href: \"https://docs.google.com/spreadsheets/d/1Ocl8Gx8rA4Zbzcsxb8-EuFNEQNlTsMLsMMRazixz_gk/edit?usp=sharing\",\n                className: \"nav-links\",\n                children: [\"Treasury Strategies \", /*#__PURE__*/_jsxDEV(FaLongArrowAltRight, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 251,\n                  columnNumber: 59\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 236,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 231,\n    columnNumber: 5\n  }, this);\n};\n\n_s(MoneyWheel, \"+9DbOPNSlW2YrEyJk5TFYwgbu1A=\", false, function () {\n  return [useWallet, useI18n, useFarmsWithBalance, useTokenBalance, usePriceCakeBusd, useTotalSupply, useBurnedBalance, useAllHarvest, usePriceCakeBusd, usePriceCakeBusd, useUstTreasuryBalance, useRvrsOneTreasuryBalance, useRvrsUstTreasuryBalance];\n});\n\n_c6 = MoneyWheel;\nexport default MoneyWheel;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"DashboardPage2\");\n$RefreshReg$(_c2, \"StyledBtn\");\n$RefreshReg$(_c3, \"Test\");\n$RefreshReg$(_c4, \"DashboardCard\");\n$RefreshReg$(_c5, \"DashCard\");\n$RefreshReg$(_c6, \"MoneyWheel\");","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/BondsDashboard/dashboard.tsx"],"names":["React","useCallback","useState","styled","Flex","BigNumber","usePriceCakeBusd","useAllHarvest","useWallet","useFarmsWithBalance","getBalanceNumber","useI18n","farms","FaHandHoldingUsd","FaLongArrowAltRight","useTokenBalance","useTotalSupply","useBurnedBalance","useUstTreasuryBalance","useRvrsOneTreasuryBalance","useRvrsUstTreasuryBalance","Container","getCakeAddress","getRvrsOneAddress","getRvrsUstAddress","getUstAddress","Price","button","DashboardPage2","theme","mediaQueries","sm","lg","StyledBtn","Test","text","Divider","div","ExpandingWrapper","props","expanded","DetailsCard","Stat","Stat2","DCard","Sub","p","DashboardCard","DashCard","MoneyWheel","pendingTx","setPendingTx","account","TranslateString","farmsWithBalance","cakeBalance","eggPrice","toNumber","totalSupply","burnedBalance","showExpandableSection","setShowExpandableSection","earningsSum","reduce","accum","farm","balance","pow","balancesWithValue","filter","balanceType","onReward","map","farmWithBalance","pid","cakePriceUsd","misPrice","tokenPrice","toFixed","circSupply","minus","cakeSupply","circulatingMath","circulatingRVRS","mCap","times","marketCap","isNaN","isFinite","vikingPerBlock","ustTreasuryBalance","rvrsOneTreasuryBalance","rvrsUstTreasuryBalance","RvrsOneValue","RvrsUstValue","RvrsOneValueString","toLocaleString","maximumFractionDigits","RvrsUstValueString","ustTreasuryBalanceString","treasuryBalance","plus","harvestAllFarms","error","padding","marginLeft","marginRight","length","textShadow","borderRadius","border","borderStyle","borderColor"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,WAAf,EAA4BC,QAA5B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAmCC,IAAnC,QAAiD,yBAAjD;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,SAASC,gBAAT,QAAiC,aAAjC;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AACA,OAAOC,mBAAP,MAAgC,2BAAhC;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,OAAOC,OAAP,MAAoB,eAApB;AAMA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAA2eC,gBAA3e,EAAuiBC,mBAAviB,QAAkkB,gBAAlkB;AAEA,OAAOC,eAAP,IAA0BC,cAA1B,EAA0CC,gBAA1C,EAA4DC,qBAA5D,EAAmFC,yBAAnF,EAA8GC,yBAA9G,QAA+I,uBAA/I;AAGA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,cAAT,EAAyBC,iBAAzB,EAA4CC,iBAA5C,EAA+DC,aAA/D,QAAoF,4BAApF;;AAEA,MAAMC,KAAK,GAAGvB,MAAM,CAACwB,MAAO;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAjBA;AAmBA,MAAMC,cAAc,GAAGzB,MAAM,CAACkB,SAAD,CAAY;AACzC;AACA;AACA;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEQ,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBC,EAAG;AACzC;AACA;AACA;AACA;AACA,IAAI,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAeA,KAAK,CAACC,YAAN,CAAmBE,EAAG;AACzC;AACA;AACA;AACA,CAhBA;KAAMJ,c;AAkBN,MAAMK,SAAS,GAAG9B,MAAM,CAACwB,MAAO;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAlBA;MAAMM,S;AAoBN,MAAMC,IAAI,GAAG/B,MAAM,CAACgC,IAAK;AACzB;AACA;AACA;AACA;AACA;AACA,CANA;MAAMD,I;AAQN,MAAME,OAAO,GAAGjC,MAAM,CAACkC,GAAI;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMC,gBAAgB,GAAGnC,MAAM,CAACkC,GAA2B;AAC3D,YAAaE,KAAD,IAAYA,KAAK,CAACC,QAAN,GAAiB,MAAjB,GAA0B,KAAO;AACzD;AACA,CAHA;AAIA,MAAMC,WAAW,GAAGtC,MAAM,CAACkC,GAAI;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMK,IAAI,GAAGvC,MAAM,CAACgC,IAAK;AACzB;AACA;AACA;AACA,CAJA;AAMA,MAAMQ,KAAK,GAAGxC,MAAM,CAACgC,IAAK;AAC1B;AACA;AACA;AACA,CAJA;AAMA,MAAMS,KAAK,GAAGzC,MAAM,CAACkC,GAAI;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CARA;AAUA,MAAMQ,GAAG,GAAG1C,MAAM,CAAC2C,CAAE;AACrB;AACA;AACA;AACA;AACA;AACA,CANA;AAOA,MAAMC,aAAa,GAAG5C,MAAM,CAACkC,GAAI;AACjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAfA;MAAMU,a;AAiBN,MAAMC,QAAQ,GAAG7C,MAAM,CAACkC,GAAI;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVA;MAAMW,Q;;AAWN,MAAMC,UAAoB,GAAG,MAAM;AAAA;;AACjC,QAAM,CAACC,SAAD,EAAYC,YAAZ,IAA4BjD,QAAQ,CAAC,KAAD,CAA1C;AACA,QAAM;AAAEkD,IAAAA;AAAF,MAAc5C,SAAS,EAA7B;AACA,QAAM6C,eAAe,GAAG1C,OAAO,EAA/B;AACA,QAAM2C,gBAAgB,GAAG7C,mBAAmB,EAA5C;AACA,QAAM8C,WAAW,GAAG7C,gBAAgB,CAACK,eAAe,CAACO,cAAc,EAAf,CAAhB,CAApC;AACA,QAAMkC,QAAQ,GAAGlD,gBAAgB,GAAGmD,QAAnB,EAAjB;AACA,QAAMC,WAAW,GAAG1C,cAAc,EAAlC;AACA,QAAM2C,aAAa,GAAG1C,gBAAgB,CAACK,cAAc,EAAf,CAAtC;AACA,QAAM,CAACsC,qBAAD,EAAwBC,wBAAxB,IAAoD3D,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM4D,WAAW,GAAGR,gBAAgB,CAACS,MAAjB,CAAwB,CAACC,KAAD,EAAQC,IAAR,KAAiB;AAC3D,WAAOD,KAAK,GAAG,IAAI3D,SAAJ,CAAc4D,IAAI,CAACC,OAAnB,EAA4B7B,GAA5B,CAAgC,IAAIhC,SAAJ,CAAc,EAAd,EAAkB8D,GAAlB,CAAsB,EAAtB,CAAhC,EAA2DV,QAA3D,EAAf;AACD,GAFmB,EAEjB,CAFiB,CAApB;AAGA,QAAMW,iBAAiB,GAAGd,gBAAgB,CAACe,MAAjB,CAAyBC,WAAD,IAAiBA,WAAW,CAACJ,OAAZ,CAAoBT,QAApB,KAAiC,CAA1E,CAA1B;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAehE,aAAa,CAAC6D,iBAAiB,CAACI,GAAlB,CAAuBC,eAAD,IAAqBA,eAAe,CAACC,GAA3D,CAAD,CAAlC;AACA,QAAMC,YAAY,GAAGrE,gBAAgB,EAArC;AACA,QAAMsE,QAAQ,GAAGtE,gBAAgB,EAAjC;AACA,QAAMuE,UAAU,GAAGF,YAAY,CAAClB,QAAb,GAAwBqB,OAAxB,CAAgC,CAAhC,CAAnB;AACA,QAAMC,UAAU,GAAGrB,WAAW,GAAGA,WAAW,CAACsB,KAAZ,CAAkBrB,aAAlB,CAAH,GAAsC,IAAItD,SAAJ,CAAc,CAAd,CAApE;AACA,QAAM4E,UAAU,GAAGvE,gBAAgB,CAACqE,UAAD,CAAnC;AACA,QAAMG,eAAe,GAAG,IAAI7E,SAAJ,CAAc4E,UAAd,EAA0BD,KAA1B,CAAgC,OAAhC,CAAxB;AACA,QAAMG,eAAe,GAAGD,eAAe,CAACzB,QAAhB,GAA2BqB,OAA3B,CAAmC,CAAnC,CAAxB;AACA,QAAMM,IAAI,GAAGR,QAAQ,CAACS,KAAT,CAAeF,eAAf,EAAgC1B,QAAhC,GAA2CqB,OAA3C,CAAmD,CAAnD,CAAb;AACA,QAAMQ,SAAS,GAAKV,QAAQ,CAACS,KAAT,CAAeN,UAAf,EAA2BQ,KAA3B,MAAsC,CAAEX,QAAQ,CAACS,KAAT,CAAeN,UAAf,EAA2BS,QAA3B,EAAxC,GAClB,IAAInF,SAAJ,CAAc,CAAd,CADkB,GACCuE,QAAQ,CAACS,KAAT,CAAeN,UAAf,CADrB;AAGA,MAAIU,cAAc,GAAG,CAArB,CA1BiC,CA2BjC;;AACA,MAAG7E,KAAK,IAAIA,KAAK,CAAC,CAAD,CAAd,IAAqBA,KAAK,CAAC,CAAD,CAAL,CAAS6E,cAAjC,EAAgD;AAC9CA,IAAAA,cAAc,GAAG,IAAIpF,SAAJ,CAAcO,KAAK,CAAC,CAAD,CAAL,CAAS6E,cAAvB,EAAuCpD,GAAvC,CAA2C,IAAIhC,SAAJ,CAAc,EAAd,EAAkB8D,GAAlB,CAAsB,EAAtB,CAA3C,EAAsEV,QAAtE,EAAjB;AACD,GA9BgC,CAgCjC;;;AACA,QAAMiC,kBAAkB,GAAGhF,gBAAgB,CAACQ,qBAAqB,CAACO,aAAa,EAAd,CAAtB,CAA3C;AAEA,QAAMkE,sBAAsB,GAAGjF,gBAAgB,CAACS,yBAAyB,CAACI,iBAAiB,EAAlB,CAA1B,CAA/C;AACA,QAAMqE,sBAAsB,GAAGlF,gBAAgB,CAACU,yBAAyB,CAACI,iBAAiB,EAAlB,CAA1B,CAA/C;AAEA,QAAMqE,YAAY,GAAG,IAAIxF,SAAJ,CAAcsF,sBAAd,EAAsCN,KAAtC,CAA4C,GAA5C,CAArB;AACA,QAAMS,YAAY,GAAG,IAAIzF,SAAJ,CAAcuF,sBAAd,EAAsCP,KAAtC,CAA4C,IAA5C,CAArB;AAEA,QAAMU,kBAAkB,GAAGF,YAAY,CAACpC,QAAb,GAAwBuC,cAAxB,CAAuC,OAAvC,EAA+C;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAA/C,CAA3B;AACA,QAAMC,kBAAkB,GAAGJ,YAAY,CAACrC,QAAb,GAAwBuC,cAAxB,CAAuC,OAAvC,EAA+C;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAA/C,CAA3B;AACA,QAAME,wBAAwB,GAAGT,kBAAkB,CAACM,cAAnB,CAAkC,OAAlC,EAA0C;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAA1C,CAAjC;AAEA,QAAMG,eAAe,GAAG,IAAI/F,SAAJ,CAAcwF,YAAd,EAA4BQ,IAA5B,CAAiCP,YAAjC,EAA+CO,IAA/C,CAAoDX,kBAApD,EAAwEW,IAAxE,CAA6E,MAA7E,EAAqFA,IAArF,CAA0F,MAA1F,EAAkG5C,QAAlG,GAA6GuC,cAA7G,CAA4H,OAA5H,EAAoI;AAAEC,IAAAA,qBAAqB,EAAE;AAAzB,GAApI,CAAxB;AAEA,QAAMK,eAAe,GAAGrG,WAAW,CAAC,YAAY;AAC9CkD,IAAAA,YAAY,CAAC,IAAD,CAAZ;;AACA,QAAI;AACF,YAAMoB,QAAQ,EAAd;AACD,KAFD,CAEE,OAAOgC,KAAP,EAAc,CACd;AACD,KAJD,SAIU;AACRpD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;AACF,GATkC,EAShC,CAACoB,QAAD,CATgC,CAAnC;AAYA,sBACE,QAAC,cAAD;AAAA,2BACE,QAAC,aAAD;AAAA,6BACE;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,KAAK,EAAE;AAACiC,YAAAA,OAAO,EAAC,MAAT;AAAiBC,YAAAA,UAAU,EAAC,KAA5B;AAAmCC,YAAAA,WAAW,EAAC;AAA/C,WAAjB;AAAA,iCAEE,QAAC,IAAD;AAAM,YAAA,cAAc,EAAC,eAArB;AAAqC,YAAA,UAAU,EAAC,MAAhD;AAAwD,YAAA,EAAE,EAAC,MAA3D;AAAkE,YAAA,EAAE,EAAC,MAArE;AAA6E,YAAA,YAAY,EAAC,MAA1F;AAAiG,YAAA,EAAE,EAAC,KAApG;AAAA,oCACE,QAAC,IAAD;AAAA,sCACE,QAAC,IAAD;AAAA,0BAAOrD,eAAe,CAAC,IAAD,EAAO,oBAAP;AAAtB;AAAA;AAAA;AAAA;AAAA,sBADF,eAEE,QAAC,SAAD;AACM,gBAAA,EAAE,EAAC,aADT;AAEM,gBAAA,QAAQ,EAAEe,iBAAiB,CAACuC,MAAlB,IAA4B,CAA5B,IAAiCzD,SAFjD;AAGM,gBAAA,OAAO,EAAEoD,eAHf;AAIM,gBAAA,KAAK,EAAE;AAAC,gCAAa,MAAd;AAAsB,+BAAY;AAAlC,iBAJb;AAAA,0BAKOpD,SAAS,gBAAG,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,wBAAH,gBAAyB,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AALzC;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAWE,QAAC,IAAD;AAAA,qCACA;AAAG,gBAAA,KAAK,EAAE;AAAC0D,kBAAAA,UAAU,EAAC,kBAAZ;AAAgCC,kBAAAA,YAAY,EAAC,MAA7C;AAAqDC,kBAAAA,MAAM,EAAC,KAA5D;AAAmEC,kBAAAA,WAAW,EAAC,kBAA/E;AAAmGC,kBAAAA,WAAW,EAAC;AAA/G,iBAAV;AAAmI,gBAAA,MAAM,EAAC,QAA1I;AACE,gBAAA,GAAG,EAAC,YADN;AAEE,gBAAA,IAAI,EAAC,sGAFP;AAGE,gBAAA,SAAS,EAAC,WAHZ;AAAA,gEAG4C,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA,wBAH5C;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,oBAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD,CA1FD;;GAAM/D,U;UAEgBzC,S,EACIG,O,EACCF,mB,EACYM,e,EACpBT,gB,EACGU,c,EACEC,gB,EAMDV,a,EACAD,gB,EACJA,gB,EAiB2BY,qB,EAEIC,yB,EACAC,yB;;;MApC5C6B,U;AA2FN,eAAeA,UAAf","sourcesContent":["import React, {useCallback, useState} from 'react'\nimport styled from 'styled-components'\nimport { BaseLayout, Button, Card, Flex,  } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport { useAllHarvest } from 'hooks/useHarvest'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport useFarmsWithBalance from 'hooks/useFarmsWithBalance'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useI18n from 'hooks/useI18n'\nimport CakeHarvestBalance from 'views/Home/components/CakeHarvestBalance'\nimport UnlockButton from 'components/UnlockButton'\nimport CakeWalletBalance from 'views/Home/components/CakeWalletBalance'\nimport CardValue from 'views/Home/components/CardValue'\nimport DashboardPage from 'components/layout/DashboardPage'\nimport farms from 'state/farms'\nimport { FaTelegramPlane, FaTwitter, FaDiscord, FaChartBar, FaMoneyBillAlt, FaTractor, FaHome, FaPrescriptionBottleAlt, FaTumblrSquare, FaCode, FaFlask, FaBook, FaReddit, FaRocketchat, FaRocket, FaBroadcastTower, FaLayerGroup, FaSeedling, FaExclamationTriangle, FaBootstrap, FaLandmark, FaGamepad, FaCircle, FaParachuteBox, FaVoteYea, FaProjectDiagram, FaShieldAlt, FaFire, FaCloud, FaPlayCircle, FaClipboard, FaUser, FaTwitterSquare, FaEnvelopeOpenText, FaDochub, FaHistory, FaHandHolding, FaHandHoldingUsd, FaQuestion, FaQuestionCircle, FaMonument, FaLongArrowAltRight } from 'react-icons/fa';\nimport { useTotalRewards } from 'hooks/useTickets'\nimport useTokenBalance, { useTotalSupply, useBurnedBalance, useUstTreasuryBalance, useRvrsOneTreasuryBalance, useRvrsUstTreasuryBalance } from 'hooks/useTokenBalance'\nimport { Link } from 'react-router-dom'\nimport ExpandableSectionButton from 'components/ExpandableSectionButton'\nimport Container from 'components/layout/Container'\nimport { getCakeAddress, getRvrsOneAddress, getRvrsUstAddress, getUstAddress } from '../../utils/addressHelpers'\n\nconst Price = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #405fb4 !important;\n  border-radius: 16px;\n  color: #405fb4;\n  font-size: 15px;\n  font-weight: 800;\n  width: 100%;\n  display: inline-flex;\n  min-height: 21px;\n  max-height: 37px;\n  letter-spacing: 0.03em;\n  padding: 15px;\n`\n\nconst DashboardPage2 = styled(Container)`\n  min-height: calc(1vh - 64px);\n  padding-top: 16px;\n  padding-bottom: 6px;\n  padding: 5px;\n  max-width: 770px;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    padding-top: 24px;\n    padding-bottom: 24px;\n  }\n\n  ${({ theme }) => theme.mediaQueries.lg} {\n    padding-top: 21px;\n    padding-bottom: 32px;\n  }\n`\n\nconst StyledBtn = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #ffff !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 400;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 40px;\n  padding: 12px;\n  box-shadow: 0px 0px 10px #ccc;\n`\n\nconst Test = styled.text`\n  background-color: rgba(0, 0, 0,0) !important;\n  background: rgba(0, 0, 0,0) !important;\n  font-size: 20px;\n  font-weight: 600;\n  text-shadow: 0px 0px 10px #ccc;\n`\n\nconst Divider = styled.div`\n  background-color: #1E2129;\n  height: 0px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 7px;\n  margin-bottom: 7px;\n  width: 0%;\n`\n\nconst ExpandingWrapper = styled.div<{ expanded: boolean }>`\n  height: ${(props) => (props.expanded ? '100%' : '0px')};\n  overflow: hidden;\n`\nconst DetailsCard = styled.div`\n  background: rgba(0, 0, 0,0) !important;\n  border-radius: 0px;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 10px;\n  position: center;\n  text-align: center;\n`\n\nconst Stat = styled.text`\n  font-size: 15px;\n  font-weight: 500;\n  text-shadow: 0px 0px 10px #ccc;\n`\n\nconst Stat2 = styled.text`\n  font-size: 15px;\n  font-weight: 700;\n  text-shadow: 0px 0px 10px #ccc;\n`\n\nconst DCard = styled.div`\n  background: #2E3543;\n  border-radius: 20px;\n  padding: 30px;\n  box-shadow: 1px 1px 3px #fff;\n  background-image: linear-gradient(to right, #3B4557 , #2B3344);\n  position: center;\n  text-align: center;\n`\n\nconst Sub = styled.p`\n  color: #7F8997;\n  font-size: 13px;\n  font-weight: 500;\n  margin-bottom: 0px;\n  text-shadow: 0px 0px 0px #4E5C6D;\n`\nconst DashboardCard = styled.div`\n  align-self: baseline;\n  background-image: linear-gradient(to right, #2E3646, #3B4557 , #2B3344);\n\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 0px;\n  position: relative;\n  text-align: center;\n\n\n  border: 0px solid #fff;\n  box-shadow: 0px 0px 5px #ccc;\n`\n\nconst DashCard = styled.div`\n  align-self: baseline;\n  background-image: linear-gradient(to right, #2E3646, #3B4557 , #2B3344);\n  border-radius: 20px;\n  display: flex;\n  flex-direction: column;\n  justify-content: space-around;\n  padding: 15px;\n  position: relative;\n  text-align: center;\n`\nconst MoneyWheel: React.FC = () => {\n  const [pendingTx, setPendingTx] = useState(false)\n  const { account } = useWallet()\n  const TranslateString = useI18n()\n  const farmsWithBalance = useFarmsWithBalance()\n  const cakeBalance = getBalanceNumber(useTokenBalance(getCakeAddress()))\n  const eggPrice = usePriceCakeBusd().toNumber()\n  const totalSupply = useTotalSupply()\n  const burnedBalance = useBurnedBalance(getCakeAddress())\n  const [showExpandableSection, setShowExpandableSection] = useState(false)\n  const earningsSum = farmsWithBalance.reduce((accum, farm) => {\n    return accum + new BigNumber(farm.balance).div(new BigNumber(10).pow(18)).toNumber()\n  }, 0)\n  const balancesWithValue = farmsWithBalance.filter((balanceType) => balanceType.balance.toNumber() > 0)\n  const { onReward } = useAllHarvest(balancesWithValue.map((farmWithBalance) => farmWithBalance.pid))\n  const cakePriceUsd = usePriceCakeBusd()\n  const misPrice = usePriceCakeBusd();\n  const tokenPrice = cakePriceUsd.toNumber().toFixed(2);\n  const circSupply = totalSupply ? totalSupply.minus(burnedBalance) : new BigNumber(0);\n  const cakeSupply = getBalanceNumber(circSupply);\n  const circulatingMath = new BigNumber(cakeSupply).minus(5000000);\n  const circulatingRVRS = circulatingMath.toNumber().toFixed(0);\n  const mCap = misPrice.times(circulatingRVRS).toNumber().toFixed(0);\n  const marketCap = ( misPrice.times(circSupply).isNaN() || ! misPrice.times(circSupply).isFinite() \n  ? new BigNumber(0) : misPrice.times(circSupply) );\n\n  let vikingPerBlock = 0;\n  // if (process.env.REACT_APP_DEBUG === \"true\"){ console.log(farms[0], 'testing viking per block') }\n  if(farms && farms[0] && farms[0].vikingPerBlock){\n    vikingPerBlock = new BigNumber(farms[0].vikingPerBlock).div(new BigNumber(10).pow(18)).toNumber();\n  }\n\n  // Treasury Balances\n  const ustTreasuryBalance = getBalanceNumber(useUstTreasuryBalance(getUstAddress()))\n\n  const rvrsOneTreasuryBalance = getBalanceNumber(useRvrsOneTreasuryBalance(getRvrsOneAddress()))\n  const rvrsUstTreasuryBalance = getBalanceNumber(useRvrsUstTreasuryBalance(getRvrsUstAddress()))\n\n  const RvrsOneValue = new BigNumber(rvrsOneTreasuryBalance).times(2.8)\n  const RvrsUstValue = new BigNumber(rvrsUstTreasuryBalance).times(5.65)\n\n  const RvrsOneValueString = RvrsOneValue.toNumber().toLocaleString('en-us',{ maximumFractionDigits: 1 })\n  const RvrsUstValueString = RvrsUstValue.toNumber().toLocaleString('en-us',{ maximumFractionDigits: 1 })\n  const ustTreasuryBalanceString = ustTreasuryBalance.toLocaleString('en-us',{ maximumFractionDigits: 1 })\n\n  const treasuryBalance = new BigNumber(RvrsOneValue).plus(RvrsUstValue).plus(ustTreasuryBalance).plus(612000).plus(372800).toNumber().toLocaleString('en-us',{ maximumFractionDigits: 0 })\n\n  const harvestAllFarms = useCallback(async () => {\n    setPendingTx(true)\n    try {\n      await onReward()\n    } catch (error) {\n      // TODO: find a way to handle when the user rejects transaction or it fails\n    } finally {\n      setPendingTx(false)\n    }\n  }, [onReward])\n\n\n  return (\n    <DashboardPage2>\n      <DashboardCard>\n        <div>\n          <DashCard style={{padding:'40px', marginLeft:'0px', marginRight:'0px'}}>\n\n            <Flex justifyContent='space-between' alignItems='left'  ml='10px' mr='10px'  marginBottom='-5px' mt='0px'> \n              <Flex>\n                <Test>{TranslateString(9299, 'Reverseum Treasury')}</Test>\n                <StyledBtn \n                      id=\"harvest-all\" \n                      disabled={balancesWithValue.length <= 0 || pendingTx} \n                      onClick={harvestAllFarms} \n                      style={{'marginLeft':'15px', 'marginTop':'-5px'}}>\n                      {pendingTx ? <FaHandHoldingUsd/> : <FaHandHoldingUsd/>} \n                </StyledBtn>\n              </Flex>\n              <Flex>\n              <a style={{textShadow:'0px 0px 8px #fff', borderRadius:'10px', border:'1px', borderStyle:'solid !important', borderColor:'white'}} target=\"_blanK\" \n                rel=\"noreferrer\" \n                href=\"https://docs.google.com/spreadsheets/d/1Ocl8Gx8rA4Zbzcsxb8-EuFNEQNlTsMLsMMRazixz_gk/edit?usp=sharing\" \n                className=\"nav-links\">Treasury Strategies <FaLongArrowAltRight/></a>\n              </Flex>\n\n\n            </Flex>\n          </DashCard>\n        </div>\n      </DashboardCard>\n  </DashboardPage2>\n  )\n}\nexport default MoneyWheel\n\n\n"]},"metadata":{},"sourceType":"module"}