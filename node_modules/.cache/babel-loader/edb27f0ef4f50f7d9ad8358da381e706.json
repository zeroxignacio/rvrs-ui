{"ast":null,"code":"var _s = $RefreshSig$(),\n    _s2 = $RefreshSig$(),\n    _s3 = $RefreshSig$(),\n    _s4 = $RefreshSig$(),\n    _s5 = $RefreshSig$(),\n    _s6 = $RefreshSig$(),\n    _s7 = $RefreshSig$();\n\nimport { useCallback } from 'react';\nimport { useWallet } from '@binance-chain/bsc-use-wallet';\nimport { ethers } from 'ethers';\nimport { useDispatch } from 'react-redux';\nimport { updateUserAllowance, fetchFarmUserDataAsync, updateUserAllowance2 } from 'state/actions';\nimport { approve } from 'utils/callHelpers';\nimport { useMasterchef, useCake, useLottery, useMoneyWheel, useMoneyWheel2, useWone, useSousChefBurn, useAutoRvrs } from './useContract'; // Approve a Farm\n\nexport const useApprove = lpContract => {\n  _s();\n\n  const dispatch = useDispatch();\n  const {\n    account\n  } = useWallet();\n  const masterChefContract = useMasterchef();\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account);\n      dispatch(fetchFarmUserDataAsync(account));\n      return tx;\n    } catch (e) {\n      return false;\n    }\n  }, [account, dispatch, lpContract, masterChefContract]);\n  return {\n    onApprove: handleApprove\n  };\n}; // Approve a Pool\n\n_s(useApprove, \"912YkJ6AGYumCBnuye56mVxNDwo=\", false, function () {\n  return [useDispatch, useWallet, useMasterchef];\n});\n\nexport const useSousApprove = (lpContract, sousId) => {\n  _s2();\n\n  const dispatch = useDispatch();\n  const {\n    account\n  } = useWallet();\n  const sousChefContract = useAutoRvrs();\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account);\n      dispatch(updateUserAllowance(sousId, account));\n      return tx;\n    } catch (e) {\n      return false;\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId]);\n  return {\n    onApprove: handleApprove\n  };\n};\n\n_s2(useSousApprove, \"wM9v7kATL97UKWe3izvY7Q1AGUY=\", false, function () {\n  return [useDispatch, useWallet, useAutoRvrs];\n});\n\nexport const useSousApproveBurn = (lpContract, sousId) => {\n  _s3();\n\n  const dispatch = useDispatch();\n  const {\n    account\n  } = useWallet();\n  const sousChefContract = useSousChefBurn(sousId);\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account);\n      dispatch(updateUserAllowance2(sousId, account));\n      return tx;\n    } catch (e) {\n      return false;\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId]);\n  return {\n    onApprove: handleApprove\n  };\n}; // Approve the lottery\n\n_s3(useSousApproveBurn, \"1Hob0G2tJYchegTmfd5uk7a1OtQ=\", false, function () {\n  return [useDispatch, useWallet, useSousChefBurn];\n});\n\nexport const useLotteryApprove = () => {\n  _s4();\n\n  const {\n    account\n  } = useWallet();\n  const cakeContract = useCake();\n  const lotteryContract = useLottery();\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account);\n      return tx;\n    } catch (e) {\n      return false;\n    }\n  }, [account, cakeContract, lotteryContract]);\n  return {\n    onApprove: handleApprove\n  };\n}; /// Je moet in het token contract het wheel contract toestemming geven om namens jou tokens uit te mogen geven.\n\n_s4(useLotteryApprove, \"qmmDwizDBCPS/KQkbYFMkBrCi+A=\", false, function () {\n  return [useWallet, useCake, useLottery];\n});\n\nexport const useMoneyWheelApprove = () => {\n  _s5();\n\n  const {\n    account\n  } = useWallet();\n  const cakeContract = useCake();\n  const moneyWheelContract = useMoneyWheel();\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, moneyWheelContract, account);\n      return tx;\n    } catch (e) {\n      return false;\n    }\n  }, [account, cakeContract, moneyWheelContract]);\n  return {\n    onApprove: handleApprove\n  };\n}; /// Approve the Money Wheel2\n\n_s5(useMoneyWheelApprove, \"jOdh74z9GsC2jRkrdNvWTFEv/GU=\", false, function () {\n  return [useWallet, useCake, useMoneyWheel];\n});\n\nexport const useMoneyWheel2Approve = () => {\n  _s6();\n\n  const {\n    account\n  } = useWallet();\n  const jewelContract = useWone();\n  const moneyWheel2Contract = useMoneyWheel2();\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(jewelContract, moneyWheel2Contract, account);\n      return tx;\n    } catch (e) {\n      return false;\n    }\n  }, [account, jewelContract, moneyWheel2Contract]);\n  return {\n    onApprove: handleApprove\n  };\n}; // Approve an IFO\n\n_s6(useMoneyWheel2Approve, \"W7vKVbU6s9arZK06DyiDnHQjDF0=\", false, function () {\n  return [useWallet, useWone, useMoneyWheel2];\n});\n\nexport const useIfoApprove = (tokenContract, spenderAddress) => {\n  _s7();\n\n  const {\n    account\n  } = useWallet();\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods.approve(spenderAddress, ethers.constants.MaxUint256).send({\n        from: account\n      });\n      return tx;\n    } catch {\n      return false;\n    }\n  }, [account, spenderAddress, tokenContract]);\n  return onApprove;\n};\n\n_s7(useIfoApprove, \"5YEWPx3HiFEhK5UYbT6NzOlDPbw=\", false, function () {\n  return [useWallet];\n});","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useApprove.ts"],"names":["useCallback","useWallet","ethers","useDispatch","updateUserAllowance","fetchFarmUserDataAsync","updateUserAllowance2","approve","useMasterchef","useCake","useLottery","useMoneyWheel","useMoneyWheel2","useWone","useSousChefBurn","useAutoRvrs","useApprove","lpContract","dispatch","account","masterChefContract","handleApprove","tx","e","onApprove","useSousApprove","sousId","sousChefContract","useSousApproveBurn","useLotteryApprove","cakeContract","lotteryContract","useMoneyWheelApprove","moneyWheelContract","useMoneyWheel2Approve","jewelContract","moneyWheel2Contract","useIfoApprove","tokenContract","spenderAddress","methods","constants","MaxUint256","send","from"],"mappings":";;;;;;;;AAAA,SAASA,WAAT,QAA4B,OAA5B;AACA,SAASC,SAAT,QAA0B,+BAA1B;AAEA,SAASC,MAAT,QAAuB,QAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAAQC,mBAAR,EAA6BC,sBAA7B,EAAqDC,oBAArD,QAAgF,eAAhF;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,SAASC,aAAT,EAAwBC,OAAxB,EAAiCC,UAAjC,EAA6CC,aAA7C,EAA4DC,cAA5D,EAA4EC,OAA5E,EAAqFC,eAArF,EAAsGC,WAAtG,QAAyH,eAAzH,C,CAEA;;AACA,OAAO,MAAMC,UAAU,GAAIC,UAAD,IAA0B;AAAA;;AAClD,QAAMC,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAmClB,SAAS,EAAlD;AACA,QAAMmB,kBAAkB,GAAGZ,aAAa,EAAxC;AAEA,QAAMa,aAAa,GAAGrB,WAAW,CAAC,YAAY;AAC5C,QAAI;AACF,YAAMsB,EAAE,GAAG,MAAMf,OAAO,CAACU,UAAD,EAAaG,kBAAb,EAAiCD,OAAjC,CAAxB;AACAD,MAAAA,QAAQ,CAACb,sBAAsB,CAACc,OAAD,CAAvB,CAAR;AACA,aAAOG,EAAP;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF,GARgC,EAQ9B,CAACJ,OAAD,EAAUD,QAAV,EAAoBD,UAApB,EAAgCG,kBAAhC,CAR8B,CAAjC;AAUA,SAAO;AAAEI,IAAAA,SAAS,EAAEH;AAAb,GAAP;AACD,CAhBM,C,CAkBP;;GAlBaL,U;UACMb,W,EACwBF,S,EACdO,a;;;AAgB7B,OAAO,MAAMiB,cAAc,GAAG,CAACR,UAAD,EAAuBS,MAAvB,KAAkC;AAAA;;AAC9D,QAAMR,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAmClB,SAAS,EAAlD;AACA,QAAM0B,gBAAgB,GAAGZ,WAAW,EAApC;AAEA,QAAMM,aAAa,GAAGrB,WAAW,CAAC,YAAY;AAC5C,QAAI;AACF,YAAMsB,EAAE,GAAG,MAAMf,OAAO,CAACU,UAAD,EAAaU,gBAAb,EAA+BR,OAA/B,CAAxB;AACAD,MAAAA,QAAQ,CAACd,mBAAmB,CAACsB,MAAD,EAASP,OAAT,CAApB,CAAR;AACA,aAAOG,EAAP;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF,GARgC,EAQ9B,CAACJ,OAAD,EAAUD,QAAV,EAAoBD,UAApB,EAAgCU,gBAAhC,EAAkDD,MAAlD,CAR8B,CAAjC;AAUA,SAAO;AAAEF,IAAAA,SAAS,EAAEH;AAAb,GAAP;AACD,CAhBM;;IAAMI,c;UACMtB,W,EACwBF,S,EAChBc,W;;;AAe3B,OAAO,MAAMa,kBAAkB,GAAG,CAACX,UAAD,EAAuBS,MAAvB,KAAkC;AAAA;;AAClE,QAAMR,QAAQ,GAAGf,WAAW,EAA5B;AACA,QAAM;AAAEgB,IAAAA;AAAF,MAAmClB,SAAS,EAAlD;AACA,QAAM0B,gBAAgB,GAAGb,eAAe,CAACY,MAAD,CAAxC;AAEA,QAAML,aAAa,GAAGrB,WAAW,CAAC,YAAY;AAC5C,QAAI;AACF,YAAMsB,EAAE,GAAG,MAAMf,OAAO,CAACU,UAAD,EAAaU,gBAAb,EAA+BR,OAA/B,CAAxB;AACAD,MAAAA,QAAQ,CAACZ,oBAAoB,CAACoB,MAAD,EAASP,OAAT,CAArB,CAAR;AACA,aAAOG,EAAP;AACD,KAJD,CAIE,OAAOC,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF,GARgC,EAQ9B,CAACJ,OAAD,EAAUD,QAAV,EAAoBD,UAApB,EAAgCU,gBAAhC,EAAkDD,MAAlD,CAR8B,CAAjC;AAUA,SAAO;AAAEF,IAAAA,SAAS,EAAEH;AAAb,GAAP;AACD,CAhBM,C,CAiBP;;IAjBaO,kB;UACMzB,W,EACwBF,S,EAChBa,e;;;AAe3B,OAAO,MAAMe,iBAAiB,GAAG,MAAM;AAAA;;AACrC,QAAM;AAAEV,IAAAA;AAAF,MAAmClB,SAAS,EAAlD;AACA,QAAM6B,YAAY,GAAGrB,OAAO,EAA5B;AACA,QAAMsB,eAAe,GAAGrB,UAAU,EAAlC;AAEA,QAAMW,aAAa,GAAGrB,WAAW,CAAC,YAAY;AAC5C,QAAI;AACF,YAAMsB,EAAE,GAAG,MAAMf,OAAO,CAACuB,YAAD,EAAeC,eAAf,EAAgCZ,OAAhC,CAAxB;AACA,aAAOG,EAAP;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF,GAPgC,EAO9B,CAACJ,OAAD,EAAUW,YAAV,EAAwBC,eAAxB,CAP8B,CAAjC;AASA,SAAO;AAAEP,IAAAA,SAAS,EAAEH;AAAb,GAAP;AACD,CAfM,C,CAiBP;;IAjBaQ,iB;UAC8B5B,S,EACpBQ,O,EACGC,U;;;AAe1B,OAAO,MAAMsB,oBAAoB,GAAG,MAAM;AAAA;;AACxC,QAAM;AAAEb,IAAAA;AAAF,MAAmClB,SAAS,EAAlD;AACA,QAAM6B,YAAY,GAAGrB,OAAO,EAA5B;AACA,QAAMwB,kBAAkB,GAAGtB,aAAa,EAAxC;AAEA,QAAMU,aAAa,GAAGrB,WAAW,CAAC,YAAY;AAC5C,QAAI;AACF,YAAMsB,EAAE,GAAG,MAAMf,OAAO,CAACuB,YAAD,EAAeG,kBAAf,EAAmCd,OAAnC,CAAxB;AACA,aAAOG,EAAP;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF,GAPgC,EAO9B,CAACJ,OAAD,EAAUW,YAAV,EAAwBG,kBAAxB,CAP8B,CAAjC;AASA,SAAO;AAAET,IAAAA,SAAS,EAAEH;AAAb,GAAP;AACD,CAfM,C,CAiBP;;IAjBaW,oB;UAC8B/B,S,EACpBQ,O,EACME,a;;;AAe7B,OAAO,MAAMuB,qBAAqB,GAAG,MAAM;AAAA;;AACzC,QAAM;AAAEf,IAAAA;AAAF,MAAmClB,SAAS,EAAlD;AACA,QAAMkC,aAAa,GAAGtB,OAAO,EAA7B;AACA,QAAMuB,mBAAmB,GAAGxB,cAAc,EAA1C;AAEA,QAAMS,aAAa,GAAGrB,WAAW,CAAC,YAAY;AAC5C,QAAI;AACF,YAAMsB,EAAE,GAAG,MAAMf,OAAO,CAAC4B,aAAD,EAAgBC,mBAAhB,EAAqCjB,OAArC,CAAxB;AACA,aAAOG,EAAP;AACD,KAHD,CAGE,OAAOC,CAAP,EAAU;AACV,aAAO,KAAP;AACD;AACF,GAPgC,EAO9B,CAACJ,OAAD,EAAUgB,aAAV,EAAyBC,mBAAzB,CAP8B,CAAjC;AASA,SAAO;AAAEZ,IAAAA,SAAS,EAAEH;AAAb,GAAP;AACD,CAfM,C,CAiBP;;IAjBaa,qB;UAC8BjC,S,EACnBY,O,EACMD,c;;;AAe9B,OAAO,MAAMyB,aAAa,GAAG,CAACC,aAAD,EAA0BC,cAA1B,KAAqD;AAAA;;AAChF,QAAM;AAAEpB,IAAAA;AAAF,MAAclB,SAAS,EAA7B;AACA,QAAMuB,SAAS,GAAGxB,WAAW,CAAC,YAAY;AACxC,QAAI;AACF,YAAMsB,EAAE,GAAG,MAAMgB,aAAa,CAACE,OAAd,CACdjC,OADc,CACNgC,cADM,EACUrC,MAAM,CAACuC,SAAP,CAAiBC,UAD3B,EAEdC,IAFc,CAET;AAAEC,QAAAA,IAAI,EAAEzB;AAAR,OAFS,CAAjB;AAGA,aAAOG,EAAP;AACD,KALD,CAKE,MAAM;AACN,aAAO,KAAP;AACD;AACF,GAT4B,EAS1B,CAACH,OAAD,EAAUoB,cAAV,EAA0BD,aAA1B,CAT0B,CAA7B;AAWA,SAAOd,SAAP;AACD,CAdM;;IAAMa,a;UACSpC,S","sourcesContent":["import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { Contract } from 'web3-eth-contract'\nimport { ethers } from 'ethers'\nimport { useDispatch } from 'react-redux'\nimport {updateUserAllowance, fetchFarmUserDataAsync, updateUserAllowance2} from 'state/actions'\nimport { approve } from 'utils/callHelpers'\nimport { useMasterchef, useCake, useLottery, useMoneyWheel, useMoneyWheel2, useWone, useSousChefBurn, useAutoRvrs } from './useContract'\n\n// Approve a Farm\nexport const useApprove = (lpContract: Contract) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, masterChefContract, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, masterChefContract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve a Pool\nexport const useSousApprove = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useAutoRvrs()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n\nexport const useSousApproveBurn = (lpContract: Contract, sousId) => {\n  const dispatch = useDispatch()\n  const { account }: { account: string } = useWallet()\n  const sousChefContract = useSousChefBurn(sousId)\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(lpContract, sousChefContract, account)\n      dispatch(updateUserAllowance2(sousId, account))\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, dispatch, lpContract, sousChefContract, sousId])\n\n  return { onApprove: handleApprove }\n}\n// Approve the lottery\nexport const useLotteryApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const lotteryContract = useLottery()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, lotteryContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, lotteryContract])\n\n  return { onApprove: handleApprove }\n}\n\n/// Je moet in het token contract het wheel contract toestemming geven om namens jou tokens uit te mogen geven.\nexport const useMoneyWheelApprove = () => {\n  const { account }: { account: string } = useWallet()\n  const cakeContract = useCake()\n  const moneyWheelContract = useMoneyWheel()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(cakeContract, moneyWheelContract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, cakeContract, moneyWheelContract])\n\n  return { onApprove: handleApprove }\n}\n\n/// Approve the Money Wheel2\nexport const useMoneyWheel2Approve = () => {\n  const { account }: { account: string } = useWallet()\n  const jewelContract = useWone()\n  const moneyWheel2Contract = useMoneyWheel2()\n\n  const handleApprove = useCallback(async () => {\n    try {\n      const tx = await approve(jewelContract, moneyWheel2Contract, account)\n      return tx\n    } catch (e) {\n      return false\n    }\n  }, [account, jewelContract, moneyWheel2Contract])\n\n  return { onApprove: handleApprove }\n}\n\n// Approve an IFO\nexport const useIfoApprove = (tokenContract: Contract, spenderAddress: string) => {\n  const { account } = useWallet()\n  const onApprove = useCallback(async () => {\n    try {\n      const tx = await tokenContract.methods\n        .approve(spenderAddress, ethers.constants.MaxUint256)\n        .send({ from: account })\n      return tx\n    } catch {\n      return false\n    }\n  }, [account, spenderAddress, tokenContract])\n\n  return onApprove\n}\n"]},"metadata":{},"sourceType":"module"}