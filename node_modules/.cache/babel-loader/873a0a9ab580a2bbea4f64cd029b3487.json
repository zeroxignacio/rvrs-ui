{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\n\nconst useWithdrawalFeeTimer = (lastDepositedTime, withdrawalFeePeriod = 259200) => {\n  _s();\n\n  const [secondsRemaining, setSecondsRemaining] = useState(null);\n  const [hasUnstakingFee, setHasUnstakingFee] = useState(false);\n  const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000));\n  useEffect(() => {\n    const feeEndTime = lastDepositedTime + withdrawalFeePeriod;\n    const secondsRemainingCalc = feeEndTime - currentSeconds;\n    const doesUnstakingFeeApply = secondsRemainingCalc > 0;\n\n    if (doesUnstakingFeeApply) {\n      setSecondsRemaining(secondsRemainingCalc);\n      setHasUnstakingFee(true);\n    }\n\n    const tick = () => {\n      setCurrentSeconds(prevSeconds => prevSeconds + 1);\n    };\n\n    const timerInterval = setInterval(() => tick(), 1000);\n    return () => clearInterval(timerInterval);\n  }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds]);\n  return {\n    hasUnstakingFee,\n    secondsRemaining\n  };\n};\n\n_s(useWithdrawalFeeTimer, \"AKhu/nLNlDI69v08ggl2JO+xkc0=\");\n\nexport default useWithdrawalFeeTimer;","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Pools/components/useWithdrawFeeTimer.ts"],"names":["useEffect","useState","useWithdrawalFeeTimer","lastDepositedTime","withdrawalFeePeriod","secondsRemaining","setSecondsRemaining","hasUnstakingFee","setHasUnstakingFee","currentSeconds","setCurrentSeconds","Math","floor","Date","now","feeEndTime","secondsRemainingCalc","doesUnstakingFeeApply","tick","prevSeconds","timerInterval","setInterval","clearInterval"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;;AAEA,MAAMC,qBAAqB,GAAG,CAACC,iBAAD,EAA4BC,mBAAmB,GAAG,MAAlD,KAA6D;AAAA;;AACvF,QAAM,CAACC,gBAAD,EAAmBC,mBAAnB,IAA0CL,QAAQ,CAAC,IAAD,CAAxD;AACA,QAAM,CAACM,eAAD,EAAkBC,kBAAlB,IAAwCP,QAAQ,CAAC,KAAD,CAAtD;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAACU,IAAI,CAACC,KAAL,CAAWC,IAAI,CAACC,GAAL,KAAa,IAAxB,CAAD,CAApD;AAEAd,EAAAA,SAAS,CAAC,MAAM;AACZ,UAAMe,UAAU,GAAGZ,iBAAiB,GAAGC,mBAAvC;AACA,UAAMY,oBAAoB,GAAGD,UAAU,GAAGN,cAA1C;AACA,UAAMQ,qBAAqB,GAAGD,oBAAoB,GAAG,CAArD;;AACA,QAAIC,qBAAJ,EAA2B;AACvBX,MAAAA,mBAAmB,CAACU,oBAAD,CAAnB;AACAR,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACH;;AACD,UAAMU,IAAI,GAAG,MAAM;AACfR,MAAAA,iBAAiB,CAACS,WAAW,IAAIA,WAAW,GAAG,CAA9B,CAAjB;AACH,KAFD;;AAGA,UAAMC,aAAa,GAAGC,WAAW,CAAC,MAAMH,IAAI,EAAX,EAAe,IAAf,CAAjC;AACA,WAAO,MAAMI,aAAa,CAACF,aAAD,CAA1B;AACH,GAbQ,EAaN,CAACjB,iBAAD,EAAoBC,mBAApB,EAAyCE,mBAAzC,EAA8DG,cAA9D,CAbM,CAAT;AAeA,SAAO;AAAEF,IAAAA,eAAF;AAAmBF,IAAAA;AAAnB,GAAP;AACH,CArBD;;GAAMH,qB;;AAuBN,eAAeA,qBAAf","sourcesContent":["import { useEffect, useState } from 'react';\n\nconst useWithdrawalFeeTimer = (lastDepositedTime: number, withdrawalFeePeriod = 259200) => {\n    const [secondsRemaining, setSecondsRemaining] = useState(null);\n    const [hasUnstakingFee, setHasUnstakingFee] = useState(false);\n    const [currentSeconds, setCurrentSeconds] = useState(Math.floor(Date.now() / 1000));\n\n    useEffect(() => {\n        const feeEndTime = lastDepositedTime + withdrawalFeePeriod;\n        const secondsRemainingCalc = feeEndTime - currentSeconds;\n        const doesUnstakingFeeApply = secondsRemainingCalc > 0;\n        if (doesUnstakingFeeApply) {\n            setSecondsRemaining(secondsRemainingCalc);\n            setHasUnstakingFee(true);\n        }\n        const tick = () => {\n            setCurrentSeconds(prevSeconds => prevSeconds + 1);\n        };\n        const timerInterval = setInterval(() => tick(), 1000);\n        return () => clearInterval(timerInterval);\n    }, [lastDepositedTime, withdrawalFeePeriod, setSecondsRemaining, currentSeconds]);\n\n    return { hasUnstakingFee, secondsRemaining };\n};\n\nexport default useWithdrawalFeeTimer;"]},"metadata":{},"sourceType":"module"}