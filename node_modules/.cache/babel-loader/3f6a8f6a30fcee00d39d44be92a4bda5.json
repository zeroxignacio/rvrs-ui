{"ast":null,"code":"var _jsxFileName = \"/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Pools/components/WithdrawModal.tsx\",\n    _s = $RefreshSig$();\n\nimport BigNumber from 'bignumber.js';\nimport React, { useCallback, useMemo, useState } from 'react';\nimport { Modal } from '@pancakeswap-libs/uikit';\nimport ModalActions from 'components/ModalActions';\nimport styled from 'styled-components';\nimport TokenInput from '../../../components/TokenInput';\nimport useI18n from '../../../hooks/useI18n';\nimport { getFullDisplayBalance } from '../../../utils/formatBalance';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DEFAULT_TOKEN_DECIMALS = new BigNumber(10).pow(18);\nconst StyledBtn = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #ffff !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 400;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 108px;\n  padding: 25px;\n`;\n_c = StyledBtn;\nconst StyledBtn2 = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #ffff !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 600;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 138px;\n  padding: 25px;\n\n  text-shadow: 0px 0px 10px #fff;\n  box-shadow: 0px 0px 10px #fff;\n  `;\n_c2 = StyledBtn2;\n\nconst WithdrawModal = ({\n  onConfirm,\n  onDismiss,\n  max,\n  tokenName = '',\n  pricePerShare = DEFAULT_TOKEN_DECIMALS\n}) => {\n  _s();\n\n  const [val, setVal] = useState('');\n  const [pendingTx, setPendingTx] = useState(false);\n  const TranslateString = useI18n();\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max);\n  }, [max]);\n  const handleChange = useCallback(e => {\n    setVal(e.currentTarget.value);\n  }, [setVal]);\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance);\n  }, [fullBalance, setVal]);\n\n  const getSharesFromAmount = amount => {\n    const shares = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMALS).div(pricePerShare);\n    console.log('getSharesFromAmount', pricePerShare, amount, shares.toString());\n    return shares.toFixed(18).toString();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    title: `Unstake ${tokenName}`,\n    onDismiss: onDismiss,\n    children: [/*#__PURE__*/_jsxDEV(TokenInput, {\n      onSelectMax: handleSelectMax,\n      onChange: handleChange,\n      value: val,\n      max: fullBalance,\n      symbol: tokenName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ModalActions, {\n      children: [/*#__PURE__*/_jsxDEV(StyledBtn2, {\n        onClick: onDismiss,\n        style: {\n          justifyContent: \"center\"\n        },\n        children: TranslateString(4162, 'Cancel (3, 3)')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(StyledBtn, {\n        style: {\n          justifyContent: \"center\"\n        },\n        disabled: pendingTx,\n        onClick: async () => {\n          setPendingTx(true);\n          await onConfirm(getSharesFromAmount(val));\n          setPendingTx(false);\n          onDismiss();\n        },\n        children: pendingTx ? TranslateString(4828, '.....') : TranslateString(4164, 'Unstake')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 5\n  }, this);\n};\n\n_s(WithdrawModal, \"6CJIGJ2Y3KmfnLsU3NCO1RJwS2U=\", false, function () {\n  return [useI18n];\n});\n\n_c3 = WithdrawModal;\nconst WarningWithdraw = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${props => props.theme.colors.primary};\n`;\nexport default WithdrawModal;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"StyledBtn\");\n$RefreshReg$(_c2, \"StyledBtn2\");\n$RefreshReg$(_c3, \"WithdrawModal\");","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/views/Pools/components/WithdrawModal.tsx"],"names":["BigNumber","React","useCallback","useMemo","useState","Modal","ModalActions","styled","TokenInput","useI18n","getFullDisplayBalance","DEFAULT_TOKEN_DECIMALS","pow","StyledBtn","button","StyledBtn2","WithdrawModal","onConfirm","onDismiss","max","tokenName","pricePerShare","val","setVal","pendingTx","setPendingTx","TranslateString","fullBalance","handleChange","e","currentTarget","value","handleSelectMax","getSharesFromAmount","amount","shares","times","div","console","log","toString","toFixed","justifyContent","WarningWithdraw","props","theme","colors","primary"],"mappings":"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","sourcesContent":["import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Button, Modal } from '@pancakeswap-libs/uikit'\nimport ModalActions from 'components/ModalActions'\nimport styled from 'styled-components'\nimport TokenInput from '../../../components/TokenInput'\nimport useI18n from '../../../hooks/useI18n'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\n\nconst DEFAULT_TOKEN_DECIMALS = new BigNumber(10).pow(18)\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  pricePerShare?: BigNumber\n  tokenName?: string\n}\n\nconst StyledBtn = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #ffff !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 400;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 108px;\n  padding: 25px;\n`\n\nconst StyledBtn2 = styled.button`\n  -webkit-box-align: center;\n  align-items: center;\n  background-color: rgba(0, 0, 0,0) !important;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #ffff !important;\n  border-radius: 10px;\n  color: #ffff;\n  font-size: 15px;\n  font-weight: 600;\n  width: 100%;\n  display: inline-flex;\n  min-height: 18px;\n  max-height: 30px;\n  max-width: 138px;\n  padding: 25px;\n\n  text-shadow: 0px 0px 10px #fff;\n  box-shadow: 0px 0px 10px #fff;\n  `\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '', pricePerShare= DEFAULT_TOKEN_DECIMALS }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const TranslateString = useI18n()\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  const getSharesFromAmount = (amount) => {\n      const shares = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMALS).div(pricePerShare)\n      console.log('getSharesFromAmount', pricePerShare, amount, shares.toString())\n      return shares.toFixed(18).toString()\n  }\n\n  return (\n    <Modal title={`Unstake ${tokenName}` } onDismiss={onDismiss}>\n\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <StyledBtn2 \n          onClick={onDismiss}\n          style={{justifyContent:\"center\" }}>\n\n          {TranslateString(4162, 'Cancel (3, 3)')}\n        </StyledBtn2>\n        <StyledBtn\n          style={{justifyContent:\"center\" }}\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(getSharesFromAmount(val))\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? TranslateString(4828, '.....') : TranslateString(4164, 'Unstake')}\n        </StyledBtn>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nconst WarningWithdraw = styled.div`\n  text-align: left;\n  overflow-y: auto;\n  max-height: 400px;\n  color: ${(props) => props.theme.colors.primary};\n`\n\nexport default WithdrawModal\n"]},"metadata":{},"sourceType":"module"}