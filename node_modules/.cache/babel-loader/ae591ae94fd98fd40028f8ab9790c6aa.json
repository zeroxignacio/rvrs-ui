{"ast":null,"code":"import React,{useEffect,Suspense,lazy}from'react';import{BrowserRouter as Router,Route,Switch}from'react-router-dom';import{useWallet}from'@binance-chain/bsc-use-wallet';import{ResetCSS}from'@pancakeswap-libs/uikit';import BigNumber from'bignumber.js';import{useFetchPublicData}from'state/hooks';import GlobalStyle from'./style/Global';import NavBar from'./components/NavBar';// Route-based code splitting\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var Farms=/*#__PURE__*/lazy(function(){return import('./views/Farms');});var Pools2=/*#__PURE__*/lazy(function(){return import('./views/Pools2');});var Pools=/*#__PURE__*/lazy(function(){return import('./views/Pools');});var NotFound=/*#__PURE__*/lazy(function(){return import('./views/NotFound');});// This config is required for number formating\nBigNumber.config({EXPONENTIAL_AT:1000,DECIMAL_PLACES:80});var App=function App(){var _useWallet=useWallet(),account=_useWallet.account,connect=_useWallet.connect;useEffect(function(){if(!account&&window.localStorage.getItem('accountStatus')){connect('injected');}},[account,connect]);useFetchPublicData();return/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(ResetCSS,{}),/*#__PURE__*/_jsx(GlobalStyle,{}),/*#__PURE__*/_jsx(NavBar,{children:\".\"}),/*#__PURE__*/_jsx(Suspense,{fallback:true,children:/*#__PURE__*/_jsxs(Switch,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",exact:true,children:/*#__PURE__*/_jsx(Pools,{})}),/*#__PURE__*/_jsx(Route,{path:\"/reverseum\",children:/*#__PURE__*/_jsx(Pools2,{})}),/*#__PURE__*/_jsx(Route,{path:\"/bonding\",children:/*#__PURE__*/_jsx(Pools2,{})}),/*#__PURE__*/_jsx(Route,{path:\"/farm\",children:/*#__PURE__*/_jsx(Farms,{})}),/*#__PURE__*/_jsx(Route,{path:\"/stake\",children:/*#__PURE__*/_jsx(Pools,{})}),/*#__PURE__*/_jsx(Route,{component:NotFound})]})})]});};export default/*#__PURE__*/React.memo(App);","map":{"version":3,"sources":["/Users/ignacio/Documents/GitHub/reverse-frontend/src/App.tsx"],"names":["React","useEffect","Suspense","lazy","BrowserRouter","Router","Route","Switch","useWallet","ResetCSS","BigNumber","useFetchPublicData","GlobalStyle","NavBar","Farms","Pools2","Pools","NotFound","config","EXPONENTIAL_AT","DECIMAL_PLACES","App","account","connect","window","localStorage","getItem","memo"],"mappings":"AAAA,MAAOA,CAAAA,KAAP,EAAgBC,SAAhB,CAA2BC,QAA3B,CAAqCC,IAArC,KAAiD,OAAjD,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAA4CC,KAA5C,CAAmDC,MAAnD,KAAiE,kBAAjE,CACA,OAASC,SAAT,KAA0B,+BAA1B,CACA,OAASC,QAAT,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,SAAP,KAAsB,cAAtB,CACA,OAASC,kBAAT,KAAmC,aAAnC,CACA,MAAOC,CAAAA,WAAP,KAAwB,gBAAxB,CACA,MAAOC,CAAAA,MAAP,KAAmB,qBAAnB,CAEA;wFACA,GAAMC,CAAAA,KAAK,cAAGX,IAAI,CAAC,iBAAM,QAAO,eAAP,CAAN,EAAD,CAAlB,CACA,GAAMY,CAAAA,MAAM,cAAGZ,IAAI,CAAC,iBAAM,QAAO,gBAAP,CAAN,EAAD,CAAnB,CACA,GAAMa,CAAAA,KAAK,cAAGb,IAAI,CAAC,iBAAM,QAAO,eAAP,CAAN,EAAD,CAAlB,CACA,GAAMc,CAAAA,QAAQ,cAAGd,IAAI,CAAC,iBAAM,QAAO,kBAAP,CAAN,EAAD,CAArB,CAEA;AACAO,SAAS,CAACQ,MAAV,CAAiB,CACfC,cAAc,CAAE,IADD,CAEfC,cAAc,CAAE,EAFD,CAAjB,EAKA,GAAMC,CAAAA,GAAa,CAAG,QAAhBA,CAAAA,GAAgB,EAAM,CAC1B,eAA6Bb,SAAS,EAAtC,CAAQc,OAAR,YAAQA,OAAR,CAAiBC,OAAjB,YAAiBA,OAAjB,CACAtB,SAAS,CAAC,UAAM,CACd,GAAI,CAACqB,OAAD,EAAYE,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,eAA5B,CAAhB,CAA8D,CAC5DH,OAAO,CAAC,UAAD,CAAP,CACD,CACF,CAJQ,CAIN,CAACD,OAAD,CAAUC,OAAV,CAJM,CAAT,CAMAZ,kBAAkB,GAElB,mBACE,MAAC,MAAD,yBACE,KAAC,QAAD,IADF,cAEE,KAAC,WAAD,IAFF,cAGE,KAAC,MAAD,gBAHF,cAMI,KAAC,QAAD,EAAU,QAAQ,KAAlB,uBACE,MAAC,MAAD,yBACE,KAAC,KAAD,EAAO,IAAI,CAAC,GAAZ,CAAgB,KAAK,KAArB,uBACA,KAAC,KAAD,IADA,EADF,cAKE,KAAC,KAAD,EAAO,IAAI,CAAC,YAAZ,uBACE,KAAC,MAAD,IADF,EALF,cASE,KAAC,KAAD,EAAO,IAAI,CAAC,UAAZ,uBACE,KAAC,MAAD,IADF,EATF,cAaE,KAAC,KAAD,EAAO,IAAI,CAAC,OAAZ,uBACE,KAAC,KAAD,IADF,EAbF,cAiBE,KAAC,KAAD,EAAO,IAAI,CAAC,QAAZ,uBACE,KAAC,KAAD,IADF,EAjBF,cAsBE,KAAC,KAAD,EAAO,SAAS,CAAEM,QAAlB,EAtBF,GADF,EANJ,GADF,CAmCD,CA7CD,CA+CA,2BAAejB,KAAK,CAAC2B,IAAN,CAAWN,GAAX,CAAf","sourcesContent":["import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport GlobalStyle from './style/Global'\nimport NavBar from './components/NavBar'\n\n// Route-based code splitting\nconst Farms = lazy(() => import('./views/Farms'))\nconst Pools2 = lazy(() => import('./views/Pools2'))\nconst Pools = lazy(() => import('./views/Pools'))\nconst NotFound = lazy(() => import('./views/NotFound'))\n\n// This config is required for number formating\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n\n  useFetchPublicData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <GlobalStyle />\n      <NavBar>\n        .\n      </NavBar>\n        <Suspense fallback>\n          <Switch>\n            <Route path=\"/\" exact>\n            <Pools/>\n\n            </Route>\n            <Route path=\"/reverseum\">\n              <Pools2 />\n\n              </Route>\n            <Route path=\"/bonding\">\n              <Pools2 />\n\n            </Route>\n            <Route path=\"/farm\">\n              <Farms />\n\n            </Route>\n            <Route path=\"/stake\">\n              <Pools/>\n            </Route>\n\n            \n            <Route component={NotFound} />\n          </Switch>\n        </Suspense>\n    </Router>\n  )\n}\n\nexport default React.memo(App)\n"]},"metadata":{},"sourceType":"module"}