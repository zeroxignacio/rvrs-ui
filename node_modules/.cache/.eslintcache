[{"/Users/ignacio/Documents/GitHub/reverse-frontend/src/index.tsx":"1","/Users/ignacio/Documents/GitHub/reverse-frontend/src/App.tsx":"2","/Users/ignacio/Documents/GitHub/reverse-frontend/src/Providers.tsx":"3","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/hooks.ts":"4","/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/getRpcUrl.ts":"5","/Users/ignacio/Documents/GitHub/reverse-frontend/src/contexts/RefreshContext.tsx":"6","/Users/ignacio/Documents/GitHub/reverse-frontend/src/contexts/BlockContext.tsx":"7","/Users/ignacio/Documents/GitHub/reverse-frontend/src/contexts/ThemeContext.tsx":"8","/Users/ignacio/Documents/GitHub/reverse-frontend/src/contexts/Localisation/languageContext.tsx":"9","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/actions.ts":"10","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/index.ts":"11","/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/types.ts":"12","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useI18n.ts":"13","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useRefresh.ts":"14","/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/addressHelpers.ts":"15","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useTokenBalance.ts":"16","/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/formatBalance.ts":"17","/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/web3.ts":"18","/Users/ignacio/Documents/GitHub/reverse-frontend/src/contexts/Localisation/translationsContext.ts":"19","/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/translateTextHelpers.ts":"20","/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/localisation/languageCodes.ts":"21","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/farms/index.ts":"22","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useBlock.ts":"23","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/farms/fetchFarmUser.ts":"24","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/farms/fetchFarms.ts":"25","/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/contracts.ts":"26","/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/erc20.ts":"27","/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/index.ts":"28","/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/farms.ts":"29","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useHarvest.ts":"30","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useUnstake.ts":"31","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useStake.ts":"32","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useApprove.ts":"33","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useContract.ts":"34","/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/multicall.ts":"35","/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/getLiquidityUrlPathParts.ts":"36","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useFarmsWithBalance.ts":"37","/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/callHelpers.ts":"38","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/Input/index.ts":"39","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useWeb3.ts":"40","/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/index.ts":"41","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/navigation/nav.tsx":"42","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/NotFound.tsx":"43","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/airdrop/index.ts":"44","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/stake/index.ts":"45","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Bonds/index.ts":"46","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/index.ts":"47","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/bonds/index.ts":"48","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/Style.tsx":"49","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Dashboard/index.tsx":"50","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Airdrops/index.tsx":"51","/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/rvrs.ts":"52","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/stake/fetchPools.ts":"53","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/airdrop/fetchAirdropUser.ts":"54","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/stake/fetchPoolsUser.ts":"55","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/bonds/fetchPools.ts":"56","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/bonds/fetchPoolsUser.ts":"57","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Bonds/bonds.tsx":"58","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/staking.tsx":"59","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Dashboard/dashboard.tsx":"60","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Airdrops/airdrops.tsx":"61","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/flex/index.tsx":"62","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/containers/page.tsx":"63","/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/stake.ts":"64","/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/bonds.ts":"65","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Bonds/card.tsx":"66","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/card.tsx":"67","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/WalletModal/index.tsx":"68","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useAirdropClaim.ts":"69","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/flex/Flex.tsx":"70","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/containers/activeInactiveContainer.tsx":"71","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/claimButtonDisabled.tsx":"72","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/bondButton.tsx":"73","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/containers/airdropContainer.tsx":"74","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/activeInactiveButton.tsx":"75","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/containers/bondsContainer.tsx":"76","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/bondModal.tsx":"77","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/bondButtonDisabled.tsx":"78","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/claimButton.tsx":"79","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/WalletModal/useWalletModal.tsx":"80","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/divider.tsx":"81","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/claimAirdropButtonDisabled.tsx":"82","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/claimAirdropButton.tsx":"83","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/typography/typographyBold.tsx":"84","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/typography/typography.tsx":"85","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/typography/typographyTitle.tsx":"86","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/containers/contentCard.tsx":"87","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/containers/contentCardMain.tsx":"88","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/modals/withdrawModal.tsx":"89","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/containers/contentCard2.tsx":"90","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/containers/titleCard.tsx":"91","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/containers/container.tsx":"92","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/modals/stakeModal.tsx":"93","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/cards/bonds/contentCard.tsx":"94","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/cards/bonds/headerCard.tsx":"95","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/cards/airdrop/contentCard.tsx":"96","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/cards/airdrop/titleCard.tsx":"97","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/cards/airdrop/contentCardMain.tsx":"98","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/Skeleton/index.tsx":"99","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/WalletModal/ConnectModal.tsx":"100","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/WalletModal/AccountModal.tsx":"101","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/modal/input/index.ts":"102","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/Skeleton/Skeleton.tsx":"103","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/modal/Modal.tsx":"104","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/modalButton.tsx":"105","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/WalletModal/config.tsx":"106","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/WalletModal/WalletCard.tsx":"107","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/modal/modalActions/index.ts":"108","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/Skeleton/types.ts":"109","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/modal/input/inputContents.tsx":"110","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/WalletModal/icons/Metamask.tsx":"111","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/modal/index.tsx":"112","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/modal/modalActions/ModalActions.tsx":"113","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/modal/input/input.tsx":"114","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/navigation/footer.tsx":"115","/Users/ignacio/Documents/GitHub/rvrs-ui/src/index.tsx":"116","/Users/ignacio/Documents/GitHub/rvrs-ui/src/App.tsx":"117","/Users/ignacio/Documents/GitHub/rvrs-ui/src/Providers.tsx":"118","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/NotFound.tsx":"119","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/navigation/nav.tsx":"120","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Bonds/index.ts":"121","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/index.ts":"122","/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/hooks.ts":"123","/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/getRpcUrl.ts":"124","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Airdrops/index.tsx":"125","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Dashboard/index.tsx":"126","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/navigation/footer.tsx":"127","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/Style.tsx":"128","/Users/ignacio/Documents/GitHub/rvrs-ui/src/contexts/RefreshContext.tsx":"129","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/containers/page.tsx":"130","/Users/ignacio/Documents/GitHub/rvrs-ui/src/contexts/BlockContext.tsx":"131","/Users/ignacio/Documents/GitHub/rvrs-ui/src/contexts/Localisation/languageContext.tsx":"132","/Users/ignacio/Documents/GitHub/rvrs-ui/src/contexts/ThemeContext.tsx":"133","/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/index.ts":"134","/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/actions.ts":"135","/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/constants/types.ts":"136","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Bonds/bonds.tsx":"137","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/staking.tsx":"138","/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/addressHelpers.ts":"139","/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/formatBalance.ts":"140","/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/constants/rvrs.ts":"141","/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useTokenBalance.ts":"142","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Airdrops/airdrops.tsx":"143","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Dashboard/dashboard.tsx":"144","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/flex/index.tsx":"145","/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useRefresh.ts":"146","/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/web3.ts":"147","/Users/ignacio/Documents/GitHub/rvrs-ui/src/contexts/Localisation/translationsContext.ts":"148","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/WalletModal/index.tsx":"149","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/card.tsx":"150","/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useAirdropClaim.ts":"151","/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/localisation/languageCodes.ts":"152","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/flex/Flex.tsx":"153","/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/farms/index.ts":"154","/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/stake/index.ts":"155","/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/airdrop/index.ts":"156","/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/bonds/index.ts":"157","/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useBlock.ts":"158","/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/constants/contracts.ts":"159","/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useContract.ts":"160","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/WalletModal/useWalletModal.tsx":"161","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/containers/airdropContainer.tsx":"162","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/containers/container.tsx":"163","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/typography/typographyBold.tsx":"164","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/typography/typography.tsx":"165","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/typography/typographyTitle.tsx":"166","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/claimAirdropButton.tsx":"167","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/containers/titleCard.tsx":"168","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/containers/contentCardMain.tsx":"169","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/containers/contentCard.tsx":"170","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/containers/contentCard2.tsx":"171","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/modals/stakeModal.tsx":"172","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/modals/withdrawModal.tsx":"173","/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/farms/fetchFarmUser.ts":"174","/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/farms/fetchFarms.ts":"175","/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/index.ts":"176","/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/airdrop/fetchAirdropUser.ts":"177","/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/bonds/fetchPoolsUser.ts":"178","/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/multicall.ts":"179","/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/bonds/fetchPools.ts":"180","/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/stake/fetchPools.ts":"181","/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/callHelpers.ts":"182","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/Skeleton/index.tsx":"183","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/WalletModal/AccountModal.tsx":"184","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/WalletModal/ConnectModal.tsx":"185","/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useUnstake.ts":"186","/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useStake.ts":"187","/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useApprove.ts":"188","/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/constants/farms.ts":"189","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/Skeleton/Skeleton.tsx":"190","/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/stake/fetchPoolsUser.ts":"191","/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useWeb3.ts":"192","/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/translateTextHelpers.ts":"193","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/modal/input/index.ts":"194","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/WalletModal/config.tsx":"195","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/WalletModal/WalletCard.tsx":"196","/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/constants/index.ts":"197","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/modalButton.tsx":"198","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/modal/Modal.tsx":"199","/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/constants/bonds.ts":"200","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/Skeleton/types.ts":"201","/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/constants/stake.ts":"202","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/modal/modalActions/index.ts":"203","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/modal/input/inputContents.tsx":"204","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/WalletModal/icons/Metamask.tsx":"205","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/modal/index.tsx":"206","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/modal/modalActions/ModalActions.tsx":"207","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/Input/index.ts":"208","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/modal/input/input.tsx":"209","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Bonds/card.tsx":"210","/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/erc20.ts":"211","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/divider.tsx":"212","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/claimAirdropButtonDisabled.tsx":"213","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/cards/airdrop/titleCard.tsx":"214","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/cards/airdrop/contentCardMain.tsx":"215","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/cards/airdrop/contentCard.tsx":"216","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/activeInactiveButton.tsx":"217","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/containers/activeInactiveContainer.tsx":"218","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/claimButton.tsx":"219","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/bondButtonDisabled.tsx":"220","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/bondButton.tsx":"221","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/claimButtonDisabled.tsx":"222","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/bondModal.tsx":"223","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/containers/bondsContainer.tsx":"224","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/cards/bonds/headerCard.tsx":"225","/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/cards/bonds/contentCard.tsx":"226","/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useHarvest.ts":"227","/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useI18n.ts":"228"},{"size":265,"mtime":1648390449745,"results":"229","hashOfConfig":"230"},{"size":1714,"mtime":1648393357141,"results":"231","hashOfConfig":"230"},{"size":1354,"mtime":1648390449738,"results":"232","hashOfConfig":"230"},{"size":7963,"mtime":1648390706665,"results":"233","hashOfConfig":"230"},{"size":318,"mtime":1648390449747,"results":"234","hashOfConfig":"230"},{"size":912,"mtime":1648390449744,"results":"235","hashOfConfig":"230"},{"size":746,"mtime":1648390449743,"results":"236","hashOfConfig":"230"},{"size":909,"mtime":1648390449744,"results":"237","hashOfConfig":"230"},{"size":3183,"mtime":1648390449743,"results":"238","hashOfConfig":"230"},{"size":488,"mtime":1648390706664,"results":"239","hashOfConfig":"230"},{"size":405,"mtime":1648390706665,"results":"240","hashOfConfig":"230"},{"size":3927,"mtime":1648390706661,"results":"241","hashOfConfig":"230"},{"size":547,"mtime":1648390449745,"results":"242","hashOfConfig":"230"},{"size":251,"mtime":1648390449745,"results":"243","hashOfConfig":"230"},{"size":1352,"mtime":1648390706666,"results":"244","hashOfConfig":"230"},{"size":3559,"mtime":1648390449745,"results":"245","hashOfConfig":"230"},{"size":390,"mtime":1648390449747,"results":"246","hashOfConfig":"230"},{"size":748,"mtime":1648390449748,"results":"247","hashOfConfig":"230"},{"size":391,"mtime":1648390449744,"results":"248","hashOfConfig":"230"},{"size":1574,"mtime":1648390449748,"results":"249","hashOfConfig":"230"},{"size":1992,"mtime":1648390449743,"results":"250","hashOfConfig":"230"},{"size":3113,"mtime":1648390706665,"results":"251","hashOfConfig":"230"},{"size":205,"mtime":1648390449744,"results":"252","hashOfConfig":"230"},{"size":2506,"mtime":1648390706664,"results":"253","hashOfConfig":"230"},{"size":5109,"mtime":1648390706665,"results":"254","hashOfConfig":"230"},{"size":2978,"mtime":1648390706661,"results":"255","hashOfConfig":"230"},{"size":1067,"mtime":1648390449747,"results":"256","hashOfConfig":"230"},{"size":344,"mtime":1648390706661,"results":"257","hashOfConfig":"230"},{"size":1425,"mtime":1648390706661,"results":"258","hashOfConfig":"230"},{"size":2608,"mtime":1648390449745,"results":"259","hashOfConfig":"230"},{"size":2774,"mtime":1648390449745,"results":"260","hashOfConfig":"230"},{"size":2153,"mtime":1648390449745,"results":"261","hashOfConfig":"230"},{"size":4158,"mtime":1648390449744,"results":"262","hashOfConfig":"230"},{"size":4288,"mtime":1648390706662,"results":"263","hashOfConfig":"230"},{"size":939,"mtime":1648390449748,"results":"264","hashOfConfig":"230"},{"size":573,"mtime":1648390449747,"results":"265","hashOfConfig":"266"},{"size":1342,"mtime":1648390706662,"results":"267","hashOfConfig":"266"},{"size":4755,"mtime":1648390706666,"results":"268","hashOfConfig":"230"},{"size":132,"mtime":1648390706655,"results":"269","hashOfConfig":"230"},{"size":992,"mtime":1648390449745,"results":"270","hashOfConfig":"230"},{"size":275,"mtime":1648390706661,"results":"271","hashOfConfig":"230"},{"size":4786,"mtime":1648390706660,"results":"272","hashOfConfig":"230"},{"size":168,"mtime":1648390706663,"results":"273","hashOfConfig":"230"},{"size":1389,"mtime":1648390706664,"results":"274","hashOfConfig":"230"},{"size":4145,"mtime":1648390706665,"results":"275","hashOfConfig":"230"},{"size":34,"mtime":1648390706662,"results":"276","hashOfConfig":"230"},{"size":36,"mtime":1648390706663,"results":"277","hashOfConfig":"230"},{"size":4015,"mtime":1648390706664,"results":"278","hashOfConfig":"230"},{"size":826,"mtime":1648390706656,"results":"279","hashOfConfig":"230"},{"size":38,"mtime":1648390706663,"results":"280","hashOfConfig":"230"},{"size":37,"mtime":1648390706662,"results":"281","hashOfConfig":"230"},{"size":3629,"mtime":1648390706661,"results":"282","hashOfConfig":"230"},{"size":811,"mtime":1648390706665,"results":"283","hashOfConfig":"230"},{"size":905,"mtime":1648390706664,"results":"284","hashOfConfig":"230"},{"size":1960,"mtime":1648390706665,"results":"285","hashOfConfig":"230"},{"size":3713,"mtime":1648390706664,"results":"286","hashOfConfig":"230"},{"size":3392,"mtime":1648390706664,"results":"287","hashOfConfig":"230"},{"size":3628,"mtime":1648390706662,"results":"288","hashOfConfig":"230"},{"size":3086,"mtime":1648390706664,"results":"289","hashOfConfig":"230"},{"size":5201,"mtime":1648390706663,"results":"290","hashOfConfig":"230"},{"size":5433,"mtime":1648393364910,"results":"291","hashOfConfig":"230"},{"size":84,"mtime":1648390706659,"results":"292","hashOfConfig":"230"},{"size":253,"mtime":1648390706658,"results":"293","hashOfConfig":"230"},{"size":955,"mtime":1648390706661,"results":"294","hashOfConfig":"230"},{"size":18277,"mtime":1648390706661,"results":"295","hashOfConfig":"230"},{"size":11534,"mtime":1648390706662,"results":"296","hashOfConfig":"230"},{"size":9556,"mtime":1648390706663,"results":"297","hashOfConfig":"230"},{"size":95,"mtime":1648390706656,"results":"298","hashOfConfig":"230"},{"size":734,"mtime":1648390706661,"results":"299","hashOfConfig":"230"},{"size":227,"mtime":1648390706658,"results":"300","hashOfConfig":"230"},{"size":430,"mtime":1648390706658,"results":"301","hashOfConfig":"230"},{"size":441,"mtime":1648390706657,"results":"302","hashOfConfig":"230"},{"size":504,"mtime":1648390706657,"results":"303","hashOfConfig":"230"},{"size":486,"mtime":1648390706658,"results":"304","hashOfConfig":"230"},{"size":275,"mtime":1648390706657,"results":"305","hashOfConfig":"230"},{"size":394,"mtime":1648390706658,"results":"306","hashOfConfig":"230"},{"size":2901,"mtime":1648390706657,"results":"307","hashOfConfig":"230"},{"size":515,"mtime":1648390706657,"results":"308","hashOfConfig":"230"},{"size":472,"mtime":1648390706657,"results":"309","hashOfConfig":"230"},{"size":665,"mtime":1648390706657,"results":"310","hashOfConfig":"230"},{"size":236,"mtime":1648390706657,"results":"311","hashOfConfig":"230"},{"size":526,"mtime":1648390706657,"results":"312","hashOfConfig":"230"},{"size":865,"mtime":1648390706657,"results":"313","hashOfConfig":"230"},{"size":150,"mtime":1648390706660,"results":"314","hashOfConfig":"230"},{"size":162,"mtime":1648390706660,"results":"315","hashOfConfig":"230"},{"size":224,"mtime":1648390706660,"results":"316","hashOfConfig":"230"},{"size":358,"mtime":1648390706663,"results":"317","hashOfConfig":"230"},{"size":611,"mtime":1648390706663,"results":"318","hashOfConfig":"230"},{"size":2191,"mtime":1648390706663,"results":"319","hashOfConfig":"230"},{"size":380,"mtime":1648390706663,"results":"320","hashOfConfig":"230"},{"size":358,"mtime":1648390706663,"results":"321","hashOfConfig":"230"},{"size":472,"mtime":1648390706663,"results":"322","hashOfConfig":"230"},{"size":1868,"mtime":1648390706663,"results":"323","hashOfConfig":"230"},{"size":257,"mtime":1648390706658,"results":"324","hashOfConfig":"230"},{"size":278,"mtime":1648390706658,"results":"325","hashOfConfig":"230"},{"size":403,"mtime":1648390706657,"results":"326","hashOfConfig":"230"},{"size":358,"mtime":1648390706658,"results":"327","hashOfConfig":"230"},{"size":411,"mtime":1648390706657,"results":"328","hashOfConfig":"230"},{"size":96,"mtime":1648390706656,"results":"329","hashOfConfig":"230"},{"size":751,"mtime":1648390706656,"results":"330","hashOfConfig":"230"},{"size":961,"mtime":1648390706656,"results":"331","hashOfConfig":"230"},{"size":42,"mtime":1648390706659,"results":"332","hashOfConfig":"230"},{"size":1419,"mtime":1648390706656,"results":"333","hashOfConfig":"230"},{"size":1604,"mtime":1648390706659,"results":"334","hashOfConfig":"230"},{"size":564,"mtime":1648390706657,"results":"335","hashOfConfig":"230"},{"size":267,"mtime":1648390706656,"results":"336","hashOfConfig":"230"},{"size":1962,"mtime":1648390706656,"results":"337","hashOfConfig":"230"},{"size":41,"mtime":1648390706659,"results":"338","hashOfConfig":"230"},{"size":448,"mtime":1648390706656,"results":"339","hashOfConfig":"230"},{"size":1946,"mtime":1648390706659,"results":"340","hashOfConfig":"230"},{"size":4256,"mtime":1648390706656,"results":"341","hashOfConfig":"230"},{"size":35,"mtime":1648390706659,"results":"342","hashOfConfig":"230"},{"size":563,"mtime":1648390706659,"results":"343","hashOfConfig":"230"},{"size":993,"mtime":1648390706659,"results":"344","hashOfConfig":"230"},{"size":2208,"mtime":1648390706660,"results":"345","hashOfConfig":"230"},{"size":265,"mtime":1648390449745,"results":"346","hashOfConfig":"347"},{"size":1714,"mtime":1648393357141,"results":"348","hashOfConfig":"347"},{"size":1354,"mtime":1648390449738,"results":"349","hashOfConfig":"347"},{"size":168,"mtime":1648390706663,"results":"350","hashOfConfig":"347"},{"size":4786,"mtime":1648390706660,"results":"351","hashOfConfig":"347"},{"size":34,"mtime":1648390706662,"results":"352","hashOfConfig":"347"},{"size":36,"mtime":1648390706663,"results":"353","hashOfConfig":"347"},{"size":7963,"mtime":1648390706665,"results":"354","hashOfConfig":"347"},{"size":318,"mtime":1648390449747,"results":"355","hashOfConfig":"347"},{"size":37,"mtime":1648390706662,"results":"356","hashOfConfig":"347"},{"size":38,"mtime":1648390706663,"results":"357","hashOfConfig":"347"},{"size":2208,"mtime":1648390706660,"results":"358","hashOfConfig":"347"},{"size":826,"mtime":1648390706656,"results":"359","hashOfConfig":"347"},{"size":912,"mtime":1648390449744,"results":"360","hashOfConfig":"347"},{"size":253,"mtime":1648390706658,"results":"361","hashOfConfig":"347"},{"size":746,"mtime":1648390449743,"results":"362","hashOfConfig":"347"},{"size":3183,"mtime":1648390449743,"results":"363","hashOfConfig":"347"},{"size":909,"mtime":1648390449744,"results":"364","hashOfConfig":"347"},{"size":405,"mtime":1648390706665,"results":"365","hashOfConfig":"347"},{"size":488,"mtime":1648390706664,"results":"366","hashOfConfig":"347"},{"size":3927,"mtime":1648390706661,"results":"367","hashOfConfig":"347"},{"size":3628,"mtime":1648390706662,"results":"368","hashOfConfig":"347"},{"size":3086,"mtime":1648390706664,"results":"369","hashOfConfig":"347"},{"size":1352,"mtime":1648390706666,"results":"370","hashOfConfig":"347"},{"size":390,"mtime":1648390449747,"results":"371","hashOfConfig":"347"},{"size":3629,"mtime":1648390706661,"results":"372","hashOfConfig":"347"},{"size":3559,"mtime":1648390449745,"results":"373","hashOfConfig":"347"},{"size":5433,"mtime":1648393364910,"results":"374","hashOfConfig":"347"},{"size":5201,"mtime":1648390706663,"results":"375","hashOfConfig":"347"},{"size":84,"mtime":1648390706659,"results":"376","hashOfConfig":"347"},{"size":251,"mtime":1648390449745,"results":"377","hashOfConfig":"347"},{"size":748,"mtime":1648407371709,"results":"378","hashOfConfig":"347"},{"size":391,"mtime":1648390449744,"results":"379","hashOfConfig":"347"},{"size":95,"mtime":1648390706656,"results":"380","hashOfConfig":"347"},{"size":9556,"mtime":1648390706663,"results":"381","hashOfConfig":"347"},{"size":734,"mtime":1648390706661,"results":"382","hashOfConfig":"347"},{"size":1992,"mtime":1648390449743,"results":"383","hashOfConfig":"347"},{"size":227,"mtime":1648390706658,"results":"384","hashOfConfig":"347"},{"size":3113,"mtime":1648390706665,"results":"385","hashOfConfig":"347"},{"size":4145,"mtime":1648390706665,"results":"386","hashOfConfig":"347"},{"size":1389,"mtime":1648390706664,"results":"387","hashOfConfig":"347"},{"size":4015,"mtime":1648390706664,"results":"388","hashOfConfig":"347"},{"size":205,"mtime":1648390449744,"results":"389","hashOfConfig":"347"},{"size":2978,"mtime":1648390706661,"results":"390","hashOfConfig":"347"},{"size":4288,"mtime":1648390706662,"results":"391","hashOfConfig":"347"},{"size":665,"mtime":1648390706657,"results":"392","hashOfConfig":"347"},{"size":486,"mtime":1648390706658,"results":"393","hashOfConfig":"347"},{"size":472,"mtime":1648390706663,"results":"394","hashOfConfig":"347"},{"size":150,"mtime":1648390706660,"results":"395","hashOfConfig":"347"},{"size":162,"mtime":1648390706660,"results":"396","hashOfConfig":"347"},{"size":224,"mtime":1648390706660,"results":"397","hashOfConfig":"347"},{"size":865,"mtime":1648390706657,"results":"398","hashOfConfig":"347"},{"size":358,"mtime":1648390706663,"results":"399","hashOfConfig":"347"},{"size":611,"mtime":1648390706663,"results":"400","hashOfConfig":"347"},{"size":358,"mtime":1648390706663,"results":"401","hashOfConfig":"347"},{"size":380,"mtime":1648390706663,"results":"402","hashOfConfig":"347"},{"size":1868,"mtime":1648390706663,"results":"403","hashOfConfig":"347"},{"size":2191,"mtime":1648390706663,"results":"404","hashOfConfig":"347"},{"size":2506,"mtime":1648390706664,"results":"405","hashOfConfig":"347"},{"size":5109,"mtime":1648390706665,"results":"406","hashOfConfig":"347"},{"size":344,"mtime":1648390706661,"results":"407","hashOfConfig":"347"},{"size":905,"mtime":1648390706664,"results":"408","hashOfConfig":"347"},{"size":3392,"mtime":1648390706664,"results":"409","hashOfConfig":"347"},{"size":939,"mtime":1648390449748,"results":"410","hashOfConfig":"347"},{"size":3713,"mtime":1648390706664,"results":"411","hashOfConfig":"347"},{"size":811,"mtime":1648390706665,"results":"412","hashOfConfig":"347"},{"size":4755,"mtime":1648390706666,"results":"413","hashOfConfig":"347"},{"size":96,"mtime":1648390706656,"results":"414","hashOfConfig":"347"},{"size":961,"mtime":1648390706656,"results":"415","hashOfConfig":"347"},{"size":751,"mtime":1648390706656,"results":"416","hashOfConfig":"347"},{"size":2774,"mtime":1648390449745,"results":"417","hashOfConfig":"347"},{"size":2153,"mtime":1648390449745,"results":"418","hashOfConfig":"347"},{"size":4158,"mtime":1648390449744,"results":"419","hashOfConfig":"347"},{"size":1425,"mtime":1648390706661,"results":"420","hashOfConfig":"347"},{"size":1419,"mtime":1648390706656,"results":"421","hashOfConfig":"347"},{"size":1960,"mtime":1648390706665,"results":"422","hashOfConfig":"347"},{"size":992,"mtime":1648390449745,"results":"423","hashOfConfig":"347"},{"size":1574,"mtime":1648390449748,"results":"424","hashOfConfig":"347"},{"size":42,"mtime":1648390706659,"results":"425","hashOfConfig":"347"},{"size":267,"mtime":1648390706656,"results":"426","hashOfConfig":"347"},{"size":1962,"mtime":1648390706656,"results":"427","hashOfConfig":"347"},{"size":275,"mtime":1648390706661,"results":"428","hashOfConfig":"347"},{"size":564,"mtime":1648390706657,"results":"429","hashOfConfig":"347"},{"size":1604,"mtime":1648390706659,"results":"430","hashOfConfig":"347"},{"size":18277,"mtime":1648390706661,"results":"431","hashOfConfig":"347"},{"size":448,"mtime":1648390706656,"results":"432","hashOfConfig":"347"},{"size":955,"mtime":1648390706661,"results":"433","hashOfConfig":"347"},{"size":41,"mtime":1648390706659,"results":"434","hashOfConfig":"347"},{"size":1946,"mtime":1648390706659,"results":"435","hashOfConfig":"347"},{"size":4256,"mtime":1648390706656,"results":"436","hashOfConfig":"347"},{"size":35,"mtime":1648390706659,"results":"437","hashOfConfig":"347"},{"size":563,"mtime":1648390706659,"results":"438","hashOfConfig":"347"},{"size":132,"mtime":1648390706655,"results":"439","hashOfConfig":"347"},{"size":993,"mtime":1648390706659,"results":"440","hashOfConfig":"347"},{"size":11534,"mtime":1648390706662,"results":"441","hashOfConfig":"347"},{"size":1067,"mtime":1648390449747,"results":"442","hashOfConfig":"347"},{"size":236,"mtime":1648390706657,"results":"443","hashOfConfig":"347"},{"size":526,"mtime":1648390706657,"results":"444","hashOfConfig":"347"},{"size":358,"mtime":1648390706658,"results":"445","hashOfConfig":"347"},{"size":411,"mtime":1648390706657,"results":"446","hashOfConfig":"347"},{"size":403,"mtime":1648390706657,"results":"447","hashOfConfig":"347"},{"size":275,"mtime":1648390706657,"results":"448","hashOfConfig":"347"},{"size":430,"mtime":1648390706658,"results":"449","hashOfConfig":"347"},{"size":472,"mtime":1648390706657,"results":"450","hashOfConfig":"347"},{"size":515,"mtime":1648390706657,"results":"451","hashOfConfig":"347"},{"size":504,"mtime":1648390706657,"results":"452","hashOfConfig":"347"},{"size":441,"mtime":1648390706657,"results":"453","hashOfConfig":"347"},{"size":2901,"mtime":1648390706657,"results":"454","hashOfConfig":"347"},{"size":394,"mtime":1648390706658,"results":"455","hashOfConfig":"347"},{"size":278,"mtime":1648390706658,"results":"456","hashOfConfig":"347"},{"size":257,"mtime":1648390706658,"results":"457","hashOfConfig":"347"},{"size":2608,"mtime":1648390449745,"results":"458","hashOfConfig":"347"},{"size":547,"mtime":1648390449745,"results":"459","hashOfConfig":"347"},{"filePath":"460","messages":"461","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},"auh2ss",{"filePath":"463","messages":"464","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"465","messages":"466","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"467","messages":"468","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469","usedDeprecatedRules":"462"},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"476","messages":"477","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"478","messages":"479","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480","usedDeprecatedRules":"462"},{"filePath":"481","messages":"482","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"483","messages":"484","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"485","messages":"486","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"487","messages":"488","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"489","messages":"490","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"491","messages":"492","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"493","messages":"494","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"495","messages":"496","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"497","messages":"498","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"499","messages":"500","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"501","messages":"502","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"503","messages":"504","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"505","messages":"506","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507","usedDeprecatedRules":"462"},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"522","messages":"523","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524","usedDeprecatedRules":"462"},{"filePath":"525","messages":"526","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"527","messages":"528","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529","usedDeprecatedRules":"462"},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"532","messages":"533","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534","usedDeprecatedRules":"462"},{"filePath":"535","messages":"536","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"537","messages":"538","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"539"},"udvlgd",{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"539"},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"550","messages":"551","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552","usedDeprecatedRules":"462"},{"filePath":"553","messages":"554","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"555","messages":"556","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"557","messages":"558","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559","usedDeprecatedRules":"462"},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"564","messages":"565","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566","usedDeprecatedRules":"462"},{"filePath":"567","messages":"568","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"569","messages":"570","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"571","messages":"572","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"573","messages":"574","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575","usedDeprecatedRules":"462"},{"filePath":"576","messages":"577","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578","usedDeprecatedRules":"462"},{"filePath":"579","messages":"580","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"581","messages":"582","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583","usedDeprecatedRules":"462"},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"588","messages":"589","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590","usedDeprecatedRules":"462"},{"filePath":"591","messages":"592","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593","usedDeprecatedRules":"462"},{"filePath":"594","messages":"595","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596","usedDeprecatedRules":"462"},{"filePath":"597","messages":"598","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"599","messages":"600","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"601","messages":"602","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"603","messages":"604","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"605","messages":"606","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"607","messages":"608","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609","usedDeprecatedRules":"462"},{"filePath":"610","messages":"611","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612","usedDeprecatedRules":"462"},{"filePath":"613","messages":"614","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"615","messages":"616","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"617","messages":"618","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"619","messages":"620","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"621","messages":"622","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"623","messages":"624","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"625","messages":"626","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"627","messages":"628","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"629","messages":"630","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"631","messages":"632","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"633","messages":"634","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"635","messages":"636","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"637","messages":"638","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"639","messages":"640","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"641","messages":"642","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"643","messages":"644","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"645","messages":"646","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"647","messages":"648","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"649","messages":"650","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"651","messages":"652","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"653","messages":"654","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655","usedDeprecatedRules":"462"},{"filePath":"656","messages":"657","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658","usedDeprecatedRules":"462"},{"filePath":"659","messages":"660","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"661","messages":"662","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"663","messages":"664","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"665","messages":"666","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667","usedDeprecatedRules":"462"},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"680","messages":"681","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682","usedDeprecatedRules":"462"},{"filePath":"683","messages":"684","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"685","messages":"686","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"687","messages":"688","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"689","messages":"690","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691","usedDeprecatedRules":"462"},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"696","messages":"697","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698","usedDeprecatedRules":"462"},{"filePath":"699","messages":"700","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"701","messages":"702","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"703","messages":"704","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705","usedDeprecatedRules":"462"},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"462"},{"filePath":"710","messages":"711","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712","usedDeprecatedRules":"462"},{"filePath":"713","messages":"714","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715","usedDeprecatedRules":"462"},{"filePath":"716","messages":"717","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718","usedDeprecatedRules":"462"},{"filePath":"719","messages":"720","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"uavg62",{"filePath":"721","messages":"722","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"723"},{"filePath":"724","messages":"725","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"726","messages":"727","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"728","messages":"729","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"552"},{"filePath":"730","messages":"731","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"732","messages":"733","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"734","messages":"735","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"469"},{"filePath":"736","messages":"737","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"738","messages":"739","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"740","messages":"741","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"742","messages":"743","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"718"},{"filePath":"744","messages":"745","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"746","messages":"747","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"748","messages":"749","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"750","messages":"751","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"752","messages":"753","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"480"},{"filePath":"754","messages":"755","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"756","messages":"757","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"758","messages":"759","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"760","messages":"761","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"762","messages":"763","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"590"},{"filePath":"764","messages":"765","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"593"},{"filePath":"766","messages":"767","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"768","messages":"769","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"770","messages":"771","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"575"},{"filePath":"772","messages":"773","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"774","messages":"775","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"776"},{"filePath":"777","messages":"778","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"596"},{"filePath":"779","messages":"780","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"781","messages":"782","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"783","messages":"784","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"785","messages":"786","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"787","messages":"788","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"789","messages":"790","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"612"},{"filePath":"791","messages":"792","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"793","messages":"794","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"795","messages":"796","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"797","messages":"798","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"507"},{"filePath":"799","messages":"800","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"559"},{"filePath":"801","messages":"802","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"803","messages":"804","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"566"},{"filePath":"805","messages":"806","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"807","messages":"808","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"809","messages":"810","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"534"},{"filePath":"811","messages":"812","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"813","messages":"814","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"815","messages":"816","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"817","messages":"818","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"819","messages":"820","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"821","messages":"822","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"823","messages":"824","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"825","messages":"826","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"827","messages":"828","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"655"},{"filePath":"829","messages":"830","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"831","messages":"832","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"833","messages":"834","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"667"},{"filePath":"835","messages":"836","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"658"},{"filePath":"837","messages":"838","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"839","messages":"840","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"841","messages":"842","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"843","messages":"844","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"845","messages":"846","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"847","messages":"848","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"849","messages":"850","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"851","messages":"852","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"578"},{"filePath":"853","messages":"854","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"855","messages":"856","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"857","messages":"858","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"859","messages":"860","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"682"},{"filePath":"861","messages":"862","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"863","messages":"864","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"529"},{"filePath":"865","messages":"866","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"867","messages":"868","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"869","messages":"870","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"871","messages":"872","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"583"},{"filePath":"873","messages":"874","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"875","messages":"876","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"877","messages":"878","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"879","messages":"880","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"881","messages":"882","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"698"},{"filePath":"883","messages":"884","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"885","messages":"886","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"887","messages":"888","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"691"},{"filePath":"889","messages":"890","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"891","messages":"892","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"893","messages":"894","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"895","messages":"896","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"897","messages":"898","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"705"},{"filePath":"899","messages":"900","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"901","messages":"902","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"903","messages":"904","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"712"},{"filePath":"905","messages":"906","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"907","messages":"908","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"715"},{"filePath":"909","messages":"910","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"609"},{"filePath":"911","messages":"912","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"913","messages":"914","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"915","messages":"916","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"917","messages":"918","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"919","messages":"920","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"921","messages":"922","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"923","messages":"924","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"925","messages":"926","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"927","messages":"928","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"929","messages":"930","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"931","messages":"932","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"933","messages":"934","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"935","messages":"936","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"937","messages":"938","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"939","messages":"940","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"941","messages":"942","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"943","messages":"944","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"524"},{"filePath":"945","messages":"946","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/ignacio/Documents/GitHub/reverse-frontend/src/index.tsx",[],["947","948","949","950","951"],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/App.tsx",["952","953","954"],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/Providers.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/hooks.ts",["955","956","957","958","959"],"import BigNumber from 'bignumber.js'\nimport {useEffect} from 'react'\nimport rvrs from 'config/constants/rvrs'\nimport {useDispatch, useSelector} from 'react-redux'\nimport useRefresh from 'hooks/useRefresh'\nimport {\n  fetchFarmsPublicDataAsync,\n  fetchPools2PublicDataAsync,\n  fetchPoolsPublicDataAsync,\n  fetchPoolsUserDataAsync,\n  fetchPools2UserDataAsync, fetchAirdropUserDataAsync\n} from './actions'\nimport {Airdrop, Farm, Pool, Pool2, State, State2} from './types'\nimport {QuoteToken} from '../config/constants/types'\n\nconst ZERO = new BigNumber(0)\nconst TEN_POW_18 = new BigNumber(10).pow(18)\n\nexport const useFetchPublicData = () => {\n  const dispatch = useDispatch()\n  const { slowRefresh } = useRefresh()\n  useEffect(() => {\n    dispatch(fetchFarmsPublicDataAsync())\n    dispatch(fetchPoolsPublicDataAsync())\n    dispatch(fetchPools2PublicDataAsync())\n  }, [dispatch, slowRefresh])\n}\n\n// Farms\n\nexport const useFarms = (): Farm[] => {\n  const farms = useSelector((state: State) => state.farms.data)\n  return farms\n}\n\nexport const usePoolsPublic = (): Pool[] => {\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePoolsPublic2 = (): Pool2[] => {\n  const pools2 = useSelector((state: State) => state.pools2.data)\n  return pools2\n}\n\nexport const useFarmFromPid = (pid): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.pid === pid))\n  return farm\n}\n\nexport const useFarmFromSymbol = (lpSymbol: string): Farm => {\n  const farm = useSelector((state: State) => state.farms.data.find((f) => f.lpSymbol === lpSymbol))\n  return farm\n}\n\n\nexport const useFarmTokensToUsd = (pid, farmTokens) => {\n  // farmTokens is the # of LP tokens, or just the number of tokens for single staking pools\n  // All price logic should go here for farms\n  const farm = useFarmFromPid(pid)\n  const prices = usePrices()\n  const quoteTokenAmount = new BigNumber(farm.quoteTokenPerLp).times(farmTokens)\n  return getTotalValueFromQuoteTokens(quoteTokenAmount, farm.quoteTokenSymbol, prices)\n}\n\nexport const useFarmUser = (pid) => {\n  const farm = useFarmFromPid(pid)\n\n  return {\n    allowance: farm.userData ? new BigNumber(farm.userData.allowance) : new BigNumber(0),\n    tokenBalance: farm.userData ? new BigNumber(farm.userData.tokenBalance) : new BigNumber(0),\n    stakedBalance: farm.userData ? new BigNumber(farm.userData.stakedBalance) : new BigNumber(0),\n    earnings: farm.userData ? new BigNumber(farm.userData.earnings) : new BigNumber(0),\n  }\n}\n\n\n// Pools\n\nexport const usePools = (account): Pool[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPoolsUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools = useSelector((state: State) => state.pools.data)\n  return pools\n}\n\nexport const usePools2 = (account): Pool2[] => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchPools2UserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  const pools2 = useSelector((state: State) => state.pools2.data)\n  return pools2\n}\n\nexport const useAirdropData = (account): Airdrop => {\n  const { fastRefresh } = useRefresh()\n  const dispatch = useDispatch()\n  useEffect(() => {\n    if (account) {\n      dispatch(fetchAirdropUserDataAsync(account))\n    }\n  }, [account, dispatch, fastRefresh])\n\n  return useSelector((state: State) => state.airdrop.data)\n}\n\nexport const usePool2FromPid = (sousId): Pool2 => {\n  const pool2 = useSelector((state: State) => state.pools2.data.find((p) => p.sousId === sousId))\n  return pool2\n}\n\nexport const usePoolFromPid = (sousId): Pool => {\n  const pool = useSelector((state: State) => state.pools.data.find((p) => p.sousId === sousId))\n  return pool\n}\n\n// Prices\n\nexport const usePriceBnbBusd = (): BigNumber => {\n  const pid = rvrs.pids.pidBnbBusd // BUSD-BNB LP\n  const farm = useFarmFromPid(pid)\n  return farm.tokenPriceVsQuote ? new BigNumber(farm.tokenPriceVsQuote) : ZERO\n}\n\n\n\n// export const fetchrvrsPrice = (): BigNumber => {\n//   const query = `\n//   {ethereum(network: bsc){\n//     address(address: {is: \"0xbf9a298a948079bed1e0902e78c61b1b30f58e7e\"}){\n//     balances {\n//     currency {\n//     symbol\n//     }\n//     value\n//     }}\n//     }}\n// `;\n// const url = \"https://graphql.bitquery.io/\";\n// const opts = {\n//     method: \"POST\",\n//     headers: {\n//         \"Content-Type\": \"application/json\"\n//     },\n//     body: JSON.stringify({\n//         query\n//     })\n// };\n\n// fetch(url, opts)\n//   .then(response => response.json())\n//   .then(json => {\n//     if (process.env.REACT_APP_DEBUG === \"true\") console.log(json.data.ethereum.address[0].balances);\n//   })\n//   .catch(console.error);\n\n//   return new BigNumber(3);\n// }\n\n\nexport const usePriceCakeBusd = (): BigNumber => {\n  const pid = 3;\n  const farm = useFarmFromPid(pid);\n  return new BigNumber(farm.tokenPriceVsQuote);\n}\n\nexport const usePrices = () => {\n  const misPrice = usePriceCakeBusd()\n  const onePrice = usePriceBnbBusd()\n\n\n  return [\n      {name: QuoteToken.MIS, price: misPrice},\n      {name: QuoteToken.RVRS, price: misPrice},\n      {name: QuoteToken.CAKE, price: misPrice},\n      {name: QuoteToken.ONE, price: onePrice},\n  ]\n}\n\nexport const lookupPrice = (tokenName, prices) => {\n  // lookup a specific price from usePrices output\n  const tokenPrice = prices.find(f => f.name === tokenName)\n  if (tokenPrice) {\n    return tokenPrice.price\n  }\n  console.log('prices', prices)\n  console.log(\"ERROR: No price found for\", tokenName)\n  return new BigNumber(0)\n}\n\n\nexport const getTotalValueFromQuoteTokens = (quoteTokenAmount, quoteToken, prices) => {\n  // WARNING: Needs to be updated for single-staking pools\n  // First handle all stable-coins\n  if (quoteToken === QuoteToken.UST || quoteToken === QuoteToken.BUSD) {\n    return new BigNumber(2).times(quoteTokenAmount)\n  }\n  if (quoteToken === QuoteToken.JEWEL) {\n    return new BigNumber(28).times(quoteTokenAmount)\n  }\n  if (quoteToken === QuoteToken.ONE) {\n    const price = lookupPrice(QuoteToken.ONE, prices)\n    return new BigNumber(2).times(quoteTokenAmount).times(price)\n  }\n  if (quoteToken === QuoteToken.RVRS) {\n    const price = lookupPrice(QuoteToken.RVRS, prices)\n    return new BigNumber(2).times(quoteTokenAmount).times(price)\n  }\n  console.log(\"ERROR: NO PRICE FOUND FOR QuoteToken:\", quoteToken)\n  return new BigNumber(0)\n}\n\n\nexport const useTotalValue = (): BigNumber => {\n  const farms = useFarms();\n  const prices = usePrices();\n  const pools = usePoolsPublic()\n  const pools2 = usePoolsPublic2()\n\n  let value = new BigNumber(0);\n  for (let i = 0; i < farms.length; i++) {\n    const farm = farms[i]\n    if (farm.lpTotalInQuoteToken) {\n      let val = new BigNumber(0);\n      val = getTotalValueFromQuoteTokens(farm.quoteTokenAmount, farm.quoteTokenSymbol, prices)\n      // console.log(\"useTotalValue\", farm.pid, val && val.toNumber(), farm)\n      value = value.plus(val);\n    }\n  }\n  \n  // Do incubator pools\n  for (let i = 0; i < pools.length; i++) {\n    const pool = pools[i]\n\n    const quoteTokens = new BigNumber(pool.quoteTokenPerLp).times(pool.totalStaked).div(new BigNumber(10).pow(18))\n    const val = getTotalValueFromQuoteTokens(quoteTokens, pool.quoteTokenSymbol, prices)\n\n    if (val) {\n      // console.log(\"useTotalValue\", farm.pid, val && val.toNumber(), farm)\n      value = value.plus(val);\n    }\n\n  }\n\n   // Do burn pools\n  for (let i = 0; i < pools2.length; i++) {\n    const pool2 = pools2[i]\n\n    const quoteTokens = new BigNumber(pool2.quoteTokenPerLp).times(pool2.totalStaked).div(new BigNumber(10).pow(18))\n    const val = getTotalValueFromQuoteTokens(quoteTokens.div(2), pool2.quoteTokenSymbol, prices)\n\n    if (val && !pool2.isFinished) {\n      // console.log(\"useTotalValue\", farm.pid, val && val.toNumber(), farm)\n      value = value.plus(val);\n    }\n\n  }\n\n  return value;\n}","/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/getRpcUrl.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/contexts/RefreshContext.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/contexts/BlockContext.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/contexts/ThemeContext.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/contexts/Localisation/languageContext.tsx",["960","961"],"import React, { useState, useEffect } from 'react'\nimport { StringTranslations } from '@crowdin/crowdin-api-client'\nimport { TranslationsContext } from 'contexts/Localisation/translationsContext'\nimport { allLanguages, EN } from 'config/localisation/languageCodes'\n\nconst CACHE_KEY = 'pancakeSwapLanguage'\n\nexport interface LangType {\n  code: string\n  language: string\n}\n\nexport interface LanguageState {\n  selectedLanguage: LangType\n  setSelectedLanguage: (langObject: LangType) => void\n  translatedLanguage: LangType\n  setTranslatedLanguage: React.Dispatch<React.SetStateAction<LangType>>\n}\n\nconst LanguageContext = React.createContext({\n  selectedLanguage: EN,\n  setSelectedLanguage: () => undefined,\n  translatedLanguage: EN,\n  setTranslatedLanguage: () => undefined,\n} as LanguageState)\n\nconst fileId = 8\nconst projectId = parseInt(process.env.REACT_APP_CROWDIN_PROJECTID)\nconst stringTranslationsApi = new StringTranslations({\n  token: process.env.REACT_APP_CROWDIN_APIKEY,\n})\n\nconst fetchTranslationsForSelectedLanguage = (selectedLanguage) => {\n  return stringTranslationsApi.listLanguageTranslations(projectId, selectedLanguage.code, undefined, fileId, 200)\n}\n\nconst LanguageContextProvider = ({ children }) => {\n  const [selectedLanguage, setSelectedLanguage] = useState<any>(EN)\n  const [translatedLanguage, setTranslatedLanguage] = useState<any>(EN)\n  const [translations, setTranslations] = useState<Array<any>>([])\n\n  const getStoredLang = (storedLangCode: string) => {\n    return allLanguages.filter((language) => {\n      return language.code === storedLangCode\n    })[0]\n  }\n\n  useEffect(() => {\n    const storedLangCode = localStorage.getItem(CACHE_KEY)\n    if (storedLangCode) {\n      const storedLang = getStoredLang(storedLangCode)\n      setSelectedLanguage(storedLang)\n    } else {\n      setSelectedLanguage(EN)\n    }\n  }, [])\n\n  useEffect(() => {\n    if (selectedLanguage) {\n      if (process.env.REACT_APP_DEBUG === \"true\") console.log(`import(\\`../../../public/i18n/${selectedLanguage.code}.json\\`)`);\n      fetch(`./i18n/${selectedLanguage.code}.json`)\n        .then(r=>r.json())\n      // fetchTranslationsForSelectedLanguage(selectedLanguage)\n        .then((translationApiResponse) => {\n          if (translationApiResponse.data.length < 1) {\n            setTranslations(['error'])\n          } else {\n            setTranslations(translationApiResponse.data)\n          }\n        })\n        .then(() => setTranslatedLanguage(selectedLanguage))\n        .catch((e) => {\n          console.error(\"ERROR\");\n          console.error(e);\n          setTranslations(['error'])\n        })\n    }\n  }, [selectedLanguage, setTranslations])\n\n  const handleLanguageSelect = (langObject: LangType) => {\n    setSelectedLanguage(langObject)\n    localStorage.setItem(CACHE_KEY, langObject.code)\n  }\n\n  return (\n    <LanguageContext.Provider\n      value={{ selectedLanguage, setSelectedLanguage: handleLanguageSelect, translatedLanguage, setTranslatedLanguage }}\n    >\n      <TranslationsContext.Provider value={{ translations, setTranslations }}>{children}</TranslationsContext.Provider>\n    </LanguageContext.Provider>\n  )\n}\n\nexport { LanguageContext, LanguageContextProvider }\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/actions.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/index.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/types.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useI18n.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useRefresh.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/addressHelpers.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useTokenBalance.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/formatBalance.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/web3.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/contexts/Localisation/translationsContext.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/translateTextHelpers.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/localisation/languageCodes.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/farms/index.ts",["962"],"/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport farmsConfig from 'config/constants/farms'\nimport BigNumber from 'bignumber.js'\nimport rvrs from 'config/constants/rvrs'\nimport fetchFarms from './fetchFarms'\nimport {\n  fetchFarmUserEarnings,\n  fetchFarmUserAllowances,\n  fetchFarmUserTokenBalances,\n  fetchFarmUserStakedBalances,\n} from './fetchFarmUser'\nimport { FarmsState, Farm } from '../types'\n\nconst initialState: FarmsState = { data: [...farmsConfig] }\n\nexport const farmsSlice = createSlice({\n  name: 'Farms',\n  initialState,\n  reducers: {\n    setFarmsPublicData: (state, action) => {\n      const liveFarmsData: Farm[] = action.payload\n      state.data = state.data.map((farm) => {\n        const liveFarmData = liveFarmsData.find((f) => f.pid === farm.pid)\n        return { ...farm, ...liveFarmData }\n      })\n    },\n    setFarmUserData: (state, action) => {\n      const { arrayOfUserDataObjects } = action.payload\n      arrayOfUserDataObjects.forEach((userDataEl) => {\n        const { index } = userDataEl\n        state.data[index] = { ...state.data[index], userData: userDataEl }\n      })\n    },\n    setrvrsPrice: (state, action) => {\n      state.price = action.payload\n    },\n  },\n})\n\n// Actions\nexport const { setFarmsPublicData, setFarmUserData, setrvrsPrice } = farmsSlice.actions\n\n// Thunks\nexport const fetchFarmsPublicDataAsync = () => async (dispatch) => {\n  const farms = await fetchFarms()\n  dispatch(setFarmsPublicData(farms))\n}\nexport const fetchFarmUserDataAsync = (account) => async (dispatch) => {\n  const userFarmAllowances = await fetchFarmUserAllowances(account)\n  const userFarmTokenBalances = await fetchFarmUserTokenBalances(account)\n  const userStakedBalances = await fetchFarmUserStakedBalances(account)\n  const userFarmEarnings = await fetchFarmUserEarnings(account)\n\n  const arrayOfUserDataObjects = userFarmAllowances.map((farmAllowance, index) => {\n    return {\n      index,\n      allowance: userFarmAllowances[index],\n      tokenBalance: userFarmTokenBalances[index],\n      stakedBalance: userStakedBalances[index],\n      earnings: userFarmEarnings[index],\n    }\n  })\n\n  dispatch(setFarmUserData({ arrayOfUserDataObjects }))\n}\n\nexport const fetchrvrsPriceAsync = () => async (dispatch) => { // Change the address below to rvrs-BUSD LP\n  const query = `\n  {ethereum(network: bsc){\n    address(address: {is: \"${rvrs.addr.rvrsUstAddr}\"}){\n    balances {\n    currency {\n    symbol\n    }\n    value\n    }}\n    }}\n`;\nconst url = \"https://graphql.bitquery.io/\";\nconst opts = {\n    method: \"POST\",\n    headers: {\n        \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify({\n        query\n    })\n};\n\nfetch(url, opts)\n  .then(response => response.json())\n  .then(json => {\n    // if (process.env.REACT_APP_DEBUG === \"true\") console.log(json, 'testing output');\n    const lprice = json.data.ethereum.address[0].balances[rvrs.queryPosition.busd].value / json.data.ethereum.address[0].balances[rvrs.queryPosition.token].value;\n    dispatch(setrvrsPrice(lprice));\n  })\n  .catch(console.error);\n}\n\nexport default farmsSlice.reducer\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useBlock.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/farms/fetchFarmUser.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/farms/fetchFarms.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/contracts.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/erc20.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/index.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/farms.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useHarvest.ts",["963","964"],"import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserBalance, updateUserPendingReward2 } from 'state/actions'\nimport { soushHarvest, soushHarvestBnb, harvest, soushHarvestBurn, soushHarvestBurn2 } from 'utils/callHelpers'\nimport { useAutoRvrs, useMasterchef, useSousChef2, useSousChefBurn } from './useContract'\n\nexport const useHarvest = (farmPid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const txHash = await harvest(masterChefContract, farmPid, account)\n    dispatch(fetchFarmUserDataAsync(account))\n    return txHash\n  }, [account, dispatch, farmPid, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useAllHarvest = (farmPids: number[]) => {\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleHarvest = useCallback(async () => {\n    const harvestPromises = farmPids.reduce((accum, pid) => {\n      return [...accum, harvest(masterChefContract, pid, account)]\n    }, [])\n\n    return Promise.all(harvestPromises)\n  }, [account, farmPids, masterChefContract])\n\n  return { onReward: handleHarvest }\n}\n\nexport const useSousHarvest = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch();\n  const { account } = useWallet();\n  const sousChefContract = useAutoRvrs();\n  const masterChefContract = useMasterchef();\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId === 0) {\n      await harvest(masterChefContract, 0, account);\n    } else if (isUsingBnb) {\n      await soushHarvestBnb(sousChefContract, account);\n    } else {\n      await soushHarvest(sousChefContract, account);\n    }\n    dispatch(updateUserBalance(sousId, account));\n  }, [account, dispatch, isUsingBnb, masterChefContract, sousChefContract, sousId]);\n\n  return { onReward: handleHarvest };\n}\n\nexport const useSousHarvestBurn = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChefBurn(sousId)\n\n  const handleHarvest = useCallback(async () => {\n    if (sousId <= 3) {\n      await soushHarvestBurn(sousChefContract, account)\n    } else {\n      await soushHarvestBurn2(sousChefContract, account)\n    }\n    dispatch(updateUserPendingReward2(sousId, account))\n    dispatch(updateUserBalance(sousId, account))\n  }, [account, dispatch, sousChefContract, sousId])\n\n  return { onReward: handleHarvest }\n}\n\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useUnstake.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useStake.ts",["965","966"],"import { useCallback } from 'react'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useDispatch } from 'react-redux'\nimport { fetchFarmUserDataAsync, updateUserStakedBalance, updateUserBalance } from 'state/actions'\nimport { stake, sousStake, sousStakeBurn, sousStakeBurn2 } from 'utils/callHelpers'\nimport { useAutoRvrs, useMasterchef, useSousChefBurn } from './useContract'\n\nconst useStake = (pid: number) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const masterChefContract = useMasterchef()\n\n  const handleStake = useCallback(\n    async (amount: string) => {\n      const txHash = await stake(masterChefContract, pid, amount, account)\n      dispatch(fetchFarmUserDataAsync(account))\n      console.info(txHash)\n    },\n    [account, dispatch, masterChefContract, pid],\n  )\n\n  return { onStake: handleStake }\n}\n\nexport const useSousStake = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useAutoRvrs()\n\n  const handleSousStake = useCallback(\n    async (amount: string) => {\n      if (sousId === 0) {\n        await sousStake(sousChefContract, amount, account)\n      } else {\n        await sousStake(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, sousChefContract, sousId],\n  )\n\n  return { onStake: handleSousStake }\n}\n\nexport const useSousStakeBurn = (sousId, isUsingBnb = false) => {\n  const dispatch = useDispatch()\n  const { account } = useWallet()\n  const sousChefContract = useSousChefBurn(sousId)\n\n  const handleSousStake = useCallback(\n    async (amount: string) => {\n      if (sousId <= 3) {\n        await sousStakeBurn(sousChefContract, amount, account)\n      } else {\n        await sousStakeBurn2(sousChefContract, amount, account)\n      }\n      dispatch(updateUserStakedBalance(sousId, account))\n      dispatch(updateUserBalance(sousId, account))\n    },\n    [account, dispatch, sousChefContract, sousId],\n  )\n\n  return { onStake: handleSousStake }\n}\n\n\n\n\n\nexport default useStake\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useApprove.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useContract.ts",["967","968"],"import { useEffect, useState } from 'react'\nimport { AbiItem } from 'web3-utils'\nimport { ContractOptions } from 'web3-eth-contract'\nimport useWeb3 from 'hooks/useWeb3'\nimport {\n  getMasterChefAddress,\n  getCakeAddress,\n  getLotteryAddress,\n  getLotteryTicketAddress,\n  getWheelAddress,\n  getWbnbAddress,\n  getWheel2Address,\n  getSousChefAddress,\n  getAutoRvrsAddress,\n  getAirdropAddress\n} from 'utils/addressHelpers'\nimport { pools2Config, poolsConfig } from 'config/constants'\nimport { PoolCategory } from 'config/constants/types'\nimport ifo from 'config/abi/ifo.json'\nimport erc20 from 'config/abi/erc20.json'\nimport rabbitmintingfarm from 'config/abi/rabbitmintingfarm.json'\nimport devFeeProcessor from 'config/abi/devFeeProcessor.json'\nimport nftSale from 'config/abi/nftSale.json'\nimport pancakeRabbits from 'config/abi/pancakeRabbits.json'\nimport lottery from 'config/abi/lottery.json'\nimport wheel from 'config/abi/wheel.json'\nimport lotteryTicket from 'config/abi/lotteryNft.json'\nimport masterChef from 'config/abi/masterchef.json'\nimport sousChef from 'config/abi/sousChef.json'\nimport autoRvrs from 'config/abi/autorvrs.json'\nimport RewardClaim from 'config/abi/RewardClaim.json'\nimport sousChefBurn from 'config/abi/sousChefBurn.json'\nimport sousChefBurn2 from 'config/abi/sousChefBurn2.json'\n\nconst useContract = (abi: AbiItem, address: string, contractOptions?: ContractOptions) => {\n  const web3 = useWeb3()\n  const [contract, setContract] = useState(new web3.eth.Contract(abi, address, contractOptions))\n\n  useEffect(() => {\n    setContract(new web3.eth.Contract(abi, address, contractOptions))\n  }, [abi, address, contractOptions, web3])\n\n  return contract\n}\n\n/**\n * Helper hooks to get specific contracts (by ABI)\n */\n\nexport const useIfoContract = (address: string) => {\n  const ifoAbi = (ifo as unknown) as AbiItem\n  return useContract(ifoAbi, address)\n}\n\nexport const useERC20 = (address: string) => {\n  const erc20Abi = (erc20 as unknown) as AbiItem\n  return useContract(erc20Abi, address)\n}\n\nexport const useCake = () => {\n  return useERC20(getCakeAddress())\n}\n\nexport const useWone = () => {\n  return useERC20(getWbnbAddress())\n}\n\nexport const useRabbitMintingFarm = (address: string) => {\n  const rabbitMintingFarmAbi = (rabbitmintingfarm as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const useDevFeeProcessorContract = (address: string) => {\n  const rabbitMintingFarmAbi = (devFeeProcessor as unknown) as AbiItem\n  return useContract(rabbitMintingFarmAbi, address)\n}\n\nexport const useNftSaleContract = (address: string) => {\n  const nftSaleAbi = (nftSale as unknown) as AbiItem\n  return useContract(nftSaleAbi, address)\n}\n\nexport const usePancakeRabbits = (address: string) => {\n  const pancakeRabbitsAbi = (pancakeRabbits as unknown) as AbiItem\n  return useContract(pancakeRabbitsAbi, address)\n}\n\nexport const useLottery = () => {\n  const abi = (lottery as unknown) as AbiItem\n  return useContract(abi, getLotteryAddress())\n}\n\nexport const useMoneyWheel = () => {\n  const abi = (wheel as unknown) as AbiItem\n  return useContract(abi, getWheelAddress())\n}\n\nexport const useMoneyWheel2 = () => {\n  const abi = (wheel as unknown) as AbiItem\n  return useContract(abi, getWheel2Address())\n}\n\nexport const useLotteryTicket = () => {\n  const abi = (lotteryTicket as unknown) as AbiItem\n  return useContract(abi, getLotteryTicketAddress())\n}\n\nexport const useMasterchef = () => {\n  const abi = (masterChef as unknown) as AbiItem\n  return useContract(abi, getMasterChefAddress())\n}\n\nexport const useAirdropContract = () => {\n  const abi = (RewardClaim as unknown) as AbiItem\n  return useContract(abi, getAirdropAddress())\n}\n\nexport const useAutoRvrs = () => {\n  const abi = (autoRvrs as unknown) as AbiItem\n  return useContract(abi, getAutoRvrsAddress())\n}\n\nexport const useSousChefBurn = (id) => {\n  const config = pools2Config.find((pool) => pool.sousId === id)\n  let rawAbi = sousChefBurn\n  if (id > 3) {\n    rawAbi = sousChefBurn2\n  }\n  const abi = (rawAbi as unknown) as AbiItem\n  return useContract(abi, config.contractAddress[process.env.REACT_APP_CHAIN_ID])\n}\n\nexport const useSousChef2 = () => {\n  const abi = (sousChef as unknown) as AbiItem\n  return useContract(abi, getSousChefAddress())\n}\nexport default useContract\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/multicall.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/getLiquidityUrlPathParts.ts",[],["969","970","971","972","973"],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useFarmsWithBalance.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/utils/callHelpers.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/Input/index.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useWeb3.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/index.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/navigation/nav.tsx",["974","975","976","977"],"import React, { useState } from 'react'\nimport styled, { keyframes } from 'styled-components'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { usePriceCakeBusd } from 'state/hooks'\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container, ButtonGroup, Button } from 'react-bootstrap'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport useWalletModal from 'components/WalletModal'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { NavLink } from 'react-router-dom'\nimport rvrs from 'config/constants/rvrs'\nimport { Flex } from '../layout/flex'\n\n\nconst Nav = (props) => {\n  const { account, connect, reset } = useWallet()\n  const rvrsPriceUsd = usePriceCakeBusd()\n  const rvrsBalance = getBalanceNumber(useTokenBalance(getCakeAddress())).toLocaleString('en-us', { maximumFractionDigits: 0 });\n  const { onPresentConnectModal } = useWalletModal(connect, reset)\n\n\n\n  return (\n    <MenuContainer>\n      <ButtonGroup style={{ marginRight: \"20px\" }}>\n        <ButtonContainer>\n            <StyledButton\n              as={StyledNavLink}\n              to=\"/staking\"\n              isActive={(match, { pathname }) =>\n                Boolean(match) ||\n                pathname.startsWith('/staking')\n              }>Staking\n            </StyledButton>\n          <StyledButton\n            as={StyledNavLink}\n            to=\"/bonds\"\n            isActive={(match, { pathname }) =>\n              Boolean(match) ||\n              pathname.startsWith('/bonds')\n            }\n          >&nbsp;Bonds&nbsp;\n          </StyledButton>\n          <StyledButton\n            as={StyledNavLink}\n            to=\"/airdrop\"\n            isActive={(match, { pathname }) =>\n              Boolean(match) ||\n              pathname.startsWith('/airdrop')\n            }>Airdrop\n          </StyledButton>\n        </ButtonContainer>\n      </ButtonGroup>\n\n\n      <ButtonGroup>\n        {account != null && account.length > 1 ?\n          <ConnectButton\n            style={{ justifyContent: \"space-between\" }}\n            as={StyledNavLink}\n            to=\"/dashboard\"\n            isActive={(match, { pathname }) =>\n              Boolean(match) ||\n              pathname.startsWith('/airdrop')\n            }>\n            <Flex alignItems=\"center\">\n              <object type=\"image/svg+xml\" data=\"/images/hmny.svg\" width=\"50px\">&nbsp;</object>\n              <div style={{ marginLeft: '10px', marginRight: '20px' }}>{account.substring(0, 6)} </div>\n            </Flex>\n          </ConnectButton>\n          :\n          <ConnectButton\n            as={StyledNavLink}\n            to=\"/dashboard\"\n            isActive={(match, { pathname }) =>\n              Boolean(match) ||\n              pathname.startsWith('/dashboard')\n            }\n            disabled={rvrs.isLocked.unlockWalletButton}\n            onClick={onPresentConnectModal} {...props}>\n            <Flex alignItems=\"center\">\n              <object type=\"image/svg+xml\" data=\"/images/hmny.svg\" width=\"50px\">&nbsp;</object>\n              <div style={{ marginLeft: '10px', marginRight: '20px' }}>Connect</div>\n            </Flex>\n          </ConnectButton>\n        }\n      </ButtonGroup>\n\n\n    </MenuContainer>\n  )\n}\n\nconst MenuContainer = styled(Container)`\n  padding-top: 50px;\n  text-align: end;\n  flex-wrap: wrap;\n  max-width: 730px;\n`\n\nconst pulse = keyframes`\n  0% {\n    box-shadow: 0px 0px 5px -5px #5A6F73;\n  }\n  50% {\n    box-shadow: -10px 0px 30px -5px #506970, 0px 0px 40px -5px #464F68\n  }\n  100% {\n    box-shadow: 0px 0px 5px -5px #5A6F73;\n  }\n`\n\nconst StyledButton = styled.div`\n  text-align: center;\n  border: #FFFF solid 0px;\n  border-radius: 35px;\n  background-color: #2D3544;\n  padding-top: 20px;\n  padding-bottom: 20px;\n  padding-left: 28px;\n  padding-right: 28px;\n  font-size: 18px;\n  font-weight: 500;\n  &:hover  {\n    background-color: #363F50;\n    transition: 0.5s;\n  }\n`\n\nconst ConnectButton = styled.div`\n  text-align: center;\n  border: 1.5px;\n  border-style: solid !important;\n  border-color: #CBCBCB !important;\n  border-radius: 35px;\n  background-color: #2D3544;\n  padding: 5px;\n  font-size: 18px;\n  font-weight: 500;\n  &:hover  {\n    background-color: #363F50;\n    transition: 0.5s;\n    transform: translate(-5px)\n  }\n`\n\nconst ButtonContainer = styled.div`\n  border-radius: 35px;\n  background-color: #2D3544;\n  padding-top: 23px;\n  padding-bottom: 23px;\n  border: 1.5px;\n  border-color: #CBCBCB !important;\n  border-style: solid !important;\n  animation: ${pulse} 8s infinite ease-out;\n`\n\nconst activeClassName = 'ACTIVE'\n\nconst StyledNavLink = styled(NavLink).attrs({ activeClassName })`\n  &:focus  {\n    background-image: linear-gradient(to right, #464F68, #506970);\n    font-weight: 600;\n    transform: translate(0px)\n\n  }\n`\n\nexport default Nav","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/NotFound.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/airdrop/index.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/stake/index.ts",["978"],"/* eslint-disable no-param-reassign */\nimport BigNumber from \"bignumber.js\";\nimport { createSlice } from '@reduxjs/toolkit'\nimport autoRvrsAbi from \"config/abi/autorvrs.json\";\nimport poolsConfig from 'config/constants/stake'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n} from './fetchPoolsUser'\nimport { PoolsState, Pool } from '../types'\nimport {fetchPoolsTotalStaking} from \"./fetchPools\";\nimport {getAutoRvrsAddress} from \"../../utils/addressHelpers\";\nimport multicall from \"../../utils/multicall\";\n\nconst initialState: PoolsState = { data: [...poolsConfig] }\n\nexport const PoolsSlice = createSlice({\n  name: 'Pools',\n  initialState,\n  reducers: {\n    setPoolsPublicData: (state, action) => {\n      const livePoolsData: Pool[] = action.payload\n      state.data = state.data.map((pool) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, ...livePoolData }\n      })\n    },\n    setPoolsUserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool.sousId)\n        return { ...pool, userData: userPoolData }\n      })\n    },\n    updatePoolsUserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPoolsPublicData, setPoolsUserData, updatePoolsUserData } = PoolsSlice.actions\n\n// Thunks\nexport const fetchPoolsPublicDataAsync = () => async (dispatch) => {\n  const { userInfo, pricePerFullShare } = await fetchPoolsTotalStaking()\n\n  const liveData = poolsConfig.map((pool) => {\n    return {\n      ...pool,\n      totalStaked: userInfo[0].amount,\n      pricePerShare: pricePerFullShare[0].toString()\n    }\n  })\n\n  dispatch(setPoolsPublicData(liveData))\n}\n\nexport const fetchPoolsUserInfo = async (account) => {\n  const calls = [\n    {\n      address: getAutoRvrsAddress(),\n      name: 'userInfo',\n      params: [account]\n    }\n  ];\n  const userInfo = await multicall(autoRvrsAbi, calls);\n\n  return userInfo;\n};\n\nexport const fetchPoolsUserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const userInfo = await fetchPoolsUserInfo(account)\n\n  const userData = poolsConfig.map((pool) => ({\n    sousId: pool.sousId,\n    allowance: allowances[pool.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool.sousId],\n    stakedBalance: stakedBalances[pool.sousId],\n    lastDepositedTime: userInfo[pool.sousId].lastDepositedTime,\n    lastUserActionTime: userInfo[pool.sousId].lastUserActionTime,\n    reverseAtlastUserAction: userInfo[pool.sousId].reverseAtlastUserAction,\n  }))\n\n  dispatch(setPoolsUserData(userData))\n}\n\n\nexport const updateUserAllowance = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\n/* export const updateUserPendingReward = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePoolsUserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n} */\n\nexport default PoolsSlice.reducer","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Bonds/index.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/index.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/bonds/index.ts",["979"],"/* eslint-disable no-param-reassign */\nimport { createSlice } from '@reduxjs/toolkit'\nimport pools2 from 'config/constants/bonds'\nimport { pools2Config } from 'config/constants'\nimport {fetchPoolsBlockLimits, fetchPoolsQuoteTokenPerLp, fetchPoolsTotalStatking} from './fetchPools'\nimport {\n  fetchPoolsAllowance,\n  fetchUserBalances,\n  fetchUserStakeBalances,\n  fetchUserPendingRewards,\n} from './fetchPoolsUser'\nimport { Pools2State, Pool2 } from '../types'\n\nconst initialState: Pools2State = { data: [...pools2Config] }\n\nexport const Pools2Slice = createSlice({\n  name: 'Pools2',\n  initialState,\n  reducers: {\n    setPools2PublicData: (state, action) => {\n      const livePoolsData: Pool2[] = action.payload\n      state.data = state.data.map((pool2) => {\n        const livePoolData = livePoolsData.find((entry) => entry.sousId === pool2.sousId)\n        return { ...pool2, ...livePoolData }\n      })\n    },\n    setPools2UserData: (state, action) => {\n      const userData = action.payload\n      state.data = state.data.map((pool2) => {\n        const userPoolData = userData.find((entry) => entry.sousId === pool2.sousId)\n        return { ...pool2, userData: userPoolData }\n      })\n    },\n    updatePools2UserData: (state, action) => {\n      const { field, value, sousId } = action.payload\n      const index = state.data.findIndex((p) => p.sousId === sousId)\n      state.data[index] = { ...state.data[index], userData: { ...state.data[index].userData, [field]: value } }\n    },\n  },\n})\n\n// Actions\nexport const { setPools2PublicData, setPools2UserData, updatePools2UserData } = Pools2Slice.actions\n\n// Thunks\nexport const fetchPools2PublicDataAsync = () => async (dispatch) => {\n  const blockLimits = await fetchPoolsBlockLimits()\n  const totalStakings = await fetchPoolsTotalStatking()\n  const quoteTokenPerLps = await fetchPoolsQuoteTokenPerLp()\n\n  const liveData = pools2Config.map((pool) => {\n    const blockLimit = blockLimits.find((entry) => entry.sousId === pool.sousId)\n    const totalStaking = totalStakings.find((entry) => entry.sousId === pool.sousId)\n    const quoteTokenPerLp = quoteTokenPerLps.find((entry) => entry.sousId === pool.sousId)\n    return {\n      ...blockLimit,\n      ...totalStaking,\n      ...quoteTokenPerLp\n    }\n  })\n  \n  dispatch(setPools2PublicData(liveData))\n}\n\nexport const fetchPools2UserDataAsync = (account) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  const stakingTokenBalances = await fetchUserBalances(account)\n  const stakedBalances = await fetchUserStakeBalances(account)\n  const pendingRewards = await fetchUserPendingRewards(account)\n\n  const userData = pools2Config.map((pool2) => ({\n    sousId: pool2.sousId,\n    allowance: allowances[pool2.sousId],\n    stakingTokenBalance: stakingTokenBalances[pool2.sousId],\n    stakedBalance: stakedBalances[pool2.sousId],\n    pendingReward: pendingRewards[pool2.sousId],\n  }))\n\n  dispatch(setPools2UserData(userData))\n}\n\nexport const updateUserAllowance2 = (sousId: string, account: string) => async (dispatch) => {\n  const allowances = await fetchPoolsAllowance(account)\n  dispatch(updatePools2UserData({ sousId, field: 'allowance', value: allowances[sousId] }))\n}\n\nexport const updateUserBalance2 = (sousId: string, account: string) => async (dispatch) => {\n  const tokenBalances = await fetchUserBalances(account)\n  dispatch(updatePools2UserData({ sousId, field: 'stakingTokenBalance', value: tokenBalances[sousId] }))\n}\n\nexport const updateUserStakedBalance2 = (sousId: string, account: string) => async (dispatch) => {\n  const stakedBalances = await fetchUserStakeBalances(account)\n  dispatch(updatePools2UserData({ sousId, field: 'stakedBalance', value: stakedBalances[sousId] }))\n}\n\nexport const updateUserPendingReward2 = (sousId: string, account: string) => async (dispatch) => {\n  const pendingRewards = await fetchUserPendingRewards(account)\n  dispatch(updatePools2UserData({ sousId, field: 'pendingReward', value: pendingRewards[sousId] }))\n}\n\nexport default Pools2Slice.reducer\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/Style.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Dashboard/index.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Airdrops/index.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/rvrs.ts",["980","981"],"const masterChef = '0xeEA71889c062c135014Ec34825a1958c87A2Ac61'\n\n// Mainnet\nconst rvrsUstAddr = '0xfc417a0368263140c59b7aab646d4a270c37d8cb'\nconst rvrsBnbAddr = '0x60e0d939d4b0c71918088278bcf600470a6c8f26'\nconst rvrsUstAddrV2 = '0xfc417a0368263140c59b7aab646d4a270c37d8cb'\nconst rvrsBnbAddrV2 = '0x60e0d939d4b0c71918088278bcf600470a6c8f26'\nconst rvrsAddr = '0xAe0E6F11f0decc8a59B51bc56e52421970B552dF'\nconst misWheel = '0x9F310757333e6083372d2603CFbd3B61c0F21C54'\n\n// Testnet\nconst rvrsBusdAddrTestnet = '0xf73dc3652b3619312ddd3de7dbf3f354eb5c00b5' // MIS-BUSD LP\nconst rvrsBnbAddrTestnet = '0x31222d37568bd54be95ece3749f0559c45a85634' // MIS-WONE LP\nconst rvrsBusdAddrV2Testnet = '0xf73dc3652b3619312ddd3de7dbf3f354eb5c00b5' // MIS-BUSD LP\nconst rvrsBnbAddrV2Testnet = '0x31222d37568bd54be95ece3749f0559c45a85634' // MIS-BUSD LP\nconst rvrsAddrTestnet = '0xF2f587fD8A423880037F39828d593d4cE1961A98' // MIS ADDRESS\nconst masterChefTestnet = '0xa385399B4dE3B5f01a31b0E753f32E18e526db8f' // MIS MASTERCHEF\n\nconst pidrvrsUst = 0\nconst pidrvrsBnb = 2\nconst pidrvrs = 10\nconst pidBnbBusd = 1\n\nconst countBack = false\nconst countLength = 2\n\nconst xPerBlock = \"rewardPerSecond\" \nconst pendingX = \"pendingReward\"\n\nconst fetchAutomatic = false;\nconst fetchPriceCustom = false;\n\nconst busdPosition = 0\nconst tokenPosition = 1\n\nconst unlockWalletButton = false;\n\nconst isFullyConfigured = true;\nconst showFarmInfoModal = true;\n\n\n//----------------------------------------------------------------------------------------------------------------------------------------------\n\nconst rvrs = {\n    addr: {\n        rvrsUstAddr,\n        rvrsBnbAddr,\n        rvrsUstAddrV2,\n        rvrsBnbAddrV2,\n        rvrsAddr,\n        masterChef,\n        misWheel,\n        rvrsBusdAddrTestnet,\n        rvrsBnbAddrTestnet,\n        rvrsBusdAddrV2Testnet,\n        rvrsBnbAddrV2Testnet,\n        rvrsAddrTestnet,\n        masterChefTestnet,\n    },\n    pids: {\n        pidrvrsBnb,\n        pidrvrsUst, \n        pidrvrs,\n        pidBnbBusd,\n        pidList: [\n            pidrvrsUst, // MIS-UST LP [0]\n            pidBnbBusd, // rvrs-BNB LP [1]\n            pidrvrsBnb, // rvrs [2]\n            3, // BNB-BUSD LP [3]\n            4, // ONE-1ETH LP [4]\n            5, // BTCB-BNB LP [4]\n            6, // ETH-BNB LP [5]\n            7, // DAI-BUSD LP [6]\n            8, // USDC-BUSD LP [7]\n            9, // DOT-BNB LP [8]\n            10, // CAKE-BUSD LP [9]\n            11, // CAKE-BNB LP [10] */\n            // pidrvrs, // rvrs [3]\n            /* 10, // BUSD [12]\n            11, // WBNB [13]\n            12, // EGG [14]\n            18, // BTCB [15]\n            14, // ETH [16]\n            15, // DAI [17]\n            16, // USDC [18]\n            17, // DOT [19]\n            19, // BSCX [20]\n            13, // AUTO [21]\n            22, // rvrs-GYA [22]\n            23, // rvrs-DSL [23]\n            24, // rvrs-BUSD LP V2 [24]\n            25, // rvrs-BNB LP V2 [25]\n            26, // BUSD-BNB LP V2 [26]\n            27, // USDT-BUSD LP V2 [27]\n            28, // BTCB-BNB LP V2 [28] \n            29, // ETH-BNB LP V2 [29]\n            30, // DAI-BUSD LP V2 [30] \n            31, // USDC-BUSD LP V2 [31]\n            31, // DOT-BNB LP V2 [32]\n            32, // CAKE-BNB LP V2 [33]\n            33, // ADA-WBNB LP V2 [34] */\n        ],\n    },\n    strings: {\n        xPerBlock,\n        pendingX\n    },\n    fetch: {\n        fetchAutomatic,\n        fetchPriceCustom\n    },\n    queryPosition: {\n        busd: busdPosition,\n        token: tokenPosition\n    },\n    isLocked: {\n        unlockWalletButton\n    },\n    isFullyConfigured,\n    showFarmInfoModal\n}\n \nexport default rvrs;\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/stake/fetchPools.ts",["982"],"import masterchefAbi from 'config/abi/masterchef.json';\nimport autorvrsAbi from 'config/abi/autorvrs.json';\nimport multicall from 'utils/multicall';\nimport {getAutoRvrsAddress, getMasterChefAddress} from 'utils/addressHelpers';\nimport BigNumber from 'bignumber.js';\n\n// eslint-disable-next-line import/prefer-default-export\nexport const fetchPoolsTotalStaking = async () => {\n  const calls = [\n    {\n      address: getMasterChefAddress(),\n      name: 'userInfo',\n      params: [0, getAutoRvrsAddress()]\n    }\n  ];\n  const userInfo = await multicall(masterchefAbi, calls);\n\n  const calls2 = [\n    {\n      address: getAutoRvrsAddress(),\n      name: 'getPricePerFullShare',\n      params: []\n    }\n  ];\n  const pricePerFullShare = await multicall(autorvrsAbi, calls2);\n\n  return { userInfo, pricePerFullShare };\n};\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/airdrop/fetchAirdropUser.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/stake/fetchPoolsUser.ts",["983","984","985"],"import { AbiItem } from 'web3-utils'\nimport poolsConfig from 'config/constants/stake'\nimport masterChefABI from 'config/abi/masterchef.json'\nimport autorvrsAbi from 'config/abi/autorvrs.json'\nimport sousChefABI from 'config/abi/sousChef.json'\nimport erc20ABI from 'config/abi/erc20.json'\nimport { QuoteToken } from 'config/constants/types'\nimport multicall from 'utils/multicall'\nimport {getAutoRvrsAddress, getCakeAddress, getMasterChefAddress, getRvrsAddress} from 'utils/addressHelpers'\nimport { getWeb3 } from 'utils/web3'\nimport BigNumber from 'bignumber.js'\n\nconst CHAIN_ID = process.env.REACT_APP_CHAIN_ID\n\n// Pool 0, Cake / Cake is a different kind of contract (master chef)\n// BNB pools use the native BNB token (wrapping ? unwrapping is done at the contract level)\nconst nonBnbPools = poolsConfig.filter((p) => p.stakingTokenName !== QuoteToken.BNB)\nconst web3 = getWeb3()\nconst masterChefContract = new web3.eth.Contract((masterChefABI as unknown) as AbiItem, getMasterChefAddress())\n\nexport const fetchPoolsAllowance = async (account) => {\n  const calls = nonBnbPools.map((p) => ({\n    address: p.stakingTokenAddress,\n    name: 'allowance',\n    params: [account, p.contractAddress[CHAIN_ID]],\n  }))\n\n  const allowances = await multicall(erc20ABI, calls)\n  return nonBnbPools.reduce(\n    (acc, pool, index) => ({ ...acc, [pool.sousId]: new BigNumber(allowances[index]).toJSON() }),\n    {},\n  )\n}\n\nexport const fetchUserStakeBalances = async account => {\n  const calls = [\n    {\n      address: getAutoRvrsAddress(),\n      name: 'wantLockedTotal',\n      params: [account]\n    }\n  ];\n  const stakedTokenBalancesRaw = await multicall(autorvrsAbi, calls);\n\n  return stakedTokenBalancesRaw;\n};\n\nexport const fetchUserBalances = async account => {\n  const calls = [\n    {\n      address: getRvrsAddress(),\n      name: 'balanceOf',\n      params: [account]\n    }\n  ];\n  const tokenBalancesRaw = await multicall(erc20ABI, calls);\n\n  return tokenBalancesRaw;\n};","/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/bonds/fetchPools.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/state/bonds/fetchPoolsUser.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Bonds/bonds.tsx",["986","987","988"],"import React, { useState } from 'react'\nimport { Link, Route, useRouteMatch } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport Ripples, { createRipples } from 'react-ripples'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport ActiveInactiveButton from 'components/layout/buttons/activeInactiveButton'\nimport ActiveInactiveContatiner from 'components/layout/containers/activeInactiveContainer'\nimport useBlock from 'hooks/useBlock'\nimport { usePools2, usePrices, getTotalValueFromQuoteTokens, lookupPrice } from 'state/hooks'\nimport { QuoteToken } from 'config/constants/types'\nimport Page from 'components/layout/containers/page'\nimport PoolCard from './card'\n\n\nconst Bond: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { account } = useWallet()\n  const pools2 = usePools2(account)\n  const prices = usePrices()\n  const block = useBlock()\n  const poolsWithApy = pools2.map((pool2) => {\n    let quoteTokens = new BigNumber(pool2.quoteTokenPerLp).times(pool2.totalStaked).div(new BigNumber(10).pow(18))\n    if (pool2.isSingleAsset) { quoteTokens = new BigNumber(pool2.totalStaked).div(new BigNumber(10).pow(18)).div(2) }\n    const tvl = getTotalValueFromQuoteTokens(quoteTokens, pool2.quoteTokenSymbol, prices)\n    const rewardTokenPrice = lookupPrice(QuoteToken.RVRS, prices)\n    const totalRewardPricePerYear = rewardTokenPrice.times(pool2.tokenPerBlock).times(BLOCKS_PER_YEAR)\n    const apy = totalRewardPricePerYear.div(tvl).times(100)\n    return { ...pool2, isFinished: pool2.sousId === 0 ? false : pool2.isFinished && block > pool2.endBlock, apy, tvl }\n    // console.log(pool2.sousId, quoteTokens && quoteTokens.toNumber(), tvl && tvl.toNumber())\n    // console.log(\"APY\", pool2, tvl && tvl.toNumber())\n    // console.log(\"TVL\", pool2.stakingTokenName, tvl && tvl.toNumber(), apy && apy.toNumber())\n    // const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool2.totalStaked))\n    // console.log(\"price\", pool2.tokenName, rewardTokenPrice && rewardTokenPrice.toNumber())\n  })\n  const [finishedPools, openPools] = partition(poolsWithApy, (pool2) => pool2.isFinished)\n  const { url, isExact } = useRouteMatch()\n  const [modalOpen, setModalOpen] = useState(true)\n  const handleModal = async () => {\n    setModalOpen(!modalOpen)\n  }\n\n  return (\n    <Page>\n      { /* Bonds card layout */}\n      <Route path={`${path}`}>\n        {orderBy(openPools, ['sortOrder']).map((pool2) => (<PoolCard key={pool2.sousId} pool2={pool2} />))}\n      </Route>\n      <Route path={`${path}/inactive`}>\n        {orderBy(finishedPools, ['sortOrder']).map((pool2) => (<PoolCard key={pool2.sousId} pool2={pool2} />))}\n      </Route>\n      { /* Active/Inactive button */}\n      <ActiveInactiveContatiner>\n        <div\n          style={{\n            display: 'inline-flex',\n            borderRadius: 25,\n            overflow: 'hidden',\n          }}\n        >\n          <Ripples>\n            <ActiveInactiveButton as={Link} className=\"nav-links\" to={`${url}`}>\n              Active\n            </ActiveInactiveButton>\n          </Ripples>\n        </div>\n        <div\n          style={{\n            display: 'inline-flex',\n            borderRadius: 15,\n            overflow: 'hidden',\n          }}\n        >\n          <Ripples>\n            <ActiveInactiveButton as={Link} className=\"nav-links\" to={`${url}/inactive`}>Inactive</ActiveInactiveButton>\n          </Ripples>\n        </div>\n      </ActiveInactiveContatiner>\n    </Page>\n  )\n}\n\nexport default Bond\n\n\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/staking.tsx",["989","990","991"],"import React from 'react'\nimport { Route, useRouteMatch, Link } from 'react-router-dom'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { BLOCKS_PER_YEAR } from 'config'\nimport orderBy from 'lodash/orderBy'\nimport partition from 'lodash/partition'\nimport useBlock from 'hooks/useBlock'\nimport { usePools, usePrices, getTotalValueFromQuoteTokens, lookupPrice, useFarmFromPid, } from 'state/hooks'\nimport Page from 'components/layout/containers/page'\nimport PoolCard from './card'\n\nexport const aprToApy = (apr: number): BigNumber => {\n  const apy = new BigNumber(apr).div(100).div(365).plus(1).pow(365).minus(1).times(100);\n  return apy.isNaN() || !apy.isFinite() ? null : apy;\n};\nexport const BIG_TEN = new BigNumber(10);\n\nconst Staking: React.FC = () => {\n  const { path } = useRouteMatch()\n  const { account } = useWallet()\n  const farm0 = useFarmFromPid(0);\n  const pools = usePools(account)\n  const prices = usePrices()\n  const block = useBlock()\n  const poolsWithApy = pools.map((pool) => {\n    const quoteTokens = pool.totalStaked ?\n      new BigNumber(pool.totalStaked.toString()).div(2).div(BIG_TEN.pow(18)) :\n      new BigNumber(0)\n    const tvl = getTotalValueFromQuoteTokens(quoteTokens, pool.quoteTokenSymbol, prices)\n    const reverseAtlastUserAction = pool.userData ?\n      new BigNumber(pool.userData.reverseAtlastUserAction) :\n      new BigNumber(0)\n    const lastDepositedTime = pool.userData ?\n      new BigNumber(pool.userData.lastDepositedTime) :\n      new BigNumber(0)\n    const lastUserActionTime = pool.userData ?\n      new BigNumber(pool.userData.lastUserActionTime) :\n      new BigNumber(0)\n    const rewardTokenPrice = lookupPrice(pool.tokenName, prices)\n    const totalRewardPricePerYear = rewardTokenPrice.times(farm0.vikingPerBlock).div(BIG_TEN.pow(18)).times(farm0.poolWeight).times(BLOCKS_PER_YEAR)\n    const apr = totalRewardPricePerYear.div(tvl).times(100).times(2)\n    const apy = aprToApy(apr)\n    // console.log(\"TVL\", pool.stakingTokenName, tvl && tvl.toNumber(), apy && apy.toNumber())\n    // console.log(\"APY\", pool, tvl && tvl.toNumber())\n    // const totalStakingTokenInPool = stakingTokenPriceInBNB.times(getBalanceNumber(pool.totalStaked))\n    // console.log(\"price\", pool.tokenName, rewardTokenPrice && rewardTokenPrice.toNumber())\n\n    return {\n      ...pool,\n      isFinished: pool.sousId === 0 ? false : pool.isFinished || block > pool.endBlock,\n      apr, apy, tvl, lastDepositedTime, lastUserActionTime, reverseAtlastUserAction\n    }\n\n  })\n  \n  const [finishedPools, openPools] = partition(poolsWithApy, (pool) => pool.isFinished)\n  const { url, isExact } = useRouteMatch()\n  // console.log(poolsWithApy)\n\n  return (\n    <Page>\n      <Route  path={`${path}`}>\n        {orderBy(openPools, ['sortOrder']).map((pool) => (<PoolCard key={pool.sousId} pool={pool} />))}\n      </Route>\n      <Route path={`${path}/history`}>\n        {orderBy(finishedPools, ['sortOrder']).map((pool) => (<PoolCard key={pool.sousId} pool={pool} />))}\n      </Route>\n    </Page>\n  )\n}\n\nexport default Staking\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Dashboard/dashboard.tsx",["992","993","994","995","996","997"],"import React, { useCallback, useState } from 'react'\nimport Page from 'components/layout/containers/page'\nimport { Flex } from '@pancakeswap-libs/uikit'\nimport { useWallet } from \"@binance-chain/bsc-use-wallet\"\nimport TypographyTitle from 'components/layout/typography/typographyTitle'\nimport TypographyBold from 'components/layout/typography/typographyBold'\nimport Typography from 'components/layout/typography/typography'\nimport { Skeleton } from 'components/Skeleton'\nimport DashboardContainer from 'components/layout/containers/airdropContainer'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { FaAward, FaClipboard, FaExternalLinkAlt } from 'react-icons/fa';\nimport { Container } from 'react-bootstrap'\nimport styled, { keyframes } from 'styled-components'\nimport { getBalanceNumber } from \"../../utils/formatBalance\"\n\nconst ContentCard = styled(Container)`\n  background-image: linear-gradient(to right, #333B4C, #37404E);\n  border-radius: 20px;\n  flex-direction: column;\n  justify-content: space-around;\n  position: center;\n  text-align: center;\n  padding: 15px;\n`\n\nconst TierCard = styled(Container)`\n  background-image: linear-gradient(to right, #353E50, #3D4853);\n  border-radius: 20px;\n  flex-direction: column;\n  justify-content: space-around;\n  position: center;\n  text-align: center;\n  padding: 15px;\n  border: 2px;\n  border-style: solid !important;\n  border-color: #808080 !important;\n`\n\nconst TitleCard = styled(Container)`\n  background-image: linear-gradient(to right, #353E50, #3D4853);\n  border-radius: 20px;\n  flex-direction: column;\n  justify-content: space-around;\n  position: center;\n  text-align: center;\n  padding: 20px;\n`\n\nconst Dashboard = () => {\n  const { account } = useWallet()\n\n  const between = (x: any, min: number, max: number): boolean => {\n    return x >= min && x <= max;\n  }\n\n  const evaluateTier = (balance: number): number => {\n    if (between(balance, 100, 1000)) return 1;\n    if (between(balance, 1000, 5000)) return 2;\n    if (between(balance, 5000, 10000)) return 3;\n    if (balance > 10000) return 4;\n    return 0;\n  }\n\n  // wallet balance rvrs/vervrs\n  const rvrsBalanceNo = getBalanceNumber(useTokenBalance(getCakeAddress()));\n  const rvrsBalanceStr = rvrsBalanceNo.toLocaleString('en-us', { maximumFractionDigits: 2, minimumFractionDigits: 2 })\n\n  return (\n    <Page>\n      <DashboardContainer>\n        <TitleCard style={{ marginBottom: '10px', marginTop: '0px' }}>\n          <TypographyTitle style={{ marginTop: '15px', marginBottom: '15px' }}>\n            <div>Dashboard&nbsp;</div>\n            <a\n              href={`https://explorer.harmony.one/address/${account}`}\n              className=\"nav-icon\"\n              onClick={() => navigator.clipboard.writeText(`${account}`)}>\n\n              <Typography>{account.substring(0, 16)}...&nbsp;<FaExternalLinkAlt /></Typography>\n            </a>\n          </TypographyTitle>\n\n        </TitleCard>\n        <Flex justifyContent=\"center\">\n          <ContentCard style={{ marginRight: '7px' }}>\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>veRVRS Balance</Typography>\n          </ContentCard>\n          <TierCard style={{ marginRight: '7px' }}>\n            <TypographyBold style={{ marginBottom: '5px' }}>Current Tier</TypographyBold>\n            <Typography>Silver Reversor <FaAward /></Typography>\n          </TierCard>\n          <ContentCard>\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>RVRS Balance</Typography>\n          </ContentCard>\n        </Flex>\n        <Flex justifyContent=\"center\" marginTop=\"10px\">\n          <ContentCard style={{ marginRight: '7px' }}>\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>veRVRS Cap</Typography>\n          </ContentCard>\n          <ContentCard style={{ marginRight: '7px' }} >\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>To Reach Cap</Typography>\n          </ContentCard>\n          <ContentCard >\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>Staked RVRS</Typography>\n          </ContentCard>\n        </Flex>\n        <Flex justifyContent=\"center\" marginTop=\"10px\">\n          <ContentCard style={{ marginRight: '7px' }}>\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>Expected Yearly Returns</Typography>\n          </ContentCard>\n          <ContentCard>\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>Treasury Balance</Typography>\n          </ContentCard>\n        </Flex>\n        <Flex justifyContent=\"center\" marginTop=\"10px\">\n          <ContentCard>\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>RVRS Per $1 Worth of Treasury</Typography>\n          </ContentCard>\n        </Flex>\n      </DashboardContainer>\n    </Page>\n  )\n}\n\nexport default Dashboard","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Airdrops/airdrops.tsx",["998","999"],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/flex/index.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/containers/page.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/stake.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/config/constants/bonds.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Bonds/card.tsx",["1000","1001","1002","1003"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport { useSousApproveBurn } from 'hooks/useApprove'\nimport { useSousStakeBurn } from 'hooks/useStake'\nimport { useSousHarvestBurn } from 'hooks/useHarvest'\nimport { Flex, useModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useERC20 } from 'hooks/useContract'\nimport useBlock from 'hooks/useBlock'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { Pool2 } from 'state/types'\nimport { Skeleton } from 'components/Skeleton'\nimport BondsContainer from '../../components/layout/containers/bondsContainer'\nimport ContentCard from '../../components/layout/cards/bonds/contentCard'\nimport HeaderCard from '../../components/layout/cards/bonds/headerCard'\nimport DepositModal from '../../components/bondModal'\nimport ClaimButtonDisabled from '../../components/layout/buttons/claimButtonDisabled'\nimport BondButton from '../../components/layout/buttons/bondButton'\nimport BondButtonDisabled from '../../components/layout/buttons/bondButtonDisabled'\nimport ClaimButton from '../../components/layout/buttons/claimButton'\nimport Typography from '../../components/layout/typography/typography'\nimport TypographyBold from '../../components/layout/typography/typographyBold'\nimport TypographyTitle from '../../components/layout/typography/typographyTitle'\n\ninterface PoolWithApy extends Pool2 {\n  apy: BigNumber\n}\n\ninterface HarvestProps {\n  pool2: PoolWithApy\n}\n\nconst Bonds: React.FC<HarvestProps> = ({ pool2 }) => {\n  const {\n    sousId,\n    tokenName,\n    stakingTokenName,\n    stakingTokenAddress,\n    apy,\n    tokenDecimals,\n    startBlock,\n    endBlock,\n    userData,\n    stakingLimit,\n  } = pool2\n\n  const block = useBlock();\n  const user = useWallet();\n  const tokenAddress = useERC20(stakingTokenAddress);\n  const allowance = new BigNumber(userData?.allowance || 0);\n  const earnings = new BigNumber(userData?.pendingReward || 0);\n  const earningsNo = earnings.toNumber();\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals));\n\n  // functions\n  const { onApprove } = useSousApproveBurn(tokenAddress, sousId);\n  const { onStake } = useSousStakeBurn(sousId);\n  const { onReward } = useSousHarvestBurn(sousId);\n  const [requestedApproval, setRequestedApproval] = useState(false);\n  const [pendingTx, setPendingTx] = useState(false);\n\n  // bond token balance\n  const bondTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0);\n  const bondTokenBalanceNo = bondTokenBalance.toNumber();\n  const bondTokenBalanceStr = bondTokenBalanceNo.toLocaleString('en-us', { maximumFractionDigits: 2, minimumFractionDigits: 0 });\n\n  // bonded balance\n  const bondedBalance = new BigNumber(userData?.stakedBalance || 0);\n  const bondedBalanceNo = bondedBalance.toNumber();\n  const bondedBalanceStr = getBalanceNumber(bondedBalance).toLocaleString('en-us', { maximumFractionDigits: 2, minimumFractionDigits: 2 });\n\n  // misc\n  const userHasBondedBalance = bondedBalance?.toNumber() > 0\n  const needsApproval = !userHasBondedBalance && !allowance.toNumber()\n\n  // to start \n  const hasStarted = block > startBlock\n  const hoursToStartNo = (startBlock - block) * 2 * 0.000277778;\n  const hoursToStartStr = hoursToStartNo.toLocaleString('en-us', { maximumFractionDigits: 2, minimumFractionDigits: 0 });\n\n  // vesting period\n  const hasEnded = block > endBlock\n  const vesting = block > startBlock ? (endBlock - block) * 2 * 0.000277778 * 0.0416667 : (endBlock - startBlock) * 2 * 0.000277778 * 0.0416667\n  const vestingStr = vesting.toLocaleString('en-us', { maximumFractionDigits: 1 })\n\n  // returns\n  const roiNo = (apy && apy.div(365).times(vesting).minus(100)).toNumber();\n  const positiveRoi = roiNo > 0;\n  const fivePercentRoi = roiNo > 5;\n  const roiStr = roiNo.toLocaleString('en-us', { maximumFractionDigits: 0, minimumFractionDigits: 0 });\n\n  // tvl\n  const tbvNo = pool2.tvl && pool2.tvl.toNumber();\n  const tbvStr = tbvNo.toLocaleString('en-us', { maximumFractionDigits: 0, minimumFractionDigits: 0 });\n\n  // rewards to claim\n  const rewardsNo = getBalanceNumber(earnings, tokenDecimals);\n  const rewardsStr = rewardsNo.toLocaleString('en-us', { maximumFractionDigits: 2, minimumFractionDigits: 0 });\n\n  // bond modal\n  const [onPresentDeposit] = useModal(\n    <DepositModal\n      max={stakingLimit && bondTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : bondTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />\n  )\n\n  // approve tx\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      if (!txHash) { setRequestedApproval(false) }\n    }\n    catch (e) { console.error(e) }\n  }, [onApprove, setRequestedApproval])\n\n  return (\n    <BondsContainer>\n      <HeaderCard>\n        {hasStarted ?\n          <Flex justifyContent=\"space-between\">\n            <Flex justifyContent=\"space-between\">\n              <TypographyTitle>\n                <Flex justifyContent=\"space-between\">\n                  <TypographyTitle style={{ marginLeft: \"17px\" }}>{tokenName}&nbsp;</TypographyTitle>\n                  <a target=\"_blanK\" rel=\"noreferrer\" href=\"https://reverse.gitbook.io/docs/the-protocol/reverseum-bonding-pools\" className=\"nav-links\">\n                    <TypographyTitle style={{ borderBottom: '1px dotted #FFFF' }}>rvBond</TypographyTitle>\n                  </a>\n                </Flex>\n              </TypographyTitle>\n            </Flex>\n            {fivePercentRoi ?\n              <Flex alignItems=\"end\">\n                {user && (needsApproval ? (\n                  <BondButton\n                    style={{ justifyContent: \"center\" }}\n                    disabled={hasEnded}\n                    onClick={handleApprove}>\n                    Enable\n                  </BondButton>\n                ) : (\n                  <BondButton style={{ justifyContent: \"center\" }}\n                    disabled={hasEnded}\n                    onClick={onPresentDeposit}>\n                    Bond\n                  </BondButton>\n                ))}\n              </Flex>\n              :\n              <Flex alignItems=\"end\">\n                {user &&\n                  <BondButtonDisabled disabled>Sold Out</BondButtonDisabled>\n                }\n              </Flex>\n            }\n          </Flex>\n          :\n          <Flex justifyContent=\"space-between\">\n            <TypographyTitle>\n              <Flex justifyContent=\"space-between\">\n                <TypographyTitle style={{ marginLeft: \"17px\" }}>{tokenName}&nbsp;</TypographyTitle>\n                <a target=\"_blanK\" rel=\"noreferrer\" href=\"https://reverse.gitbook.io/docs/the-protocol/reverseum-bonding-pools\" className=\"nav-links\">\n                  <TypographyTitle style={{ borderBottom: '1px dotted #FFFF' }}>rvBond</TypographyTitle>\n                </a>\n              </Flex>\n            </TypographyTitle>\n            <Flex alignItems=\"end\">\n              <div>\n                {hoursToStartNo > 1000 ?\n                  <BondButtonDisabled disabled style={{ justifyContent: \"center\" }}>\n                    <Skeleton height={10} />\n                  </BondButtonDisabled>\n                  :\n                  <BondButtonDisabled disabled style={{ justifyContent: \"center\" }}>\n                    {hoursToStartStr}h Left\n                  </BondButtonDisabled>\n                }\n              </div>\n            </Flex>\n          </Flex>\n        }\n      </HeaderCard>\n      <Flex justifyContent=\"space-between\">\n        <ContentCard>\n          <Flex justifyContent=\"space-between\">\n            {/* ROI */}\n            <Flex flexDirection=\"column\" alignItems=\"start\">\n              <TypographyBold style={{ marginBottom: \"5px\" }}>vROI</TypographyBold>\n              {hasStarted ?\n                <div>\n                  {positiveRoi ?\n                    <Typography>{roiStr}%</Typography>\n                    :\n                    <Typography>Sold&nbsp;Out</Typography>\n                  }\n                </div>\n                :\n                <Skeleton height={10} width={60} />\n              }\n            </Flex>\n            {/* Vesting */}\n            <Flex flexDirection=\"column\" alignItems=\"start\">\n              <TypographyBold style={{ marginBottom: \"5px\" }}>Vesting</TypographyBold>\n              {!hasEnded ?\n                <div>\n                  {hasStarted ?\n                    <Typography>{vestingStr}&nbsp;Days</Typography>\n                    :\n                    <Skeleton height={10} width={60} />}\n                </div>\n                :\n                <Typography>Ended</Typography>\n              }\n            </Flex>\n            {/* TVL */}\n            <Flex flexDirection=\"column\" alignItems=\"start\">\n              <TypographyBold style={{ marginBottom: \"5px\" }}>TVL</TypographyBold>\n              <div>\n                {hasStarted ?\n                  <Typography>${tbvStr}</Typography>\n                  :\n                  <Skeleton height={10} width={60} />}\n              </div>\n            </Flex>\n            {/* Bonded by user */}\n            {user && (\n              <Flex flexDirection=\"column\" alignItems=\"start\">\n                <TypographyBold style={{ marginBottom: \"5px\" }}>Bonded</TypographyBold>\n                {hasStarted ?\n                  <div>\n                    {bondedBalanceNo ?\n                      <Typography>{bondedBalanceStr}&nbsp;{tokenName}</Typography>\n                      :\n                      <Typography>N/A</Typography>\n                    }\n                  </div>\n                  :\n                  <Typography><Skeleton height={10} width={64} /></Typography>\n                }\n              </Flex>\n            )}\n          </Flex>\n        </ContentCard>\n        {/* Claim RVRS */}\n        {user && (\n          <Flex>\n            {rewardsNo > 0 ?\n              <ClaimButton\n                style={{ marginLeft: '20px', justifyContent: \"center\" }}\n                disabled={!rewardsNo}\n                onClick={async () => {\n                  setPendingTx(true)\n                  await onReward()\n                  setPendingTx(false)\n                }}>\n                <Flex flexDirection=\"column\" alignItems=\"center\">\n                  <TypographyBold style={{ marginBottom: \"4px\" }}>Claim</TypographyBold>\n                  {hasStarted ?\n                    <Typography>{rewardsStr}&nbsp;RVRS</Typography>\n                    :\n                    <Skeleton height={10} width={60} />\n                  }\n                </Flex>\n              </ClaimButton>\n              :\n              <ClaimButtonDisabled\n                style={{ marginLeft: '20px', justifyContent: \"center\" }}\n                disabled={!rewardsNo}\n                onClick={async () => {\n                  setPendingTx(true)\n                  await onReward()\n                  setPendingTx(false)\n                }}>\n                <Flex flexDirection=\"column\" alignItems=\"center\">\n                  <TypographyBold style={{ marginBottom: \"4px\" }}>Claim</TypographyBold>\n                  {hasStarted ?\n                    <Typography>{rewardsStr}&nbsp;RVRS</Typography>\n                    :\n                    <Skeleton height={10} width={60} />\n                  }\n                </Flex>\n              </ClaimButtonDisabled>\n            }\n          </Flex>\n        )}\n      </Flex>\n    </BondsContainer>\n  )\n}\n\nexport default Bonds\n\n\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/card.tsx",["1004","1005"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useState } from 'react'\nimport styled from 'styled-components'\nimport { useModal } from '@pancakeswap-libs/uikit'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { useERC20 } from 'hooks/useContract'\nimport { useSousApprove } from 'hooks/useApprove'\nimport { useSousStake } from 'hooks/useStake'\nimport { useSousUnstake } from 'hooks/useUnstake'\nimport { getBalanceNumber } from 'utils/formatBalance'\nimport { QuoteToken, PoolCategory } from 'config/constants/types'\nimport { Pool } from 'state/types'\nimport { Skeleton } from 'components/Skeleton'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport Typography from 'components/layout/typography/typography'\nimport { Flex } from 'components/layout/flex'\nimport TypographyBold from 'components/layout/typography/typographyBold'\nimport TypographyTitle from 'components/layout/typography/typographyTitle'\nimport WithdrawModal from './modals/withdrawModal'\nimport StakeModal from './modals/stakeModal'\nimport { usePriceCakeBusd } from \"../../state/hooks\";\nimport ContentCard from './containers/contentCard'\nimport ContentCard2 from './containers/contentCard2'\nimport ContentCardMain from './containers/contentCardMain'\nimport TitleCard from './containers/titleCard'\nimport Container from './containers/container'\n\ninterface PoolWithApy extends Pool {\n  apy: BigNumber\n  apr: BigNumber\n}\n\ninterface HarvestProps {\n  pool: PoolWithApy\n}\n\nconst Card: React.FC<HarvestProps> = ({ pool }) => {\n  const { sousId, stakingTokenName, stakingTokenAddress, apy, tokenDecimals, poolCategory, isFinished, userData, stakingLimit, pricePerShare } = pool\n\n  // rvrs\n  const rvrsBalance = getBalanceNumber(useTokenBalance(getCakeAddress()));\n  const rvrsBalanceStr = rvrsBalance.toLocaleString('en-us', { maximumFractionDigits: 2, minimumFractionDigits: 2 });\n  const rvrsPrice = usePriceCakeBusd()\n\n  const isBnbPool = poolCategory === PoolCategory.BINANCE\n  const stakingTokenContract = useERC20(stakingTokenAddress)\n\n  // func\n  const { account } = useWallet()\n  const { onApprove } = useSousApprove(stakingTokenContract, sousId)\n  const { onStake } = useSousStake(sousId, isBnbPool)\n  const { onUnstake } = useSousUnstake(sousId)\n\n  const [requestedApproval, setRequestedApproval] = useState(false)\n  const [pendingTx, setPendingTx] = useState(false)\n\n  const allowance = new BigNumber(userData?.allowance || 0)\n  const stakingTokenBalance = new BigNumber(userData?.stakingTokenBalance || 0)\n  const isOldSyrup = stakingTokenName === QuoteToken.SYRUP\n  const convertedLimit = new BigNumber(stakingLimit).multipliedBy(new BigNumber(10).pow(tokenDecimals))\n\n  // staked\n  const staked = new BigNumber(userData?.stakedBalance || 0);\n  const stakedUsdStr = new BigNumber(getBalanceNumber(staked)).times(rvrsPrice).toNumber().toLocaleString('en-us', { maximumFractionDigits: 2, minimumFractionDigits: 2 });\n  const stakedNo = getBalanceNumber(staked);\n  const stakedStr = stakedNo.toLocaleString('en-us', { maximumFractionDigits: 2, minimumFractionDigits: 2 });\n\n  // misc\n  const accountHasStakedBalance = staked?.toNumber() > 0;\n  const needsApproval = !accountHasStakedBalance && !allowance.toNumber() && !isBnbPool;\n\n  // tvl\n  const tvlNo = pool.tvl && pool.tvl.toNumber();\n  const tvlStr = tvlNo.toLocaleString('en-us', { maximumFractionDigits: 0, minimumFractionDigits: 0 });\n\n  // apy\n  const apyNo = apy && apy.toNumber();\n  const apyStr = apy && apy.toNumber().toLocaleString('en-us', { maximumFractionDigits: 2, minimumFractionDigits: 2 });\n  const monthlyRoiStr = apy && apy.div(12).toNumber().toLocaleString('en-us', { maximumFractionDigits: 2, minimumFractionDigits: 2 });\n\n  // approve, withdraw, deposit\n  const [onPresentWithdraw] = useModal(\n    <WithdrawModal max={staked} onConfirm={onUnstake} tokenName={stakingTokenName} pricePerShare={pricePerShare} />,\n  )\n  const handleApprove = useCallback(async () => {\n    try {\n      setRequestedApproval(true)\n      const txHash = await onApprove()\n      // user rejected tx or didn't go thru\n      if (!txHash) {\n        setRequestedApproval(false)\n      }\n    } catch (e) {\n      console.error(e)\n    }\n  }, [onApprove, setRequestedApproval])\n  const [onPresentDeposit] = useModal(\n    <StakeModal\n      max={stakingLimit && stakingTokenBalance.isGreaterThan(convertedLimit) ? convertedLimit : stakingTokenBalance}\n      onConfirm={onStake}\n      tokenName={stakingLimit ? `${stakingTokenName} (${stakingLimit} max)` : stakingTokenName}\n    />,\n  )\n\n  return (\n    <Container>\n      <TitleCard style={{ marginBottom: '10px' }}>\n        <TypographyTitle>RVRS Staking&nbsp;</TypographyTitle>\n        <a target=\"_blanK\" rel=\"noreferrer\" href=\"https://medium.com/@reverseprotocolONE/diamond-hands-through-vervrs-46dad3106d3\" className=\"nav-links\">\n          (<TypographyTitle style={{ marginTop: '15px', marginBottom: '15px', marginLeft: '0px', borderBottom: '1px dotted #FFFF' }}>Soon Deprecated</TypographyTitle>)\n        </a>\n      </TitleCard>\n      <Flex justifyContent=\"center\" marginBottom=\"10px\">\n        <ContentCard style={{ marginRight: '7px' }}>\n          {pool.apy ?\n            <TypographyBold style={{ marginBottom: '5px' }}>${tvlStr}</TypographyBold>\n            :\n            <Typography><Skeleton height={10} width={60} marginBottom=\"5px\" /></Typography>\n          }\n          <Typography>TVL</Typography>\n        </ContentCard>\n        <ContentCardMain>\n          {pool.apy ?\n            <TypographyBold style={{ marginBottom: '5px' }}>{apyStr}%</TypographyBold>\n            :\n            <Typography><Skeleton height={10} marginBottom=\"5px\" /></Typography>\n          }\n          <Typography>Annual Yield</Typography>\n        </ContentCardMain>\n        <ContentCard style={{ marginLeft: '7px' }}>\n          {pool.apy ?\n            <TypographyBold style={{ marginBottom: '5px' }}>{monthlyRoiStr}%</TypographyBold>\n            :\n            <Typography><Skeleton height={10} marginBottom=\"5px\" /></Typography>\n          }\n          <Typography>Monthly ROI</Typography>\n        </ContentCard>\n      </Flex>\n      <Flex justifyContent=\"center\">\n        <ContentCard2 style={{ marginRight: '7px' }}>\n          {pool.apy ?\n            <TypographyBold style={{ marginBottom: '5px' }}>{stakedStr}</TypographyBold>\n            :\n            <Typography><Skeleton height={10} marginBottom=\"5px\" /></Typography>\n          }\n          <Typography>Staked RVRS</Typography>\n        </ContentCard2>\n        <ContentCard2>\n          {pool.apy ?\n            <TypographyBold style={{ marginBottom: '5px' }}>${stakedUsdStr}</TypographyBold>\n            :\n            <Typography><Skeleton height={10} marginBottom=\"5px\" /></Typography>\n          }\n          <Typography>Staked (USD)</Typography>\n        </ContentCard2>\n      </Flex>\n      <Divider />\n      {account && (!needsApproval ? (\n        <Flex justifyContent=\"center\" marginTop=\"0px\" marginBottom=\"20px\">\n          {stakedNo > 0 ?\n            <>\n              <UnstakeButton\n                style={{ marginRight: \"12px\" }}\n                disabled={staked.eq(new BigNumber(0)) || pendingTx}\n                onClick={isOldSyrup ? async () => {\n                  setPendingTx(true)\n                  await onUnstake('0')\n                  setPendingTx(false)\n                } : onPresentWithdraw}>\n                Unstake\n              </UnstakeButton>\n              <StakeButton\n                disabled={isFinished && sousId !== 0}\n                onClick={onPresentDeposit}>\n                &nbsp;Stake&nbsp;\n              </StakeButton>\n            </>\n            :\n            <>\n              <UnstakeButton\n                style={{ marginRight: \"12px\" }}\n                disabled\n                onClick={isOldSyrup ? async () => {\n                  setPendingTx(true)\n                  await onUnstake('0')\n                  setPendingTx(false)\n                } : onPresentWithdraw}>\n                Unstake\n              </UnstakeButton>\n              <StakeButton\n                disabled={isFinished && sousId !== 0}\n                onClick={onPresentDeposit}\n              >\n                &nbsp;Stake&nbsp;\n              </StakeButton>\n            </>\n          }\n        </Flex>\n      ) : (\n        <StakeButton\n          style={{ marginTop: \"0px\", marginBottom: \"20px\" }}\n          disabled={requestedApproval}\n          onClick={handleApprove}>\n          Enable\n        </StakeButton>\n      ))}\n    </Container>\n  )\n}\n\nconst StakeButton = styled.button`\n  font-size: 18px;\n  font-weight: 600;\n  color: #E2E2E2;\n  justify-content: center;\n  background-image: linear-gradient(180deg, #506063, #909BBF);\n  border-radius: 15px;\n  border: 0px;\n  padding-left: 110px;\n  padding-right: 110px;\n  padding-top: 17px;\n  padding-bottom: 17px;\n  :hover {\n    background-image: linear-gradient(180deg, #506063, #A1ACCD);\n    box-shadow: 0px 0px 10px 0px #5A6F73;\n    transition: 0.5s;\n    color: #FFFF;\n  }\n`\n\nconst UnstakeButton = styled.button`\n  font-size: 18px;\n  font-weight: 600;\n  color: #C7CBD0;\n  justify-content: center;\n  background-color: #46505E;\n  border-radius: 15px;\n  border: 0px;\n  padding-left: 110px;\n  padding-right: 100px;\n  padding-top: 17px;\n  padding-bottom: 17px;\n  :hover {\n      background-color: #535E6F;\n      transition: 0.3s;\n      color: #FFFF;\n  } \n`\n\nconst Divider = styled.div`\n  background-color: #9B9B9B;\n  height: 1px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-top: 25px;\n  width: 0%;\n`\n\nexport default Card\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/WalletModal/index.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/hooks/useAirdropClaim.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/flex/Flex.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/containers/activeInactiveContainer.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/claimButtonDisabled.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/bondButton.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/containers/airdropContainer.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/activeInactiveButton.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/containers/bondsContainer.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/bondModal.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/bondButtonDisabled.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/claimButton.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/WalletModal/useWalletModal.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/divider.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/claimAirdropButtonDisabled.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/claimAirdropButton.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/typography/typographyBold.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/typography/typography.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/typography/typographyTitle.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/containers/contentCard.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/containers/contentCardMain.tsx",["1006"],"import { Container } from 'react-bootstrap'\nimport styled, { keyframes } from 'styled-components'\n\nconst pulse = keyframes`\n  0% {\n    box-shadow: 0px 0px 5px #5A6F73;\n  }\n  30% {\n    box-shadow: 0px 0px 15px #5A6F73;\n  }\n  70% {\n    box-shadow: 0px 0px 15px #5A6F73;\n  }\n  100% {\n    box-shadow: 0px 0px 5px #5A6F73;\n  }\n`\n\nconst contentCardMain = styled(Container)`\n  background-image: linear-gradient(to right, #3E475E, #4E5E62); \n  border-radius: 20px;\n  flex-direction: column;\n  justify-content: space-around;\n  position: center;\n  text-align: center;\n  padding: 20px;\n  `\n\n\nexport default contentCardMain","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/modals/withdrawModal.tsx",["1007","1008","1009"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport ModalActions from 'components/layout/modal/modalActions'\nimport styled from 'styled-components'\nimport Modal from 'components/layout/modal/Modal'\nimport useWalletModal from 'components/WalletModal'\nimport ModalButton from 'components/layout/buttons/modalButton'\nimport TokenInput from '../../../components/layout/modal/input'\nimport { getFullDisplayBalance } from '../../../utils/formatBalance'\n\nconst DEFAULT_TOKEN_DECIMALS = new BigNumber(10).pow(18)\n\ninterface WithdrawModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  pricePerShare?: BigNumber\n  tokenName?: string\n}\n\nconst WithdrawModal: React.FC<WithdrawModalProps> = ({ onConfirm, onDismiss, max, tokenName = '', pricePerShare= DEFAULT_TOKEN_DECIMALS }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n  const getSharesFromAmount = (amount) => {\n      const shares = new BigNumber(amount).times(DEFAULT_TOKEN_DECIMALS).div(pricePerShare)\n      console.log('getSharesFromAmount', pricePerShare, amount, shares.toString())\n      return shares.toFixed(18).toString()\n  }\n\n  return (\n    <Modal title={`Unstake ${tokenName}` } onDismiss={onDismiss}>\n      <TokenInput\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        value={val}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>        \n        <ModalButton\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(getSharesFromAmount(val))\n            setPendingTx(false)\n            onDismiss()}}>{pendingTx ? 'Pending...' : 'Confirm'}\n        </ModalButton>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default WithdrawModal\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/containers/contentCard2.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/containers/titleCard.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/containers/container.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/pages/Staking/modals/stakeModal.tsx",["1010","1011"],"import BigNumber from 'bignumber.js'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport styled from 'styled-components'\nimport ModalActions from 'components/layout/modal/modalActions'\nimport { getFullDisplayBalance } from 'utils/formatBalance'\nimport { Modal } from '@pancakeswap-libs/uikit'\nimport { TranslateString } from 'utils/translateTextHelpers'\nimport useWalletModal from 'components/WalletModal'\nimport ModalButton from 'components/layout/buttons/modalButton'\nimport TokenInput from '../../../components/layout/modal/input'\n\ninterface DepositModalProps {\n  max: BigNumber\n  onConfirm: (amount: string) => void\n  onDismiss?: () => void\n  tokenName?: string\n}\n\nconst StakeModal: React.FC<DepositModalProps> = ({ max, onConfirm, onDismiss, tokenName = '' }) => {\n  const [val, setVal] = useState('')\n  const [pendingTx, setPendingTx] = useState(false)\n  const fullBalance = useMemo(() => {\n    return getFullDisplayBalance(max)\n  }, [max])\n  const handleChange = useCallback(\n    (e: React.FormEvent<HTMLInputElement>) => {\n      setVal(e.currentTarget.value)\n    },\n    [setVal],\n  )\n  const handleSelectMax = useCallback(() => {\n    setVal(fullBalance)\n  }, [fullBalance, setVal])\n\n  return (\n    <Modal title={`${TranslateString(3016, 'Stake')} ${tokenName}`} onDismiss={onDismiss}>\n      <TokenInput\n        value={val}\n        onSelectMax={handleSelectMax}\n        onChange={handleChange}\n        max={fullBalance}\n        symbol={tokenName}\n      />\n      <ModalActions>\n        <ModalButton\n          disabled={pendingTx}\n          onClick={async () => {\n            setPendingTx(true)\n            await onConfirm(val)\n            setPendingTx(false)\n            onDismiss()\n          }}\n        >\n          {pendingTx ? 'Pending...' : 'Confirm'}\n        </ModalButton>\n      </ModalActions>\n    </Modal>\n  )\n}\n\nexport default StakeModal","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/cards/bonds/contentCard.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/cards/bonds/headerCard.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/cards/airdrop/contentCard.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/cards/airdrop/titleCard.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/cards/airdrop/contentCardMain.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/Skeleton/index.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/WalletModal/ConnectModal.tsx",["1012","1013","1014"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { HelpIcon, Link } from \"@pancakeswap-libs/uikit\";\nimport Modal from \"components/layout/modal\";\nimport WalletCard from \"./WalletCard\";\nimport config from \"./config\";\nimport { Login } from \"./types\";\n\ninterface Props {\n  login: Login;\n  onDismiss?: () => void;\n}\n\n\nconst ConnectModal: React.FC<Props> = ({ login, onDismiss = () => null }) => (\n  <Modal title=\"Connect to Reverse\" onDismiss={onDismiss}>\n    {config.map((entry, index) => (\n      <WalletCard\n        key={entry.title}\n        login={login}\n        walletConfig={entry}\n        onDismiss={onDismiss}\n        mb={index < config.length - 1 ? \"8px\" : \"0\"}\n      />\n    ))}\n  </Modal>\n);\n\nexport default ConnectModal;\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/WalletModal/AccountModal.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/modal/input/index.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/Skeleton/Skeleton.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/modal/Modal.tsx",["1015"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { Container } from \"react-bootstrap\";\nimport { InjectedProps } from \"./types\";\nimport TypographyTitle from \"../typography/typographyTitle\";\nimport { Flex } from \"../flex\";\n\ninterface Props extends InjectedProps {\n  title: string;\n  hideCloseButton?: boolean;\n  onBack?: () => void;\n  bodyPadding?: string;\n}\n\nconst Modal: React.FC<Props> = ({\n  title,\n  onDismiss,\n  children,\n  hideCloseButton = false,\n}) => (\n\n  <StyledModal>\n    <TitleContainer>\n      <Flex justifyContent=\"space-between\">\n        <TypographyTitle>{title}</TypographyTitle>\n        <DismissButton onClick={onDismiss}>Close</DismissButton>\n      </Flex>\n    </TitleContainer>\n    <Divider />\n    <Flex>\n      {children}\n    </Flex>\n  </StyledModal>\n)\n\nconst Divider = styled.div`\n  height: 0px;\n  margin-top: 10px;\n  margin-bottom: 30px;\n  width: 0%;\n`\n\nconst TitleContainer = styled(Container)`\n  background-image: linear-gradient(to right, #3E475E, #4E5E62);\n  border-radius: 20px;\n  padding: 20px;\n`\n\n\nconst StyledModal = styled.div`\n  background-image: linear-gradient(#2D3544, #37404E);\n  padding: 20px;\n  border: 1px solid #FFF;\n  border-radius: 25px;\n  z-index: ${({ theme }) => theme.zIndices.modal};\n\n`\n\nconst DismissButton = styled.button`\n  font-size: 18px;\n  font-weight: 600;\n  color: #D6D6D6;\n  padding: 0px;\n  background: none;\n  border-radius: 10px;\n  border: 0px;\n  border-style: solid !important;\n  border-color: #5F6C74 !important;\n  :hover {\n      background: none;\n      color: #FFFF;\n      transition: 0.5s;\n  } \n`\n\nexport default Modal;\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/buttons/modalButton.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/WalletModal/config.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/WalletModal/WalletCard.tsx",["1016","1017","1018","1019","1020"],"import { Button } from \"@pancakeswap-libs/uikit\";\nimport typographyBold from \"components/layout/typography/typographyBold\";\nimport React from \"react\";\nimport Ripples, { createRipples } from 'react-ripples'\nimport styled from \"styled-components\";\nimport { localStorageKey } from \"./config\";\nimport { Login, Config } from \"./types\";\n\ninterface Props {\n  walletConfig: Config;\n  login: Login;\n  onDismiss: () => void;\n  mb: string;\n}\n\nconst WalletCard: React.FC<Props> = ({ login, walletConfig, onDismiss, mb }) => {\n  const { title, icon: Icon } = walletConfig;\n  return (\n    <div\n      style={{\n        display: 'inline-flex',\n        borderRadius: 15,\n        overflow: 'hidden',\n        marginLeft: '10px',\n      }}\n    >\n      <Ripples>\n        <ConnectButton\n          onClick={() => {\n            login(walletConfig.connectorId);\n            window.localStorage.setItem(localStorageKey, \"1\");\n          }}\n          style={{ justifyContent: \"space-between\" }}\n          id={`wallet-connect-${title.toLocaleLowerCase()}`}\n        >\n          <Txt style={{ justifyContent: \"space-between\" }}>\n            {title}&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\n            <Icon width=\"40px\" />\n          </Txt>\n        </ConnectButton>\n      </Ripples>\n    </div>\n  );\n};\n\nconst Txt = styled.p`\n    font-size: 18px;\n    font-weight: 700;\n    color: #506063;\n`\n\nconst ConnectButton = styled.button`\n    font-size: 18px;\n    font-weight: 600;\n    padding: 10px;\n    justify-content: center;\n    background-image: linear-gradient(to right, #FFFF, #FFFF);\n    border-radius: 20px;\n    border: 0px;\n    box-shadow: 0px 0px 15px #506063;\n    :hover {\n        background-image: linear-gradient(to right, #E9E9E9, #FFFF);\n    }\n\n    min-width: 340px;\n    \n`\n\nexport default WalletCard;\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/modal/modalActions/index.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/Skeleton/types.ts",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/modal/input/inputContents.tsx",["1021","1022","1023"],"import React from 'react'\nimport styled from 'styled-components'\nimport BigNumber from 'bignumber.js/bignumber'\nimport Ripples, { createRipples } from 'react-ripples'\nimport Input, { InputProps } from '../../../Input'\n\ninterface TokenInputProps extends InputProps {\n  max: number | string\n  symbol: string\n  onSelectMax?: () => void\n  depositFeeBP?: number\n  valueUsd?: number | string\n}\n\nconst InputContent: React.FC<TokenInputProps> = (\n  { max, symbol, onChange, onSelectMax, value, depositFeeBP = 0, valueUsd = 0 }) => {\n  const maxAvailableNo = new BigNumber(max).toNumber();\n  const maxAvailableStr = maxAvailableNo.toLocaleString('en-us', { maximumFractionDigits: 3, minimumFractionDigits: 2 });\n\n  return (\n    <InputContentWrapper>\n      <Text onClick={onSelectMax}>{maxAvailableStr}&nbsp;{symbol}&nbsp;Available</Text>\n      <Input\n        endAdornment={\n          <div\n            style={{\n              display: 'inline-flex',\n              borderRadius: 15,\n              overflow: 'hidden',\n              marginLeft: '10px',\n            }}\n          >\n            <Ripples>\n              <MaxButton onClick={onSelectMax}>\n                Max\n              </MaxButton>\n            </Ripples>\n          </div>\n        }\n        onChange={onChange}\n        placeholder=\"0\"\n        value={value}\n      />\n    </InputContentWrapper>\n  )\n}\n\nconst InputContentWrapper = styled.div``\n\nconst Text = styled.div`\n  display: flex;\n  font-size: 16px;\n  font-weight: 500;\n  margin-bottom: 6px;\n  margin-left: 10px;\n  justify-content: flex-start;\n`\n\nconst MaxButton = styled.button`\n  padding: 15px;\n  padding-left: 20px;\n  color: #D6D6D6;\n  padding-right: 20px;\n  font-weight: 700;\n  margin-left: 5px;\n  background-image: linear-gradient(#506063, #909BBF);\n  border-radius: 17px;\n  border: 0px;\n  :hover {\n      background-image: linear-gradient(#506063, #A1ACCD);\n      color: #FFFF;\n      transition: 0.5s;\n  } \n`\n\nexport default InputContent\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/WalletModal/icons/Metamask.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/modal/index.tsx",[],"/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/modal/modalActions/ModalActions.tsx",["1024","1025"],"import React from 'react'\nimport styled from 'styled-components'\n\nconst ModalActions: React.FC = ({ children }) => {\n  const l = React.Children.toArray(children).length\n  return (\n    <StyledModalActions>\n      {React.Children.map(children, (child, i) => (\n        <StyledModalAction>{child}</StyledModalAction>\n      ))}\n    </StyledModalActions>\n  )\n}\n\nconst StyledModalActions = styled.div`\n  align-items: center;\n  margin-top: 20px;\n  display: flex;\n  padding: 0px;\n  margin-left: 15px;\n`\n\nconst StyledModalAction = styled.div`\n`\n\nexport default ModalActions\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/layout/modal/input/input.tsx",["1026","1027"],"import React from 'react'\nimport styled from 'styled-components'\n\nexport interface InputProps {\n  endAdornment?: React.ReactNode\n  onChange: (e: React.FormEvent<HTMLInputElement>) => void\n  placeholder?: string\n  startAdornment?: React.ReactNode\n  value: string\n}\n\nconst Input: React.FC<InputProps> = ({ endAdornment, onChange, placeholder, startAdornment, value }) => {\n  return (\n    <InputWrapper>\n      <StyledInput placeholder=\"0 RVRS\" value={value} onChange={onChange} />\n      {endAdornment}\n    </InputWrapper>\n  )\n}\n\nconst InputWrapper = styled.div`\n  align-items: center;\n  background-image: linear-gradient(to right, #F2F2F2, #CCCCCC);\n  border-radius: 20px;\n  display: flex;\n  height: 55px;\n  padding: 10px;\n  border: 0px;\n  border-style: solid !important;\n  border-color: #A8A8A8 !important;\n  box-shadow: 0px 0px 15px #828C92;\n\n`\n\nconst StyledInput = styled.input`\n  font-size: 16px;\n  font-weight: 400;\n  background: none;\n  border: 0;\n  color: #2D3544;\n`\n\nexport default Input\n","/Users/ignacio/Documents/GitHub/reverse-frontend/src/components/navigation/footer.tsx",["1028","1029","1030","1031","1032"],"import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { Flex, Toggle, useModal } from '@pancakeswap-libs/uikit'\nimport { Link } from \"react-router-dom\";\nimport 'bootstrap/dist/css/bootstrap.min.css'\nimport { Container } from 'react-bootstrap';\n\nconst MenuBottom = (props) => {\n  const [isChecked, setIsChecked] = useState(false);\n\n  return (\n    <MenuContainer>\n      <NavContainer>\n        <Flex justifyContent=\"space-between\" marginTop=\"10px\">\n          <Flex flexDirection=\"column\" alignItems=\"start\" >\n            <a style={{ marginBottom: \"14px\" }} target=\"_blanK\" rel=\"noreferrer\" href=\"https://reverse.gitbook.io/docs/\" className=\"nav-links\">\n              <TypographyBold>Docs</TypographyBold>\n            </a>\n            <a target=\"_blanK\" rel=\"noreferrer\" href=\"https://discord.gg/yquJYbUtVy\" className=\"nav-links\">\n              <TypographyBold>Discord</TypographyBold>\n            </a>\n          </Flex>\n          <Flex flexDirection=\"column\" alignItems=\"start\" marginLeft=\"-80px\">\n            <a style={{ marginBottom: \"14px\" }} target=\"_blanK\" rel=\"noreferrer\" href=\"https://snapshot.org/#/rvrsprotocol.eth\" className=\"nav-links\">\n              <TypographyBold>Govern</TypographyBold>\n            </a>\n            <a target=\"_blanK\" rel=\"noreferrer\" href=\"https://twitter.com/RVRSProtocol\" className=\"nav-links\">\n              <TypographyBold>Twitter</TypographyBold>\n            </a>\n          </Flex>\n          <Link to=\"/\">\n            <object type=\"image/svg+xml\" data=\"/images/reverse.svg\" width=\"150px\" style={{ marginTop: \"-5px\" }}>&nbsp;</object>\n          </Link>\n        </Flex>\n      </NavContainer>\n    </MenuContainer >\n  )\n}\n\nconst TypographyBold = styled.p`\n  font-size: 15px;\n  font-weight: 500;\n  margin-bottom: 0px;\n  transition: 0.3s;\n`\n\nconst NavContainer = styled(Container)`\n  text-align: center;\n  padding: 20px;\n  max-width: 520px;\n`\nconst MenuContainer = styled(Container)`\n  padding-bottom: 10px;\n  background-coloe: linear-gradient(to right, #354256, #2C3646);\n  background-color: rgba(42, 52, 67, 0.6);\n  :hover {\n    background-color: rgba(42, 52, 67, 1);\n    transition: 0.5s;\n  }\n  max-width: 4000px;\n`\n\nexport default MenuBottom\n","/Users/ignacio/Documents/GitHub/rvrs-ui/src/index.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/App.tsx",["1033","1034","1035"],"import React, { useEffect, Suspense, lazy } from 'react'\nimport { BrowserRouter as Router, Redirect, Route, Switch } from 'react-router-dom'\nimport { useWallet } from '@binance-chain/bsc-use-wallet'\nimport { ResetCSS } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useFetchPublicData } from 'state/hooks'\nimport MenuBottom from 'components/navigation/footer'\nimport Style from 'components/Style'\nimport Page from 'components/layout/containers/page'\nimport Nav from './components/navigation/nav'\n\nBigNumber.config({\n  EXPONENTIAL_AT: 1000,\n  DECIMAL_PLACES: 80,\n})\n\nconst BONDS = lazy(() => import('./pages/Bonds'))\nconst STAKEDEPRECATED = lazy(() => import('./pages/Staking'))\nconst NOTFOUND = lazy(() => import('./pages/NotFound'))\nconst DASHBOARD = lazy(() => import('./pages/Dashboard'))\nconst AIRDROP = lazy(() => import('./pages/Airdrops'))\n\n\nconst App: React.FC = () => {\n  const { account, connect } = useWallet()\n  useEffect(() => {\n    if (!account && window.localStorage.getItem('accountStatus')) {\n      connect('injected')\n    }\n  }, [account, connect])\n  useFetchPublicData()\n\n  return (\n    <Router>\n      <ResetCSS />\n      <Style />\n      <Nav />\n      {account != null && account.length > 1 ?\n        <Suspense fallback>\n          <Route path=\"/bonds\">\n            <BONDS />\n          </Route>\n          <Route path=\"/staking\">\n            <STAKEDEPRECATED />\n          </Route>\n          <Route path=\"/dashboard\">\n            <DASHBOARD />\n          </Route>\n          <Route path=\"/airdrop\">\n            <AIRDROP />\n          </Route>\n        </Suspense>\n        :\n        <Page />\n      }\n      <MenuBottom />\n    </Router >\n  )\n}\n\nexport default React.memo(App)\n","/Users/ignacio/Documents/GitHub/rvrs-ui/src/Providers.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/NotFound.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/navigation/nav.tsx",["1036","1037","1038","1039"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Bonds/index.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/index.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/hooks.ts",["1040","1041","1042","1043","1044"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/getRpcUrl.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Airdrops/index.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Dashboard/index.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/navigation/footer.tsx",["1045","1046","1047","1048","1049"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/Style.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/contexts/RefreshContext.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/containers/page.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/contexts/BlockContext.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/contexts/Localisation/languageContext.tsx",["1050","1051"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/contexts/ThemeContext.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/index.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/actions.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/constants/types.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Bonds/bonds.tsx",["1052","1053","1054"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/staking.tsx",["1055","1056","1057"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/addressHelpers.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/formatBalance.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/constants/rvrs.ts",["1058","1059"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useTokenBalance.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Airdrops/airdrops.tsx",["1060","1061"],"import React, { useCallback, useState } from 'react'\nimport Page from 'components/layout/containers/page'\nimport { Flex } from '@pancakeswap-libs/uikit'\nimport BigNumber from 'bignumber.js'\nimport { useWallet } from \"@binance-chain/bsc-use-wallet\"\nimport TypographyTitle from 'components/layout/typography/typographyTitle'\nimport TypographyBold from 'components/layout/typography/typographyBold'\nimport Typography from 'components/layout/typography/typography'\nimport { Skeleton } from 'components/Skeleton'\nimport AirdropContainer from 'components/layout/containers/airdropContainer'\nimport ContentCard from 'components/layout/cards/airdrop/contentCard'\nimport TitleCard from 'components/layout/cards/airdrop/titleCard'\nimport ContentCardMain from 'components/layout/cards/airdrop/contentCardMain'\nimport Ripples, { createRipples } from 'react-ripples'\nimport Divider from 'components/divider'\nimport ClaimButtonDisabled from 'components/layout/buttons/claimAirdropButtonDisabled'\nimport ClaimButton from 'components/layout/buttons/claimAirdropButton'\nimport { useAirdropData } from \"../../state/hooks\"\nimport useAirdropClaim from \"../../hooks/useAirdropClaim\"\nimport { getBalanceNumber } from \"../../utils/formatBalance\"\n\nconst Airdrop = () => {\n  const { account } = useWallet()\n  const airdropData = useAirdropData(account)\n  const { onAirdropClaim } = useAirdropClaim(account)\n  const totalDistributed = getBalanceNumber(airdropData.totalDistributed)\n  const toClaim = getBalanceNumber(airdropData.userClaimable)\n  const claimed = getBalanceNumber(airdropData.userTotalClaimed)\n  const lastClaimAmount = getBalanceNumber(airdropData.userLastClaimedAmount)\n\n  const expectedReturnsNo = new BigNumber(lastClaimAmount).times(52.2).toNumber()\n  const expectedReturnsStr = expectedReturnsNo.toLocaleString('en-us', { maximumFractionDigits: 2 })\n\n  const totalDistributedNo = totalDistributed;\n  const totalDistributedStr = totalDistributed.toLocaleString('en-us', { maximumFractionDigits: 2 });\n\n  const toClaimStr = toClaim.toLocaleString('en-us', { maximumFractionDigits: 3, minimumFractionDigits: 2 })\n  const claimedStr = claimed.toLocaleString('en-us', { maximumFractionDigits: 3 })\n  const lastClaimAmountStr = lastClaimAmount.toLocaleString('en-us', { maximumFractionDigits: 0 })\n  const [pendingTxn, setPendingTxn] = useState(false)\n  const handleAirdropClaim = useCallback(async () => {\n    try {\n      setPendingTxn(true)\n      const txHash = await onAirdropClaim()\n      if (!txHash) { setPendingTxn(false) }\n    } catch (e) {\n      console.error(e)\n      setPendingTxn(false)\n    }\n  }, [onAirdropClaim, setPendingTxn])\n\n  return (\n    <Page>\n      <AirdropContainer>\n        <TitleCard style={{ marginBottom: '10px' }}>\n          <TypographyTitle>Claim Your Weekly&nbsp;</TypographyTitle>\n          <a target=\"_blanK\" rel=\"noreferrer\" href=\"https://reverse.gitbook.io/docs/the-protocol/reverseum-bonding-pools\" className=\"nav-links\">\n            <TypographyTitle style={{ marginTop: '15px', marginBottom: '15px', borderBottom: '1px dotted #FFFF' }}>UST Airdrop</TypographyTitle>\n          </a>\n        </TitleCard>\n        <Flex justifyContent=\"center\">\n          <ContentCard style={{ marginRight: '7px' }}>\n            {totalDistributedNo > 10 ?\n              <TypographyBold style={{ marginBottom: '5px' }}>${totalDistributedStr}</TypographyBold>\n              :\n              <Typography><Skeleton height={20} marginBottom=\"5px\" /></Typography>\n            }\n            <Typography>Total Distributed</Typography>\n          </ContentCard>\n          <ContentCardMain>\n            {expectedReturnsNo > 1 ?\n              <TypographyBold style={{ marginBottom: '5px' }}>{expectedReturnsStr} UST</TypographyBold>\n              :\n              <Typography><Skeleton height={20} marginBottom=\"5px\" /></Typography>\n            }\n            <Typography>Yearly Returns</Typography>\n          </ContentCardMain>\n          <ContentCard style={{ marginLeft: '7px' }}>\n            {account != null && account.length > 1 ?\n              <div>\n                <TypographyBold style={{ marginBottom: '5px' }}>{claimedStr} UST</TypographyBold>\n                <Typography>Claimed by ({account.substring(0, 5)})</Typography>\n              </div>\n              :\n              <div>\n                <Typography><Skeleton /></Typography>\n                <Typography><Skeleton marginTop=\"5px\" /></Typography>\n              </div>\n            }\n          </ContentCard>\n        </Flex>\n        <Flex justifyContent=\"space-between\" padding=\"10px\" marginTop=\"20px\">\n          <Flex flexDirection=\"column\" marginTop=\"2px\">\n            <Typography>UST</Typography>\n            <TypographyBold style={{ marginLeft: '10px', marginTop: '5px' }}>{toClaimStr}</TypographyBold>\n          </Flex>\n          {toClaim && toClaim > 0 ?\n            <div\n              style={{\n                display: 'inline-flex',\n                borderRadius: 15,\n                overflow: 'hidden',\n              }}\n            >\n              <Ripples>\n                <ClaimButton onClick={handleAirdropClaim} disabled={pendingTxn}>\n                  Collect\n                </ClaimButton>\n              </Ripples>\n            </div>\n            :\n            <ClaimButtonDisabled disabled>\n              Claimed\n            </ClaimButtonDisabled>\n          }\n        </Flex>\n        <Divider />\n      </AirdropContainer>\n    </Page>\n  )\n}\n\nexport default Airdrop","/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Dashboard/dashboard.tsx",["1062","1063","1064","1065","1066","1067"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/flex/index.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useRefresh.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/web3.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/contexts/Localisation/translationsContext.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/WalletModal/index.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/card.tsx",["1068","1069"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useAirdropClaim.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/localisation/languageCodes.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/flex/Flex.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/farms/index.ts",["1070"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/stake/index.ts",["1071"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/airdrop/index.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/bonds/index.ts",["1072"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useBlock.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/constants/contracts.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useContract.ts",["1073","1074"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/WalletModal/useWalletModal.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/containers/airdropContainer.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/containers/container.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/typography/typographyBold.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/typography/typography.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/typography/typographyTitle.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/claimAirdropButton.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/containers/titleCard.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/containers/contentCardMain.tsx",["1075"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/containers/contentCard.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/containers/contentCard2.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/modals/stakeModal.tsx",["1076","1077"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Staking/modals/withdrawModal.tsx",["1078","1079","1080"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/farms/fetchFarmUser.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/farms/fetchFarms.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/index.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/airdrop/fetchAirdropUser.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/bonds/fetchPoolsUser.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/multicall.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/bonds/fetchPools.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/stake/fetchPools.ts",["1081"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/callHelpers.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/Skeleton/index.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/WalletModal/AccountModal.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/WalletModal/ConnectModal.tsx",["1082","1083","1084"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useUnstake.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useStake.ts",["1085","1086"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useApprove.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/constants/farms.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/Skeleton/Skeleton.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/state/stake/fetchPoolsUser.ts",["1087","1088","1089"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useWeb3.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/translateTextHelpers.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/modal/input/index.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/WalletModal/config.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/WalletModal/WalletCard.tsx",["1090","1091","1092","1093","1094"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/constants/index.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/modalButton.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/modal/Modal.tsx",["1095"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/constants/bonds.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/Skeleton/types.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/config/constants/stake.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/modal/modalActions/index.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/modal/input/inputContents.tsx",["1096","1097","1098"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/WalletModal/icons/Metamask.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/modal/index.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/modal/modalActions/ModalActions.tsx",["1099","1100"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/Input/index.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/modal/input/input.tsx",["1101","1102"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/pages/Bonds/card.tsx",["1103","1104","1105","1106"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/utils/erc20.ts",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/divider.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/claimAirdropButtonDisabled.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/cards/airdrop/titleCard.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/cards/airdrop/contentCardMain.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/cards/airdrop/contentCard.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/activeInactiveButton.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/containers/activeInactiveContainer.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/claimButton.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/bondButtonDisabled.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/bondButton.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/buttons/claimButtonDisabled.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/bondModal.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/containers/bondsContainer.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/cards/bonds/headerCard.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/components/layout/cards/bonds/contentCard.tsx",[],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useHarvest.ts",["1107","1108"],"/Users/ignacio/Documents/GitHub/rvrs-ui/src/hooks/useI18n.ts",[],{"ruleId":"1109","replacedBy":"1110"},{"ruleId":"1111","replacedBy":"1112"},{"ruleId":"1113","replacedBy":"1114"},{"ruleId":"1115","replacedBy":"1116"},{"ruleId":"1117","replacedBy":"1118"},{"ruleId":"1119","severity":1,"message":"1120","line":2,"column":35,"nodeType":"1121","messageId":"1122","endLine":2,"endColumn":43},{"ruleId":"1119","severity":1,"message":"1123","line":2,"column":52,"nodeType":"1121","messageId":"1122","endLine":2,"endColumn":58},{"ruleId":"1119","severity":1,"message":"1124","line":19,"column":7,"nodeType":"1121","messageId":"1122","endLine":19,"endColumn":15},{"ruleId":"1119","severity":1,"message":"1125","line":13,"column":44,"nodeType":"1121","messageId":"1122","endLine":13,"endColumn":50},{"ruleId":"1119","severity":1,"message":"1126","line":17,"column":7,"nodeType":"1121","messageId":"1122","endLine":17,"endColumn":17},{"ruleId":"1127","severity":1,"message":"1128","line":197,"column":3,"nodeType":"1129","messageId":"1130","endLine":197,"endColumn":14},{"ruleId":"1127","severity":1,"message":"1128","line":198,"column":3,"nodeType":"1129","messageId":"1130","endLine":198,"endColumn":14},{"ruleId":"1127","severity":1,"message":"1128","line":220,"column":3,"nodeType":"1129","messageId":"1130","endLine":220,"endColumn":14},{"ruleId":"1119","severity":1,"message":"1131","line":33,"column":7,"nodeType":"1121","messageId":"1122","endLine":33,"endColumn":43},{"ruleId":"1127","severity":1,"message":"1128","line":60,"column":51,"nodeType":"1129","messageId":"1130","endLine":60,"endColumn":62},{"ruleId":"1119","severity":1,"message":"1132","line":4,"column":8,"nodeType":"1121","messageId":"1122","endLine":4,"endColumn":17},{"ruleId":"1119","severity":1,"message":"1133","line":6,"column":38,"nodeType":"1121","messageId":"1122","endLine":6,"endColumn":50},{"ruleId":"1119","severity":1,"message":"1134","line":57,"column":44,"nodeType":"1121","messageId":"1122","endLine":57,"endColumn":54},{"ruleId":"1119","severity":1,"message":"1134","line":25,"column":38,"nodeType":"1121","messageId":"1122","endLine":25,"endColumn":48},{"ruleId":"1119","severity":1,"message":"1134","line":46,"column":42,"nodeType":"1121","messageId":"1122","endLine":46,"endColumn":52},{"ruleId":"1119","severity":1,"message":"1135","line":17,"column":24,"nodeType":"1121","messageId":"1122","endLine":17,"endColumn":35},{"ruleId":"1119","severity":1,"message":"1136","line":18,"column":10,"nodeType":"1121","messageId":"1122","endLine":18,"endColumn":22},{"ruleId":"1109","replacedBy":"1137"},{"ruleId":"1111","replacedBy":"1138"},{"ruleId":"1113","replacedBy":"1139"},{"ruleId":"1115","replacedBy":"1140"},{"ruleId":"1117","replacedBy":"1141"},{"ruleId":"1119","severity":1,"message":"1142","line":1,"column":17,"nodeType":"1121","messageId":"1122","endLine":1,"endColumn":25},{"ruleId":"1119","severity":1,"message":"1143","line":6,"column":34,"nodeType":"1121","messageId":"1122","endLine":6,"endColumn":40},{"ruleId":"1119","severity":1,"message":"1144","line":18,"column":9,"nodeType":"1121","messageId":"1122","endLine":18,"endColumn":21},{"ruleId":"1119","severity":1,"message":"1145","line":19,"column":9,"nodeType":"1121","messageId":"1122","endLine":19,"endColumn":20},{"ruleId":"1119","severity":1,"message":"1132","line":2,"column":8,"nodeType":"1121","messageId":"1122","endLine":2,"endColumn":17},{"ruleId":"1119","severity":1,"message":"1146","line":3,"column":8,"nodeType":"1121","messageId":"1122","endLine":3,"endColumn":14},{"ruleId":"1119","severity":1,"message":"1147","line":24,"column":7,"nodeType":"1121","messageId":"1122","endLine":24,"endColumn":16},{"ruleId":"1119","severity":1,"message":"1148","line":25,"column":7,"nodeType":"1121","messageId":"1122","endLine":25,"endColumn":18},{"ruleId":"1119","severity":1,"message":"1132","line":5,"column":8,"nodeType":"1121","messageId":"1122","endLine":5,"endColumn":17},{"ruleId":"1119","severity":1,"message":"1149","line":5,"column":8,"nodeType":"1121","messageId":"1122","endLine":5,"endColumn":19},{"ruleId":"1119","severity":1,"message":"1150","line":9,"column":29,"nodeType":"1121","messageId":"1122","endLine":9,"endColumn":43},{"ruleId":"1119","severity":1,"message":"1151","line":19,"column":7,"nodeType":"1121","messageId":"1122","endLine":19,"endColumn":25},{"ruleId":"1119","severity":1,"message":"1152","line":6,"column":19,"nodeType":"1121","messageId":"1122","endLine":6,"endColumn":32},{"ruleId":"1119","severity":1,"message":"1153","line":39,"column":16,"nodeType":"1121","messageId":"1122","endLine":39,"endColumn":23},{"ruleId":"1119","severity":1,"message":"1154","line":41,"column":9,"nodeType":"1121","messageId":"1122","endLine":41,"endColumn":20},{"ruleId":"1119","severity":1,"message":"1155","line":2,"column":32,"nodeType":"1121","messageId":"1122","endLine":2,"endColumn":36},{"ruleId":"1119","severity":1,"message":"1156","line":58,"column":11,"nodeType":"1121","messageId":"1122","endLine":58,"endColumn":14},{"ruleId":"1119","severity":1,"message":"1153","line":58,"column":16,"nodeType":"1121","messageId":"1122","endLine":58,"endColumn":23},{"ruleId":"1119","severity":1,"message":"1157","line":1,"column":17,"nodeType":"1121","messageId":"1122","endLine":1,"endColumn":28},{"ruleId":"1119","severity":1,"message":"1142","line":1,"column":30,"nodeType":"1121","messageId":"1122","endLine":1,"endColumn":38},{"ruleId":"1119","severity":1,"message":"1158","line":12,"column":19,"nodeType":"1121","messageId":"1122","endLine":12,"endColumn":30},{"ruleId":"1119","severity":1,"message":"1159","line":14,"column":18,"nodeType":"1121","messageId":"1122","endLine":14,"endColumn":27},{"ruleId":"1119","severity":1,"message":"1160","line":57,"column":9,"nodeType":"1121","messageId":"1122","endLine":57,"endColumn":21},{"ruleId":"1119","severity":1,"message":"1161","line":67,"column":9,"nodeType":"1121","messageId":"1122","endLine":67,"endColumn":23},{"ruleId":"1119","severity":1,"message":"1152","line":14,"column":19,"nodeType":"1121","messageId":"1122","endLine":14,"endColumn":32},{"ruleId":"1119","severity":1,"message":"1162","line":39,"column":9,"nodeType":"1121","messageId":"1122","endLine":39,"endColumn":27},{"ruleId":"1119","severity":1,"message":"1163","line":52,"column":9,"nodeType":"1121","messageId":"1122","endLine":52,"endColumn":19},{"ruleId":"1119","severity":1,"message":"1164","line":59,"column":10,"nodeType":"1121","messageId":"1122","endLine":59,"endColumn":27},{"ruleId":"1119","severity":1,"message":"1165","line":60,"column":10,"nodeType":"1121","messageId":"1122","endLine":60,"endColumn":19},{"ruleId":"1119","severity":1,"message":"1166","line":65,"column":9,"nodeType":"1121","messageId":"1122","endLine":65,"endColumn":28},{"ruleId":"1119","severity":1,"message":"1161","line":43,"column":9,"nodeType":"1121","messageId":"1122","endLine":43,"endColumn":23},{"ruleId":"1119","severity":1,"message":"1167","line":78,"column":9,"nodeType":"1121","messageId":"1122","endLine":78,"endColumn":14},{"ruleId":"1119","severity":1,"message":"1168","line":4,"column":7,"nodeType":"1121","messageId":"1122","endLine":4,"endColumn":12},{"ruleId":"1119","severity":1,"message":"1169","line":4,"column":8,"nodeType":"1121","messageId":"1122","endLine":4,"endColumn":14},{"ruleId":"1119","severity":1,"message":"1170","line":6,"column":8,"nodeType":"1121","messageId":"1122","endLine":6,"endColumn":22},{"ruleId":"1127","severity":1,"message":"1128","line":38,"column":7,"nodeType":"1129","messageId":"1130","endLine":38,"endColumn":18},{"ruleId":"1119","severity":1,"message":"1169","line":3,"column":8,"nodeType":"1121","messageId":"1122","endLine":3,"endColumn":14},{"ruleId":"1119","severity":1,"message":"1170","line":8,"column":8,"nodeType":"1121","messageId":"1122","endLine":8,"endColumn":22},{"ruleId":"1119","severity":1,"message":"1169","line":2,"column":8,"nodeType":"1121","messageId":"1122","endLine":2,"endColumn":14},{"ruleId":"1119","severity":1,"message":"1171","line":3,"column":10,"nodeType":"1121","messageId":"1122","endLine":3,"endColumn":18},{"ruleId":"1119","severity":1,"message":"1155","line":3,"column":20,"nodeType":"1121","messageId":"1122","endLine":3,"endColumn":24},{"ruleId":"1119","severity":1,"message":"1172","line":19,"column":3,"nodeType":"1121","messageId":"1122","endLine":19,"endColumn":18},{"ruleId":"1119","severity":1,"message":"1143","line":1,"column":10,"nodeType":"1121","messageId":"1122","endLine":1,"endColumn":16},{"ruleId":"1119","severity":1,"message":"1173","line":2,"column":8,"nodeType":"1121","messageId":"1122","endLine":2,"endColumn":22},{"ruleId":"1119","severity":1,"message":"1152","line":4,"column":19,"nodeType":"1121","messageId":"1122","endLine":4,"endColumn":32},{"ruleId":"1119","severity":1,"message":"1174","line":16,"column":61,"nodeType":"1121","messageId":"1122","endLine":16,"endColumn":70},{"ruleId":"1119","severity":1,"message":"1175","line":16,"column":72,"nodeType":"1121","messageId":"1122","endLine":16,"endColumn":74},{"ruleId":"1119","severity":1,"message":"1152","line":4,"column":19,"nodeType":"1121","messageId":"1122","endLine":4,"endColumn":32},{"ruleId":"1119","severity":1,"message":"1176","line":16,"column":48,"nodeType":"1121","messageId":"1122","endLine":16,"endColumn":60},{"ruleId":"1119","severity":1,"message":"1177","line":16,"column":66,"nodeType":"1121","messageId":"1122","endLine":16,"endColumn":74},{"ruleId":"1119","severity":1,"message":"1178","line":5,"column":9,"nodeType":"1121","messageId":"1122","endLine":5,"endColumn":10},{"ruleId":"1119","severity":1,"message":"1179","line":8,"column":45,"nodeType":"1121","messageId":"1122","endLine":8,"endColumn":46},{"ruleId":"1119","severity":1,"message":"1180","line":12,"column":64,"nodeType":"1121","messageId":"1122","endLine":12,"endColumn":75},{"ruleId":"1119","severity":1,"message":"1181","line":12,"column":77,"nodeType":"1121","messageId":"1122","endLine":12,"endColumn":91},{"ruleId":"1119","severity":1,"message":"1182","line":3,"column":16,"nodeType":"1121","messageId":"1122","endLine":3,"endColumn":22},{"ruleId":"1119","severity":1,"message":"1183","line":3,"column":24,"nodeType":"1121","messageId":"1122","endLine":3,"endColumn":32},{"ruleId":"1119","severity":1,"message":"1184","line":8,"column":21,"nodeType":"1121","messageId":"1122","endLine":8,"endColumn":26},{"ruleId":"1119","severity":1,"message":"1185","line":9,"column":10,"nodeType":"1121","messageId":"1122","endLine":9,"endColumn":19},{"ruleId":"1119","severity":1,"message":"1186","line":9,"column":21,"nodeType":"1121","messageId":"1122","endLine":9,"endColumn":33},{"ruleId":"1119","severity":1,"message":"1120","line":2,"column":35,"nodeType":"1121","messageId":"1122","endLine":2,"endColumn":43},{"ruleId":"1119","severity":1,"message":"1123","line":2,"column":52,"nodeType":"1121","messageId":"1122","endLine":2,"endColumn":58},{"ruleId":"1119","severity":1,"message":"1124","line":19,"column":7,"nodeType":"1121","messageId":"1122","endLine":19,"endColumn":15},{"ruleId":"1119","severity":1,"message":"1142","line":1,"column":17,"nodeType":"1121","messageId":"1122","endLine":1,"endColumn":25},{"ruleId":"1119","severity":1,"message":"1143","line":6,"column":34,"nodeType":"1121","messageId":"1122","endLine":6,"endColumn":40},{"ruleId":"1119","severity":1,"message":"1144","line":18,"column":9,"nodeType":"1121","messageId":"1122","endLine":18,"endColumn":21},{"ruleId":"1119","severity":1,"message":"1145","line":19,"column":9,"nodeType":"1121","messageId":"1122","endLine":19,"endColumn":20},{"ruleId":"1119","severity":1,"message":"1125","line":13,"column":44,"nodeType":"1121","messageId":"1122","endLine":13,"endColumn":50},{"ruleId":"1119","severity":1,"message":"1126","line":17,"column":7,"nodeType":"1121","messageId":"1122","endLine":17,"endColumn":17},{"ruleId":"1127","severity":1,"message":"1128","line":197,"column":3,"nodeType":"1129","messageId":"1130","endLine":197,"endColumn":14},{"ruleId":"1127","severity":1,"message":"1128","line":198,"column":3,"nodeType":"1129","messageId":"1130","endLine":198,"endColumn":14},{"ruleId":"1127","severity":1,"message":"1128","line":220,"column":3,"nodeType":"1129","messageId":"1130","endLine":220,"endColumn":14},{"ruleId":"1119","severity":1,"message":"1182","line":3,"column":16,"nodeType":"1121","messageId":"1122","endLine":3,"endColumn":22},{"ruleId":"1119","severity":1,"message":"1183","line":3,"column":24,"nodeType":"1121","messageId":"1122","endLine":3,"endColumn":32},{"ruleId":"1119","severity":1,"message":"1184","line":8,"column":21,"nodeType":"1121","messageId":"1122","endLine":8,"endColumn":26},{"ruleId":"1119","severity":1,"message":"1185","line":9,"column":10,"nodeType":"1121","messageId":"1122","endLine":9,"endColumn":19},{"ruleId":"1119","severity":1,"message":"1186","line":9,"column":21,"nodeType":"1121","messageId":"1122","endLine":9,"endColumn":33},{"ruleId":"1119","severity":1,"message":"1131","line":33,"column":7,"nodeType":"1121","messageId":"1122","endLine":33,"endColumn":43},{"ruleId":"1127","severity":1,"message":"1128","line":60,"column":51,"nodeType":"1129","messageId":"1130","endLine":60,"endColumn":62},{"ruleId":"1119","severity":1,"message":"1152","line":6,"column":19,"nodeType":"1121","messageId":"1122","endLine":6,"endColumn":32},{"ruleId":"1119","severity":1,"message":"1153","line":39,"column":16,"nodeType":"1121","messageId":"1122","endLine":39,"endColumn":23},{"ruleId":"1119","severity":1,"message":"1154","line":41,"column":9,"nodeType":"1121","messageId":"1122","endLine":41,"endColumn":20},{"ruleId":"1119","severity":1,"message":"1155","line":2,"column":32,"nodeType":"1121","messageId":"1122","endLine":2,"endColumn":36},{"ruleId":"1119","severity":1,"message":"1156","line":58,"column":11,"nodeType":"1121","messageId":"1122","endLine":58,"endColumn":14},{"ruleId":"1119","severity":1,"message":"1153","line":58,"column":16,"nodeType":"1121","messageId":"1122","endLine":58,"endColumn":23},{"ruleId":"1119","severity":1,"message":"1147","line":24,"column":7,"nodeType":"1121","messageId":"1122","endLine":24,"endColumn":16},{"ruleId":"1119","severity":1,"message":"1148","line":25,"column":7,"nodeType":"1121","messageId":"1122","endLine":25,"endColumn":18},{"ruleId":"1119","severity":1,"message":"1152","line":14,"column":19,"nodeType":"1121","messageId":"1122","endLine":14,"endColumn":32},{"ruleId":"1119","severity":1,"message":"1162","line":39,"column":9,"nodeType":"1121","messageId":"1122","endLine":39,"endColumn":27},{"ruleId":"1119","severity":1,"message":"1157","line":1,"column":17,"nodeType":"1121","messageId":"1122","endLine":1,"endColumn":28},{"ruleId":"1119","severity":1,"message":"1142","line":1,"column":30,"nodeType":"1121","messageId":"1122","endLine":1,"endColumn":38},{"ruleId":"1119","severity":1,"message":"1158","line":12,"column":19,"nodeType":"1121","messageId":"1122","endLine":12,"endColumn":30},{"ruleId":"1119","severity":1,"message":"1159","line":14,"column":18,"nodeType":"1121","messageId":"1122","endLine":14,"endColumn":27},{"ruleId":"1119","severity":1,"message":"1160","line":57,"column":9,"nodeType":"1121","messageId":"1122","endLine":57,"endColumn":21},{"ruleId":"1119","severity":1,"message":"1161","line":67,"column":9,"nodeType":"1121","messageId":"1122","endLine":67,"endColumn":23},{"ruleId":"1119","severity":1,"message":"1161","line":43,"column":9,"nodeType":"1121","messageId":"1122","endLine":43,"endColumn":23},{"ruleId":"1119","severity":1,"message":"1167","line":78,"column":9,"nodeType":"1121","messageId":"1122","endLine":78,"endColumn":14},{"ruleId":"1119","severity":1,"message":"1132","line":4,"column":8,"nodeType":"1121","messageId":"1122","endLine":4,"endColumn":17},{"ruleId":"1119","severity":1,"message":"1132","line":2,"column":8,"nodeType":"1121","messageId":"1122","endLine":2,"endColumn":17},{"ruleId":"1119","severity":1,"message":"1146","line":3,"column":8,"nodeType":"1121","messageId":"1122","endLine":3,"endColumn":14},{"ruleId":"1119","severity":1,"message":"1135","line":17,"column":24,"nodeType":"1121","messageId":"1122","endLine":17,"endColumn":35},{"ruleId":"1119","severity":1,"message":"1136","line":18,"column":10,"nodeType":"1121","messageId":"1122","endLine":18,"endColumn":22},{"ruleId":"1119","severity":1,"message":"1168","line":4,"column":7,"nodeType":"1121","messageId":"1122","endLine":4,"endColumn":12},{"ruleId":"1119","severity":1,"message":"1169","line":3,"column":8,"nodeType":"1121","messageId":"1122","endLine":3,"endColumn":14},{"ruleId":"1119","severity":1,"message":"1170","line":8,"column":8,"nodeType":"1121","messageId":"1122","endLine":8,"endColumn":22},{"ruleId":"1119","severity":1,"message":"1169","line":4,"column":8,"nodeType":"1121","messageId":"1122","endLine":4,"endColumn":14},{"ruleId":"1119","severity":1,"message":"1170","line":6,"column":8,"nodeType":"1121","messageId":"1122","endLine":6,"endColumn":22},{"ruleId":"1127","severity":1,"message":"1128","line":38,"column":7,"nodeType":"1129","messageId":"1130","endLine":38,"endColumn":18},{"ruleId":"1119","severity":1,"message":"1132","line":5,"column":8,"nodeType":"1121","messageId":"1122","endLine":5,"endColumn":17},{"ruleId":"1119","severity":1,"message":"1169","line":2,"column":8,"nodeType":"1121","messageId":"1122","endLine":2,"endColumn":14},{"ruleId":"1119","severity":1,"message":"1171","line":3,"column":10,"nodeType":"1121","messageId":"1122","endLine":3,"endColumn":18},{"ruleId":"1119","severity":1,"message":"1155","line":3,"column":20,"nodeType":"1121","messageId":"1122","endLine":3,"endColumn":24},{"ruleId":"1119","severity":1,"message":"1134","line":25,"column":38,"nodeType":"1121","messageId":"1122","endLine":25,"endColumn":48},{"ruleId":"1119","severity":1,"message":"1134","line":46,"column":42,"nodeType":"1121","messageId":"1122","endLine":46,"endColumn":52},{"ruleId":"1119","severity":1,"message":"1149","line":5,"column":8,"nodeType":"1121","messageId":"1122","endLine":5,"endColumn":19},{"ruleId":"1119","severity":1,"message":"1150","line":9,"column":29,"nodeType":"1121","messageId":"1122","endLine":9,"endColumn":43},{"ruleId":"1119","severity":1,"message":"1151","line":19,"column":7,"nodeType":"1121","messageId":"1122","endLine":19,"endColumn":25},{"ruleId":"1119","severity":1,"message":"1143","line":1,"column":10,"nodeType":"1121","messageId":"1122","endLine":1,"endColumn":16},{"ruleId":"1119","severity":1,"message":"1173","line":2,"column":8,"nodeType":"1121","messageId":"1122","endLine":2,"endColumn":22},{"ruleId":"1119","severity":1,"message":"1152","line":4,"column":19,"nodeType":"1121","messageId":"1122","endLine":4,"endColumn":32},{"ruleId":"1119","severity":1,"message":"1174","line":16,"column":61,"nodeType":"1121","messageId":"1122","endLine":16,"endColumn":70},{"ruleId":"1119","severity":1,"message":"1175","line":16,"column":72,"nodeType":"1121","messageId":"1122","endLine":16,"endColumn":74},{"ruleId":"1119","severity":1,"message":"1172","line":19,"column":3,"nodeType":"1121","messageId":"1122","endLine":19,"endColumn":18},{"ruleId":"1119","severity":1,"message":"1152","line":4,"column":19,"nodeType":"1121","messageId":"1122","endLine":4,"endColumn":32},{"ruleId":"1119","severity":1,"message":"1176","line":16,"column":48,"nodeType":"1121","messageId":"1122","endLine":16,"endColumn":60},{"ruleId":"1119","severity":1,"message":"1177","line":16,"column":66,"nodeType":"1121","messageId":"1122","endLine":16,"endColumn":74},{"ruleId":"1119","severity":1,"message":"1178","line":5,"column":9,"nodeType":"1121","messageId":"1122","endLine":5,"endColumn":10},{"ruleId":"1119","severity":1,"message":"1179","line":8,"column":45,"nodeType":"1121","messageId":"1122","endLine":8,"endColumn":46},{"ruleId":"1119","severity":1,"message":"1180","line":12,"column":64,"nodeType":"1121","messageId":"1122","endLine":12,"endColumn":75},{"ruleId":"1119","severity":1,"message":"1181","line":12,"column":77,"nodeType":"1121","messageId":"1122","endLine":12,"endColumn":91},{"ruleId":"1119","severity":1,"message":"1163","line":52,"column":9,"nodeType":"1121","messageId":"1122","endLine":52,"endColumn":19},{"ruleId":"1119","severity":1,"message":"1164","line":59,"column":10,"nodeType":"1121","messageId":"1122","endLine":59,"endColumn":27},{"ruleId":"1119","severity":1,"message":"1165","line":60,"column":10,"nodeType":"1121","messageId":"1122","endLine":60,"endColumn":19},{"ruleId":"1119","severity":1,"message":"1166","line":65,"column":9,"nodeType":"1121","messageId":"1122","endLine":65,"endColumn":28},{"ruleId":"1119","severity":1,"message":"1133","line":6,"column":38,"nodeType":"1121","messageId":"1122","endLine":6,"endColumn":50},{"ruleId":"1119","severity":1,"message":"1134","line":57,"column":44,"nodeType":"1121","messageId":"1122","endLine":57,"endColumn":54},"lines-around-directive",["1187"],"global-require",[],"no-buffer-constructor",[],"no-new-require",[],"no-path-concat",[],"@typescript-eslint/no-unused-vars","'Redirect' is defined but never used.","Identifier","unusedVar","'Switch' is defined but never used.","'NOTFOUND' is assigned a value but never used.","'State2' is defined but never used.","'TEN_POW_18' is assigned a value but never used.","no-console","Unexpected console statement.","MemberExpression","unexpected","'fetchTranslationsForSelectedLanguage' is assigned a value but never used.","'BigNumber' is defined but never used.","'useSousChef2' is defined but never used.","'isUsingBnb' is assigned a value but never used.","'poolsConfig' is defined but never used.","'PoolCategory' is defined but never used.",["1187"],[],[],[],[],"'useState' is defined but never used.","'Button' is defined but never used.","'rvrsPriceUsd' is assigned a value but never used.","'rvrsBalance' is assigned a value but never used.","'pools2' is defined but never used.","'countBack' is assigned a value but never used.","'countLength' is assigned a value but never used.","'sousChefABI' is defined but never used.","'getCakeAddress' is defined but never used.","'masterChefContract' is assigned a value but never used.","'createRipples' is defined but never used.","'isExact' is assigned a value but never used.","'handleModal' is assigned a value but never used.","'Link' is defined but never used.","'url' is assigned a value but never used.","'useCallback' is defined but never used.","'FaClipboard' is defined but never used.","'keyframes' is defined but never used.","'evaluateTier' is assigned a value but never used.","'rvrsBalanceStr' is assigned a value but never used.","'lastClaimAmountStr' is assigned a value but never used.","'earningsNo' is assigned a value but never used.","'requestedApproval' is assigned a value but never used.","'pendingTx' is assigned a value but never used.","'bondTokenBalanceStr' is assigned a value but never used.","'apyNo' is assigned a value but never used.","'pulse' is assigned a value but never used.","'styled' is defined but never used.","'useWalletModal' is defined but never used.","'HelpIcon' is defined but never used.","'hideCloseButton' is assigned a value but never used.","'typographyBold' is defined but never used.","'onDismiss' is defined but never used.","'mb' is defined but never used.","'depositFeeBP' is assigned a value but never used.","'valueUsd' is assigned a value but never used.","'l' is assigned a value but never used.","'i' is defined but never used.","'placeholder' is defined but never used.","'startAdornment' is defined but never used.","'Toggle' is defined but never used.","'useModal' is defined but never used.","'props' is defined but never used.","'isChecked' is assigned a value but never used.","'setIsChecked' is assigned a value but never used.","padding-line-between-statements"]