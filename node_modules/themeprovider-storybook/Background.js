"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.BackgroundHelper = void 0;
var addons_1 = __importDefault(require("@storybook/addons"));
var React = __importStar(require("react"));
var react_json_view_1 = __importDefault(require("react-json-view"));
var Modal_1 = require("./components/Modal");
var BackgroundHelper = function (_a) {
    var children = _a.children, themes = _a.themes;
    var _b = React.useState(null), theme = _b[0], setTheme = _b[1];
    var _c = React.useState(false), isOpen = _c[0], setIsOpen = _c[1];
    var toggleModal = function () { return setIsOpen(!isOpen); };
    React.useEffect(function () {
        var channel = addons_1.default.getChannel();
        channel.on("selectTheme", setTheme);
        channel.emit("setThemes", themes);
        return function () {
            channel = addons_1.default.getChannel();
            channel.removeListener("selectTheme", setTheme);
        };
    }, [themes, children]);
    React.useEffect(function () {
        var channel = addons_1.default.getChannel();
        channel.on("openModal", toggleModal);
        return function () {
            channel = addons_1.default.getChannel();
            channel.removeListener("openModal", setTheme);
        };
    }, []);
    return (React.createElement(React.Fragment, null,
        theme && (React.createElement(Modal_1.Modal, { isOpen: isOpen, toggleModal: toggleModal, headerTitle: theme.name },
            React.createElement(react_json_view_1.default, { src: theme, displayObjectSize: false, indentWidth: 2 }))),
        children));
};
exports.BackgroundHelper = BackgroundHelper;
