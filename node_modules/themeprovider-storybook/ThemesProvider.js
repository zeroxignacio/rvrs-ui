"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.ThemesProvider = void 0;
var addons_1 = __importDefault(require("@storybook/addons"));
var React = __importStar(require("react"));
var styled_components_1 = require("styled-components");
var ThemesProvider = function (_a) {
    var settings = _a.settings, story = _a.story, children = _a.children, themes = _a.themes, CustomThemeProvider = _a.CustomThemeProvider;
    var _b = React.useState(null), theme = _b[0], setTheme = _b[1];
    React.useEffect(function () {
        var channel = addons_1.default.getChannel();
        channel.on("selectTheme", setTheme);
        channel.emit("setThemes", themes);
        channel.emit("setSettings", settings);
        return function () {
            var channelUnmount = addons_1.default.getChannel();
            channelUnmount.removeListener("selectTheme", setTheme);
        };
    }, []);
    if (CustomThemeProvider) {
        if (!theme && story)
            return (React.createElement(CustomThemeProvider, { theme: themes[0] }, children));
        return React.createElement(CustomThemeProvider, { theme: theme }, children);
    }
    if (!theme && story)
        return React.createElement(styled_components_1.ThemeProvider, { theme: themes[0] }, children);
    return React.createElement(styled_components_1.ThemeProvider, { theme: theme }, children);
};
exports.ThemesProvider = ThemesProvider;
