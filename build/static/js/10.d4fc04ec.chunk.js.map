{"version":3,"sources":["components/layout/containers/page.tsx","components/layout/typography/typography.tsx","components/layout/typography/typographyBold.tsx","components/Skeleton/types.ts","components/Skeleton/Skeleton.tsx","components/layout/containers/airdropContainer.tsx","pages/Dashboard/dashboard.tsx"],"names":["Page","styled","div","typography","p","typographyBold","animation","variant","waves","keyframes","pulse","Root","layout","space","Pulse","Waves","Skeleton","VARIANT","ANIMATION","props","airdropContainer","ContentCard","Container","TierCard","TitleCard","Dashboard","account","useWallet","getBalanceNumber","useTokenBalance","getCakeAddress","toLocaleString","maximumFractionDigits","minimumFractionDigits","style","marginBottom","marginTop","href","className","onClick","navigator","clipboard","writeText","substring","justifyContent","marginRight"],"mappings":"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","file":"static/js/10.d4fc04ec.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nconst Page = styled.div`\n  min-height: calc(100vh - 221px);\n  margin-left: auto;\n  margin-right: auto;\n  max-width: 590px;\n  padding-top: 50px;\n  justify-content: center;\n  flex-wrap: wrap;\n`\n\nexport default Page\n","import styled from \"styled-components\";\n\nconst typography = styled.p`\n    font-size: 16px;\n    color: #CFCFCF;\n    font-weight: 400;\n`\n\nexport default typography\n","import styled from \"styled-components\";\n\nconst typographyBold = styled.p`\n    font-size: 18px;\n    font-weight: 700;\n`\n\nexport default typographyBold\n","import { LayoutProps, SpaceProps } from \"styled-system\";\n\nexport const animation = {\n  WAVES: \"waves\",\n  PULSE: \"pulse\",\n} as const;\n\nexport const variant = {\n  RECT: \"rect\",\n  CIRCLE: \"circle\",\n} as const;\n\nexport type Animation = typeof animation[keyof typeof animation];\nexport type Variant = typeof variant[keyof typeof variant];\n\nexport interface SkeletonProps extends SpaceProps, LayoutProps {\n  animation?: Animation;\n  variant?: Variant;\n}\n","import React from \"react\";\nimport styled, { keyframes } from \"styled-components\";\nimport { space, layout } from \"styled-system\";\nimport { SkeletonProps, animation as ANIMATION, variant as VARIANT } from \"./types\";\n\nconst waves = keyframes`\n   from {\n        left: -150px;\n    }\n    to   {\n        left: 100%;\n    }\n`;\n\nconst pulse = keyframes`\n  0% {\n    opacity: 0.2;\n  }\n  50% {\n    opacity: 0.5;\n  }\n  100% {\n    opacity: 0.2;\n  }\n`\n\nconst Root = styled.div<SkeletonProps>`\n  min-height: 18px;\n  justify-content: center;\n  align-items: center;\n  background-color: #232834;\n  border-radius: 5px;\n  ${layout}\n  ${space}\n`\n\nconst Pulse = styled(Root)`\n  animation: ${pulse} 3s infinite ease-out;\n  transform: translate3d(0, 0, 0);\n`\n\nconst Waves = styled(Root)`\n  position: relative;\n  overflow: hidden;\n  transform: translate3d(0, 0, 0);\n  &:before {\n    content: \"\";\n    position: absolute;\n    background-image: linear-gradient(90deg, transparent, rgba(243, 243, 243, 0.5), transparent);\n    top: 0;\n    left: -150px;\n    height: 100%;\n    width: 150px;\n    animation: ${waves} 2s cubic-bezier(0.4, 0, 0.2, 1) infinite;\n  }\n`;\n\nconst Skeleton: React.FC<SkeletonProps> = ({ variant = VARIANT.RECT, animation = ANIMATION.PULSE, ...props }) => {\n  if (animation === ANIMATION.WAVES) {\n    return <Waves variant={variant} {...props} />;\n  }\n\n  return <Pulse variant={variant} {...props} />;\n};\n\nexport default Skeleton;\n","import styled from 'styled-components'\n\nconst airdropContainer = styled.div`\n  align-self: baseline;\n  background-image: linear-gradient(#2E343E, #323E51);\n  border-radius: 30px;\n  display: flex;\n  flex-direction: column;\n  padding: 10px;\n  position: relative;\n  text-align: center;\n  margin-bottom: 0px;\n  border: 1px solid #FFFF;\n  box-shadow: 0px 0px 0px #A5A5A5;\n  border: 1px;\n  border-style: solid !important;\n  border-color: #FFFFFF !important;\n`\n\nexport default airdropContainer","import React, { useCallback, useState } from 'react'\nimport Page from 'components/layout/containers/page'\nimport { Flex } from '@pancakeswap-libs/uikit'\nimport { useWallet } from \"@binance-chain/bsc-use-wallet\"\nimport TypographyTitle from 'components/layout/typography/typographyTitle'\nimport TypographyBold from 'components/layout/typography/typographyBold'\nimport Typography from 'components/layout/typography/typography'\nimport { Skeleton } from 'components/Skeleton'\nimport DashboardContainer from 'components/layout/containers/airdropContainer'\nimport useTokenBalance from 'hooks/useTokenBalance'\nimport { getCakeAddress } from 'utils/addressHelpers'\nimport { FaAward, FaClipboard, FaExternalLinkAlt } from 'react-icons/fa';\nimport { Container } from 'react-bootstrap'\nimport styled, { keyframes } from 'styled-components'\nimport { getBalanceNumber } from \"../../utils/formatBalance\"\n\nconst ContentCard = styled(Container)`\n  background-image: linear-gradient(to right, #333B4C, #37404E);\n  border-radius: 20px;\n  flex-direction: column;\n  justify-content: space-around;\n  position: center;\n  text-align: center;\n  padding: 15px;\n`\n\nconst TierCard = styled(Container)`\n  background-image: linear-gradient(to right, #353E50, #3D4853);\n  border-radius: 20px;\n  flex-direction: column;\n  justify-content: space-around;\n  position: center;\n  text-align: center;\n  padding: 15px;\n  border: 2px;\n  border-style: solid !important;\n  border-color: #808080 !important;\n`\n\nconst TitleCard = styled(Container)`\n  background-image: linear-gradient(to right, #353E50, #3D4853);\n  border-radius: 20px;\n  flex-direction: column;\n  justify-content: space-around;\n  position: center;\n  text-align: center;\n  padding: 20px;\n`\n\nconst Dashboard = () => {\n  const { account } = useWallet()\n\n  const between = (x: any, min: number, max: number): boolean => {\n    return x >= min && x <= max;\n  }\n\n  const evaluateTier = (balance: number): number => {\n    if (between(balance, 100, 1000)) return 1;\n    if (between(balance, 1000, 5000)) return 2;\n    if (between(balance, 5000, 10000)) return 3;\n    if (balance > 10000) return 4;\n    return 0;\n  }\n\n  // wallet balance rvrs/vervrs\n  const rvrsBalanceNo = getBalanceNumber(useTokenBalance(getCakeAddress()));\n  const rvrsBalanceStr = rvrsBalanceNo.toLocaleString('en-us', { maximumFractionDigits: 2, minimumFractionDigits: 2 })\n\n  return (\n    <Page>\n      <DashboardContainer>\n        <TitleCard style={{ marginBottom: '10px', marginTop: '0px' }}>\n          <TypographyTitle style={{ marginTop: '15px', marginBottom: '15px' }}>\n            <div>Dashboard&nbsp;</div>\n            <a\n              href={`https://explorer.harmony.one/address/${account}`}\n              className=\"nav-icon\"\n              onClick={() => navigator.clipboard.writeText(`${account}`)}>\n\n              <Typography>{account.substring(0, 16)}...&nbsp;<FaExternalLinkAlt /></Typography>\n            </a>\n          </TypographyTitle>\n\n        </TitleCard>\n        <Flex justifyContent=\"center\">\n          <ContentCard style={{ marginRight: '7px' }}>\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>veRVRS Balance</Typography>\n          </ContentCard>\n          <TierCard style={{ marginRight: '7px' }}>\n            <TypographyBold style={{ marginBottom: '5px' }}>Current Tier</TypographyBold>\n            <Typography>Silver Reversor <FaAward /></Typography>\n          </TierCard>\n          <ContentCard>\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>RVRS Balance</Typography>\n          </ContentCard>\n        </Flex>\n        <Flex justifyContent=\"center\" marginTop=\"10px\">\n          <ContentCard style={{ marginRight: '7px' }}>\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>veRVRS Cap</Typography>\n          </ContentCard>\n          <ContentCard style={{ marginRight: '7px' }} >\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>To Reach Cap</Typography>\n          </ContentCard>\n          <ContentCard >\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>Staked RVRS</Typography>\n          </ContentCard>\n        </Flex>\n        <Flex justifyContent=\"center\" marginTop=\"10px\">\n          <ContentCard style={{ marginRight: '7px' }}>\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>Expected Yearly Returns</Typography>\n          </ContentCard>\n          <ContentCard>\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>Treasury Balance</Typography>\n          </ContentCard>\n        </Flex>\n        <Flex justifyContent=\"center\" marginTop=\"10px\">\n          <ContentCard>\n            <TypographyBold style={{ marginBottom: '5px' }}><Skeleton /></TypographyBold>\n            <Typography>RVRS Per $1 Worth of Treasury</Typography>\n          </ContentCard>\n        </Flex>\n      </DashboardContainer>\n    </Page>\n  )\n}\n\nexport default Dashboard"],"sourceRoot":""}